start cypress-mochawesome-reporter 3.8.2
cwd: /Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation
cypress.json: {"configFile":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress.config.js","testingType":"e2e","projectId":"8axud3","reporter":"cypress-mochawesome-reporter","reporterOptions":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true,"reportDir":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/reports/html"},"baseUrl":"https://staging-api.bootcampshub.ai/api","setupNodeEvents":"[Function setupNodeEvents]","projectRoot":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation","projectName":"BootcampsHub-App-API-Automation","repoRoot":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation","rawJson":{"projectId":"8axud3","reporter":"cypress-mochawesome-reporter","reporterOptions":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true},"e2e":{"baseUrl":"https://staging-api.bootcampshub.ai/api","setupNodeEvents":"[Function setupNodeEvents]"},"baseUrl":"https://staging-api.bootcampshub.ai/api","setupNodeEvents":"[Function setupNodeEvents]","envFile":{},"projectRoot":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation","projectName":"BootcampsHub-App-API-Automation","repoRoot":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation"},"morgan":false,"isTextTerminal":true,"socketId":"h8dqvin8h8","report":true,"animationDistanceThreshold":5,"arch":"x64","blockHosts":null,"chromeWebSecurity":true,"clientCertificates":[],"defaultCommandTimeout":4000,"downloadsFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/downloads","env":{},"execTimeout":60000,"experimentalCspAllowList":false,"experimentalFetchPolyfill":false,"experimentalInteractiveRunEvents":false,"experimentalRunAllSpecs":false,"experimentalMemoryManagement":false,"experimentalModifyObstructiveThirdPartyCode":false,"experimentalSkipDomainInjection":null,"experimentalJustInTimeCompile":false,"experimentalOriginDependencies":false,"experimentalSourceRewriting":false,"experimentalSingleTabRunMode":false,"experimentalStudio":false,"experimentalWebKitSupport":false,"fileServerFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation","fixturesFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/fixtures","excludeSpecPattern":"*.hot-update.js","includeShadowDom":false,"keystrokeDelay":0,"modifyObstructiveCode":true,"numTestsKeptInMemory":0,"platform":"darwin","pageLoadTimeout":60000,"port":58266,"redirectionLimit":20,"requestTimeout":5000,"resolvedNodePath":"/usr/local/bin/node","resolvedNodeVersion":"20.18.0","responseTimeout":30000,"retries":{"runMode":0,"openMode":0},"screenshotOnRunFailure":true,"screenshotsFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/screenshots","slowTestThreshold":10000,"scrollBehavior":"top","supportFile":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/support/e2e.js","supportFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/support","taskTimeout":60000,"testIsolation":true,"trashAssetsBeforeRuns":true,"userAgent":null,"video":false,"videoCompression":false,"videosFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/videos","viewportHeight":660,"viewportWidth":1000,"waitForAnimations":true,"watchForFileChanges":false,"specPattern":"cypress/e2e/**/*.cy.{js,jsx,ts,tsx}","additionalIgnorePattern":[],"autoOpen":false,"browsers":[{"name":"chrome","family":"chromium","channel":"stable","displayName":"Chrome","version":"131.0.6778.86","path":"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome","minSupportedVersion":64,"majorVersion":"131"},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"118.0.5993.159","path":"","majorVersion":118}],"clientRoute":"/__/","cypressBinaryRoot":"/Users/anonno/Library/Caches/Cypress/13.15.2/Cypress.app/Contents/Resources/app","devServerPublicPathRoute":"/__cypress/src","hosts":null,"isInteractive":true,"namespace":"__cypress","reporterRoute":"/__cypress/reporter","socketIoCookie":"__socket","socketIoRoute":"/__socket","version":"13.15.2","protocolEnabled":false,"hideCommandLog":false,"hideRunnerUi":false,"cypressEnv":"production","resolved":{"animationDistanceThreshold":{"value":5,"from":"default"},"arch":{"value":"x64","from":"default"},"baseUrl":{"value":"https://staging-api.bootcampshub.ai/api","from":"config"},"blockHosts":{"value":null,"from":"default"},"chromeWebSecurity":{"value":true,"from":"default"},"clientCertificates":{"value":[],"from":"default"},"defaultCommandTimeout":{"value":4000,"from":"default"},"downloadsFolder":{"value":"cypress/downloads","from":"default"},"env":{},"execTimeout":{"value":60000,"from":"default"},"experimentalCspAllowList":{"value":false,"from":"default"},"experimentalFetchPolyfill":{"value":false,"from":"default"},"experimentalInteractiveRunEvents":{"value":false,"from":"default"},"experimentalRunAllSpecs":{"value":false,"from":"default"},"experimentalMemoryManagement":{"value":false,"from":"default"},"experimentalModifyObstructiveThirdPartyCode":{"value":false,"from":"default"},"experimentalSkipDomainInjection":{"value":null,"from":"default"},"experimentalJustInTimeCompile":{"value":false,"from":"default"},"experimentalOriginDependencies":{"value":false,"from":"default"},"experimentalSourceRewriting":{"value":false,"from":"default"},"experimentalSingleTabRunMode":{"value":false,"from":"default"},"experimentalStudio":{"value":false,"from":"default"},"experimentalWebKitSupport":{"value":false,"from":"default"},"fileServerFolder":{"value":"","from":"default"},"fixturesFolder":{"value":"cypress/fixtures","from":"default"},"excludeSpecPattern":{"value":"*.hot-update.js","from":"default"},"includeShadowDom":{"value":false,"from":"default"},"keystrokeDelay":{"value":0,"from":"default"},"modifyObstructiveCode":{"value":true,"from":"default"},"numTestsKeptInMemory":{"value":0,"from":"config"},"platform":{"value":"darwin","from":"default"},"pageLoadTimeout":{"value":60000,"from":"default"},"port":{"value":null,"from":"default"},"projectId":{"value":"8axud3","from":"config"},"redirectionLimit":{"value":20,"from":"default"},"reporter":{"value":"cypress-mochawesome-reporter","from":"config"},"reporterOptions":{"value":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true},"from":"config"},"requestTimeout":{"value":5000,"from":"default"},"resolvedNodePath":{"value":null,"from":"default"},"resolvedNodeVersion":{"value":null,"from":"default"},"responseTimeout":{"value":30000,"from":"default"},"retries":{"value":{"runMode":0,"openMode":0},"from":"default"},"screenshotOnRunFailure":{"value":true,"from":"default"},"screenshotsFolder":{"value":"cypress/screenshots","from":"default"},"slowTestThreshold":{"value":10000,"from":"default"},"scrollBehavior":{"value":"top","from":"default"},"supportFile":{"value":"cypress/support/e2e.{js,jsx,ts,tsx}","from":"default"},"supportFolder":{"value":false,"from":"default"},"taskTimeout":{"value":60000,"from":"default"},"testIsolation":{"value":true,"from":"default"},"trashAssetsBeforeRuns":{"value":true,"from":"default"},"userAgent":{"value":null,"from":"default"},"video":{"value":false,"from":"default"},"videoCompression":{"value":false,"from":"default"},"videosFolder":{"value":"cypress/videos","from":"default"},"viewportHeight":{"value":660,"from":"default"},"viewportWidth":{"value":1000,"from":"default"},"waitForAnimations":{"value":true,"from":"default"},"watchForFileChanges":{"value":false,"from":"config"},"specPattern":{"value":"cypress/e2e/**/*.cy.{js,jsx,ts,tsx}","from":"default"},"browsers":{"value":[{"name":"chrome","family":"chromium","channel":"stable","displayName":"Chrome","version":"131.0.6778.86","path":"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome","minSupportedVersion":64,"majorVersion":"131"},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"118.0.5993.159","path":"","majorVersion":118,"isHeadless":true,"isHeaded":false}],"from":"runtime"},"hosts":{"value":null,"from":"default"},"isInteractive":{"value":true,"from":"default"},"configFile":{"value":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress.config.js","from":"plugin"},"testingType":{"value":"e2e","from":"plugin"}},"remote":{"origin":"https://staging-api.bootcampshub.ai","strategy":"http","fileServer":null,"domainName":"bootcampshub.ai","props":{"port":"443","protocol":"https:","subdomain":"staging-api","domain":"bootcampshub","tld":"ai"}},"browser":null,"specs":[],"proxyUrl":"http://localhost:58266","browserUrl":"https://staging-api.bootcampshub.ai/__/","reporterUrl":"https://staging-api.bootcampshub.ai/__cypress/reporter","proxyServer":"http://localhost:58266","state":{}}
simple config: {"jsonDir":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/reports/html/.jsons","reporterOptions":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true,"reportDir":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/reports/html"},"screenshotsDir":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/screenshots","videosFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/videos","outputDir":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/reports/html","removeJsonsFolderAfterMerge":true}
report before enhance: {"stats":{"suites":13,"tests":13,"passes":11,"pending":2,"failures":0,"testsRegistered":13,"passPercent":84.61538461538461,"pendingPercent":15.384615384615385,"other":0,"hasOther":false,"skipped":0,"hasSkipped":false,"start":"2024-11-24T10:39:48.489Z","end":"2024-11-24T10:40:34.413Z","duration":45924},"results":[{"uuid":"61078f36-76b3-42e4-9d42-5a05a31748b1","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.2 verifyUser.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.2 verifyUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"35443d73-c5c0-417e-b13a-f0ebcdd6c1d8","title":"Verify user successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to verify user","fullTitle":"Verify user successfully with status code 200 should be able to verify user","timedOut":null,"duration":544,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"// const otp = \"863182\";\ncy.request({\n  method: \"POST\",\n  url: \"/user/verify\",\n  headers: {\n    Authorization: `Bearer ${studentToken}`\n  },\n  body: {\n    // otp: otp,\n    // channel: \"email\",\n    // userId: studentToken, // Use student ID obtained from fixture\n  }\n}).then(response => {\n  if (response.status === 200) {\n    cy.log(\"Verification successful\"); // Log successful verification\n    console.log(\"Verification successful\");\n    // Assertions\n    expect(response.status).to.eq(200); // Check if the status code is 200\n    expect(response.body).to.have.property(\"success\", true); // Check if the success property is true\n    expect(response.duration).to.be.lessThan(3000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"60a8b24b-7727-4786-a179-de6df88538f8","parentUUID":"35443d73-c5c0-417e-b13a-f0ebcdd6c1d8","isHook":false,"skipped":false}],"suites":[],"passes":["60a8b24b-7727-4786-a179-de6df88538f8"],"failures":[],"pending":[],"skipped":[],"duration":544,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"54622a08-8e00-4d11-8b76-455548559f77","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.3 sendOtp.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.3 sendOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2be7bc3e-bd98-42db-894f-e206a5e15475","title":"Get OTP on my email successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Should be able to send OTP to email","fullTitle":"Get OTP on my email successfully with status code 200 Should be able to send OTP to email","timedOut":null,"duration":986,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/sendotp\",\n  body: {\n    userId: userId,\n    channel: \"email\",\n    captchaToken: \"\"\n  }\n}).then(response => {\n  if (response.status === 200) {\n    cy.log(\"Send OTP successful\");\n    console.log(\"Send OTP successful\");\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(3000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});\n// .catch((error) => {\n//   cy.log(\"Request failed:\", error.message);\n// });","err":{},"uuid":"dba218ed-32d8-4e50-bf6c-59e01cf72320","parentUUID":"2be7bc3e-bd98-42db-894f-e206a5e15475","isHook":false,"skipped":false}],"suites":[],"passes":["dba218ed-32d8-4e50-bf6c-59e01cf72320"],"failures":[],"pending":[],"skipped":[],"duration":986,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"8e04f4bd-77e3-4969-8c34-ee2597e97b05","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.4 verifyOtp.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.4 verifyOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"e504d33b-4ac5-4a46-9e65-9769f64f3a5f","title":"Verify OTP with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to verify","fullTitle":"Verify OTP with status code 200 should be able to verify","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"const otp = \"731258\";\ncy.request({\n  method: \"POST\",\n  url: \"/user/verifyotp\",\n  body: {\n    otp: otp,\n    channel: \"email\",\n    userId: studentID // Use student ID obtained from fixture\n  }\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    cy.log(\"OTP verification successful\");\n    console.log(\"OTP verification successful\");\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"5c8fbae7-537f-49fd-8245-f4319fb493d9","parentUUID":"e504d33b-4ac5-4a46-9e65-9769f64f3a5f","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["5c8fbae7-537f-49fd-8245-f4319fb493d9"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"5236a6d3-d936-47ad-ad55-4c5c590fc3aa","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.5 forgotPassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.5 forgotPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"fe607675-8b3a-46d1-a6b4-6ab45eac02f8","title":"Forgot password functionality if I forgot my password successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if a user can use forgot password functionality in the browser or not","fullTitle":"Forgot password functionality if I forgot my password successfully with status code 200 Checking if a user can use forgot password functionality in the browser or not","timedOut":null,"duration":861,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/password/forgot\",\n  body: {\n    phone: studentNumber,\n    email: studentEmail,\n    channel: \"email\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"isOtpSend\", true);\n    cy.log(\"Forgot Password Response:\", response.body);\n    console.log(\"Forgot Password Response:\", response.body);\n  } else {\n    cy.log(\"Forgot password failed due to: \", response.body.error);\n  }\n});","err":{},"uuid":"38ef6099-f395-4ab2-8b37-fe47ae6c63f2","parentUUID":"fe607675-8b3a-46d1-a6b4-6ab45eac02f8","isHook":false,"skipped":false}],"suites":[],"passes":["38ef6099-f395-4ab2-8b37-fe47ae6c63f2"],"failures":[],"pending":[],"skipped":[],"duration":861,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"34a95817-61dc-4ea2-b3f1-79d2c908a12f","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.6 resetPassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.6 resetPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"7b95501d-5baa-4f9c-899b-f1450d48270f","title":"Reset my password successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Reset my password successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/password/reset\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    email: studentEmail,\n    phone: studentNumber,\n    channel: \"email\",\n    otp: otp,\n    password: password\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"1149338a-7405-433e-b003-def5a7880e94","parentUUID":"7b95501d-5baa-4f9c-899b-f1450d48270f","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["1149338a-7405-433e-b003-def5a7880e94"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"032dbdcf-fb89-43c2-bc09-157d7f512287","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.7 changePassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.7 changePassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"87f5f37c-fa25-41e6-8d79-74decd453b84","title":"Change my password successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Change my password successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":728,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/changepassword\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    currentPassword: \"Anonno#1\",\n    newPassword: \"Anonno#1\",\n    confirmPassword: \"Anonno#1\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b6716415-0985-41ba-a0c0-ae4bfbe0ae88","parentUUID":"87f5f37c-fa25-41e6-8d79-74decd453b84","isHook":false,"skipped":false}],"suites":[],"passes":["b6716415-0985-41ba-a0c0-ae4bfbe0ae88"],"failures":[],"pending":[],"skipped":[],"duration":728,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"83fa1980-7228-4dc6-876c-57cd874e44b2","title":"","fullFile":"cypress/e2e/1. UserService/02. UpdateImage/1.02.1 updateImage.cy.js","file":"cypress/e2e/1. UserService/02. UpdateImage/1.02.1 updateImage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"1f395956-9c5e-4758-ae02-24daa95c1ca6","title":"Update Profile Picture API","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Should successfully update the profile picture","fullTitle":"Update Profile Picture API Should successfully update the profile picture","timedOut":null,"duration":889,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"const imagePath = \"/images/image1.png\";\ncy.fixture(imagePath, \"binary\").then(Cypress.Blob.binaryStringToBlob).then(blob => {\n  const formData = new FormData();\n  formData.append(\"image\", blob, \"image1.png\");\n  // Send PATCH request with FormData\n  return cy.request({\n    method: \"PATCH\",\n    url: \"/user/updateimage\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    },\n    body: formData,\n    failOnStatusCode: false\n  });\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    cy.log(\"Profile picture updated successfully\");\n    //   cy.log(JSON.stringify(response.body, null, 2));\n  } else {\n    cy.log(\"Profile picture update failed with status code: \", response.status);\n    cy.log(response.body.error || \"Unknown error\");\n  }\n});","err":{},"uuid":"1b2f4f13-a584-4554-bb4f-2513d71c8105","parentUUID":"1f395956-9c5e-4758-ae02-24daa95c1ca6","isHook":false,"skipped":false}],"suites":[],"passes":["1b2f4f13-a584-4554-bb4f-2513d71c8105"],"failures":[],"pending":[],"skipped":[],"duration":889,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"5ed2f05b-b9c0-4fbe-8c48-96c459d6b0fb","title":"","fullFile":"cypress/e2e/1. UserService/04. SyncPushToken/1.04.1 syncPushToken.cy.js","file":"cypress/e2e/1. UserService/04. SyncPushToken/1.04.1 syncPushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"a48cbdf3-e1a2-452e-aa72-e2461d1d75d3","title":"sync push token successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the sync up push token or not","fullTitle":"sync push token successfully with status code 200 Checking if the sync up push token or not","timedOut":null,"duration":490,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/sync-pushtoken\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    pushToken: \"user\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"00fd5701-5d71-4bb8-a9a2-084c0c128260","parentUUID":"a48cbdf3-e1a2-452e-aa72-e2461d1d75d3","isHook":false,"skipped":false}],"suites":[],"passes":["00fd5701-5d71-4bb8-a9a2-084c0c128260"],"failures":[],"pending":[],"skipped":[],"duration":490,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"31d152b0-3341-4abd-9c9b-eefd773cb9ee","title":"","fullFile":"cypress/e2e/1. UserService/03. UpdatUser/1.03.1 updateUser.cy.js","file":"cypress/e2e/1. UserService/03. UpdatUser/1.03.1 updateUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"5a1d4e1f-e1b6-4329-8eba-a9cf7e62f3ac","title":"Update user successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Update user successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":491,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/updateuser\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    firstName: \"Anonno\",\n    lastName: \"Das\",\n    about: \"Nothing\",\n    personalData: {\n      address: {\n        street: \"\",\n        city: \"Narail\",\n        postalCode: \"7521\",\n        state: \"Khulna\",\n        country: \"Bangladesh\"\n      },\n      socialMedia: {\n        facebook: \"\",\n        github: \"\",\n        instagram: \"\",\n        linkedin: \"\",\n        twitter: \"\"\n      },\n      resume: \"\",\n      bio: \"Don't have bio\"\n    }\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"f9fb2ebf-01b7-482c-8dd5-c343cd6dac0b","parentUUID":"5a1d4e1f-e1b6-4329-8eba-a9cf7e62f3ac","isHook":false,"skipped":false}],"suites":[],"passes":["f9fb2ebf-01b7-482c-8dd5-c343cd6dac0b"],"failures":[],"pending":[],"skipped":[],"duration":491,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"8d44e2eb-2885-42dc-95ec-98eecd9e629b","title":"","fullFile":"cypress/e2e/1. UserService/05. RemovePushToken/1.05.1 removePushToken.cy.js","file":"cypress/e2e/1. UserService/05. RemovePushToken/1.05.1 removePushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"4f20c263-0e00-48e9-b5f5-66cbe5e563c6","title":"Remove push token successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the remove push token or not","fullTitle":"Remove push token successfully with status code 200 Checking if the remove push token or not","timedOut":null,"duration":488,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/remove-pushtoken\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    token: \"user\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Remove push token Response:\", response.body);\n    console.log(\"Remove push token Response:\", response.body);\n  } else {\n    cy.log(\"Remove push token failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"727b9ee2-f76d-400a-8b57-8927c80db1ed","parentUUID":"4f20c263-0e00-48e9-b5f5-66cbe5e563c6","isHook":false,"skipped":false}],"suites":[],"passes":["727b9ee2-f76d-400a-8b57-8927c80db1ed"],"failures":[],"pending":[],"skipped":[],"duration":488,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"187fe202-dbbd-463f-a348-53b26a1f6460","title":"","fullFile":"cypress/e2e/1. UserService/06. FilterUser/1.06.1 FilterUser.cy.js","file":"cypress/e2e/1. UserService/06. FilterUser/1.06.1 FilterUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"66ffeaae-884d-4e09-93b7-172e5f524c32","title":"User filtering successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able user filter or not","fullTitle":"User filtering successfully with status code 200 Checking if should be able user filter or not","timedOut":null,"duration":449,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/filter\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    program: \"\",\n    session: \"\",\n    query: \"anonno\",\n    global: true\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"User filter Response:\", response.body);\n    console.log(\"User filter Response:\", response.body);\n  } else {\n    cy.log(\"User filtering failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"87de9ffb-1d22-4731-9dc0-5e753b23851b","parentUUID":"66ffeaae-884d-4e09-93b7-172e5f524c32","isHook":false,"skipped":false}],"suites":[],"passes":["87de9ffb-1d22-4731-9dc0-5e753b23851b"],"failures":[],"pending":[],"skipped":[],"duration":449,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ac8aee9f-8351-4520-84b6-d5b56eda1ca0","title":"","fullFile":"cypress/e2e/1. UserService/07. UpdateUserStatus/1.07.1 updateUserStatus.cy.js","file":"cypress/e2e/1. UserService/07. UpdateUserStatus/1.07.1 updateUserStatus.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"ea9d9f57-6f0a-4903-9cc7-afa4fc2c98ee","title":"Update User Status successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able update user status or not","fullTitle":"Update User Status successfully with status code 200 Checking if should be able update user status or not","timedOut":null,"duration":517,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/updateuser\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    profileStatus: {\n      currentStatus: \"Busy Nai\",\n      recurring: {\n        isDailyRecurring: true,\n        fromTime: \"09:01 AM\",\n        toTime: \"05:00 PM\"\n      }\n    }\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"User status Response:\", response.body);\n    console.log(\"User status Response:\", response.body);\n  } else {\n    cy.log(\"Update user status failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"c36b3863-0679-4726-8bea-5b89cf57eb58","parentUUID":"ea9d9f57-6f0a-4903-9cc7-afa4fc2c98ee","isHook":false,"skipped":false}],"suites":[],"passes":["c36b3863-0679-4726-8bea-5b89cf57eb58"],"failures":[],"pending":[],"skipped":[],"duration":517,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"d6520622-1cbb-4041-9310-0837fc0caf95","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.1 userLogin.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.1 userLogin.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"25f9ea82-afce-4654-9bef-a7bd94f10e60","title":"Login to the portal with valid credential and get stats code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to login","fullTitle":"Login to the portal with valid credential and get stats code 200 should be able to login","timedOut":null,"duration":1478,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/login\",\n  body: {\n    email: userEmail,\n    password: userPassword\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    const {\n      token,\n      user\n    } = response.body;\n    const studentToken = token;\n    const studentLoginID = user._id;\n    // Store token and login ID to fixtures\n    cy.writeFile(\"cypress/fixtures/studentToken.json\", {\n      studentLoginToken: studentToken\n    });\n    cy.writeFile(\"cypress/fixtures/studentLoginID.json\", {\n      userId: studentLoginID\n    });\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"token\");\n    expect(response.body.success).to.eq(true);\n    expect(response.duration).to.be.lessThan(2000);\n    cy.log(\"User Token:\", studentToken);\n    cy.log(\"User ID:\", studentLoginID);\n    console.log(\"User Token:\", studentToken);\n    console.log(\"User ID:\", studentLoginID);\n  } else {\n    cy.log(\"Login failed with status:\", response.status);\n    cy.log(`Login failed  ${response.body.error}`);\n    cy.log(`Login failed with status code ${response.status}`);\n  }\n});","err":{},"uuid":"11d1bf59-d9f0-4d2f-b4a1-eaa4c84715d9","parentUUID":"25f9ea82-afce-4654-9bef-a7bd94f10e60","isHook":false,"skipped":false}],"suites":[],"passes":["11d1bf59-d9f0-4d2f-b4a1-eaa4c84715d9"],"failures":[],"pending":[],"skipped":[],"duration":1478,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000}],"meta":{"mocha":{"version":"7.0.1"},"mochawesome":{"options":{"quiet":true,"reportFilename":"mochawesome","saveHtml":false,"saveJson":true,"consoleReporter":"spec","useInlineDiffs":false,"code":true},"version":"7.1.3"},"marge":{"options":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true,"overwrite":false,"html":false,"json":true,"reportDir":"cypress/reports/html/.jsons"},"version":"6.2.0"}}}
baseFolder: cypress/e2e/1. UserService
attach media for test "Verify user successfully with status code 200 should be able to verify user"
no context
attach media for test "Get OTP on my email successfully with status code 200 Should be able to send OTP to email"
no context
attach media for test "Verify OTP with status code 200 should be able to verify"
no context
attach media for test "Forgot password functionality if I forgot my password successfully with status code 200 Checking if a user can use forgot password functionality in the browser or not"
no context
attach media for test "Reset my password successfully with status code 200 Checking if the user can reset their password or not"
no context
attach media for test "Change my password successfully with status code 200 Checking if the user can reset their password or not"
no context
attach media for test "Update Profile Picture API Should successfully update the profile picture"
no context
attach media for test "sync push token successfully with status code 200 Checking if the sync up push token or not"
no context
attach media for test "Update user successfully with status code 200 Checking if the user can reset their password or not"
no context
attach media for test "Remove push token successfully with status code 200 Checking if the remove push token or not"
no context
attach media for test "User filtering successfully with status code 200 Checking if should be able user filter or not"
no context
attach media for test "Update User Status successfully with status code 200 Checking if should be able update user status or not"
no context
attach media for test "Login to the portal with valid credential and get stats code 200 should be able to login"
no context
report after enhance: {"stats":{"suites":13,"tests":13,"passes":11,"pending":2,"failures":0,"testsRegistered":13,"passPercent":84.61538461538461,"pendingPercent":15.384615384615385,"other":0,"hasOther":false,"skipped":0,"hasSkipped":false,"start":"2024-11-24T10:39:48.489Z","end":"2024-11-24T10:40:34.413Z","duration":45924},"results":[{"uuid":"61078f36-76b3-42e4-9d42-5a05a31748b1","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.2 verifyUser.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.2 verifyUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"35443d73-c5c0-417e-b13a-f0ebcdd6c1d8","title":"Verify user successfully with status code 200","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.2 verifyUser.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.2 verifyUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to verify user","fullTitle":"Verify user successfully with status code 200 should be able to verify user","timedOut":null,"duration":544,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"// const otp = \"863182\";\ncy.request({\n  method: \"POST\",\n  url: \"/user/verify\",\n  headers: {\n    Authorization: `Bearer ${studentToken}`\n  },\n  body: {\n    // otp: otp,\n    // channel: \"email\",\n    // userId: studentToken, // Use student ID obtained from fixture\n  }\n}).then(response => {\n  if (response.status === 200) {\n    cy.log(\"Verification successful\"); // Log successful verification\n    console.log(\"Verification successful\");\n    // Assertions\n    expect(response.status).to.eq(200); // Check if the status code is 200\n    expect(response.body).to.have.property(\"success\", true); // Check if the success property is true\n    expect(response.duration).to.be.lessThan(3000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"60a8b24b-7727-4786-a179-de6df88538f8","parentUUID":"35443d73-c5c0-417e-b13a-f0ebcdd6c1d8","isHook":false,"skipped":false}],"suites":[],"passes":["60a8b24b-7727-4786-a179-de6df88538f8"],"failures":[],"pending":[],"skipped":[],"duration":544,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"54622a08-8e00-4d11-8b76-455548559f77","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.3 sendOtp.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.3 sendOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2be7bc3e-bd98-42db-894f-e206a5e15475","title":"Get OTP on my email successfully with status code 200","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.3 sendOtp.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.3 sendOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Should be able to send OTP to email","fullTitle":"Get OTP on my email successfully with status code 200 Should be able to send OTP to email","timedOut":null,"duration":986,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/sendotp\",\n  body: {\n    userId: userId,\n    channel: \"email\",\n    captchaToken: \"\"\n  }\n}).then(response => {\n  if (response.status === 200) {\n    cy.log(\"Send OTP successful\");\n    console.log(\"Send OTP successful\");\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(3000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});\n// .catch((error) => {\n//   cy.log(\"Request failed:\", error.message);\n// });","err":{},"uuid":"dba218ed-32d8-4e50-bf6c-59e01cf72320","parentUUID":"2be7bc3e-bd98-42db-894f-e206a5e15475","isHook":false,"skipped":false}],"suites":[],"passes":["dba218ed-32d8-4e50-bf6c-59e01cf72320"],"failures":[],"pending":[],"skipped":[],"duration":986,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"8e04f4bd-77e3-4969-8c34-ee2597e97b05","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.4 verifyOtp.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.4 verifyOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"e504d33b-4ac5-4a46-9e65-9769f64f3a5f","title":"Verify OTP with status code 200","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.4 verifyOtp.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.4 verifyOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to verify","fullTitle":"Verify OTP with status code 200 should be able to verify","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"const otp = \"731258\";\ncy.request({\n  method: \"POST\",\n  url: \"/user/verifyotp\",\n  body: {\n    otp: otp,\n    channel: \"email\",\n    userId: studentID // Use student ID obtained from fixture\n  }\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    cy.log(\"OTP verification successful\");\n    console.log(\"OTP verification successful\");\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"5c8fbae7-537f-49fd-8245-f4319fb493d9","parentUUID":"e504d33b-4ac5-4a46-9e65-9769f64f3a5f","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["5c8fbae7-537f-49fd-8245-f4319fb493d9"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"5236a6d3-d936-47ad-ad55-4c5c590fc3aa","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.5 forgotPassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.5 forgotPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"fe607675-8b3a-46d1-a6b4-6ab45eac02f8","title":"Forgot password functionality if I forgot my password successfully with status code 200","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.5 forgotPassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.5 forgotPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if a user can use forgot password functionality in the browser or not","fullTitle":"Forgot password functionality if I forgot my password successfully with status code 200 Checking if a user can use forgot password functionality in the browser or not","timedOut":null,"duration":861,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/password/forgot\",\n  body: {\n    phone: studentNumber,\n    email: studentEmail,\n    channel: \"email\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"isOtpSend\", true);\n    cy.log(\"Forgot Password Response:\", response.body);\n    console.log(\"Forgot Password Response:\", response.body);\n  } else {\n    cy.log(\"Forgot password failed due to: \", response.body.error);\n  }\n});","err":{},"uuid":"38ef6099-f395-4ab2-8b37-fe47ae6c63f2","parentUUID":"fe607675-8b3a-46d1-a6b4-6ab45eac02f8","isHook":false,"skipped":false}],"suites":[],"passes":["38ef6099-f395-4ab2-8b37-fe47ae6c63f2"],"failures":[],"pending":[],"skipped":[],"duration":861,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"34a95817-61dc-4ea2-b3f1-79d2c908a12f","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.6 resetPassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.6 resetPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"7b95501d-5baa-4f9c-899b-f1450d48270f","title":"Reset my password successfully with status code 200","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.6 resetPassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.6 resetPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Reset my password successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/password/reset\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    email: studentEmail,\n    phone: studentNumber,\n    channel: \"email\",\n    otp: otp,\n    password: password\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"1149338a-7405-433e-b003-def5a7880e94","parentUUID":"7b95501d-5baa-4f9c-899b-f1450d48270f","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["1149338a-7405-433e-b003-def5a7880e94"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"032dbdcf-fb89-43c2-bc09-157d7f512287","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.7 changePassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.7 changePassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"87f5f37c-fa25-41e6-8d79-74decd453b84","title":"Change my password successfully with status code 200","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.7 changePassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.7 changePassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Change my password successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":728,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/changepassword\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    currentPassword: \"Anonno#1\",\n    newPassword: \"Anonno#1\",\n    confirmPassword: \"Anonno#1\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b6716415-0985-41ba-a0c0-ae4bfbe0ae88","parentUUID":"87f5f37c-fa25-41e6-8d79-74decd453b84","isHook":false,"skipped":false}],"suites":[],"passes":["b6716415-0985-41ba-a0c0-ae4bfbe0ae88"],"failures":[],"pending":[],"skipped":[],"duration":728,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"83fa1980-7228-4dc6-876c-57cd874e44b2","title":"","fullFile":"cypress/e2e/1. UserService/02. UpdateImage/1.02.1 updateImage.cy.js","file":"cypress/e2e/1. UserService/02. UpdateImage/1.02.1 updateImage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"1f395956-9c5e-4758-ae02-24daa95c1ca6","title":"Update Profile Picture API","fullFile":"cypress/e2e/1. UserService/02. UpdateImage/1.02.1 updateImage.cy.js","file":"cypress/e2e/1. UserService/02. UpdateImage/1.02.1 updateImage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Should successfully update the profile picture","fullTitle":"Update Profile Picture API Should successfully update the profile picture","timedOut":null,"duration":889,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"const imagePath = \"/images/image1.png\";\ncy.fixture(imagePath, \"binary\").then(Cypress.Blob.binaryStringToBlob).then(blob => {\n  const formData = new FormData();\n  formData.append(\"image\", blob, \"image1.png\");\n  // Send PATCH request with FormData\n  return cy.request({\n    method: \"PATCH\",\n    url: \"/user/updateimage\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    },\n    body: formData,\n    failOnStatusCode: false\n  });\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    cy.log(\"Profile picture updated successfully\");\n    //   cy.log(JSON.stringify(response.body, null, 2));\n  } else {\n    cy.log(\"Profile picture update failed with status code: \", response.status);\n    cy.log(response.body.error || \"Unknown error\");\n  }\n});","err":{},"uuid":"1b2f4f13-a584-4554-bb4f-2513d71c8105","parentUUID":"1f395956-9c5e-4758-ae02-24daa95c1ca6","isHook":false,"skipped":false}],"suites":[],"passes":["1b2f4f13-a584-4554-bb4f-2513d71c8105"],"failures":[],"pending":[],"skipped":[],"duration":889,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"5ed2f05b-b9c0-4fbe-8c48-96c459d6b0fb","title":"","fullFile":"cypress/e2e/1. UserService/04. SyncPushToken/1.04.1 syncPushToken.cy.js","file":"cypress/e2e/1. UserService/04. SyncPushToken/1.04.1 syncPushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"a48cbdf3-e1a2-452e-aa72-e2461d1d75d3","title":"sync push token successfully with status code 200","fullFile":"cypress/e2e/1. UserService/04. SyncPushToken/1.04.1 syncPushToken.cy.js","file":"cypress/e2e/1. UserService/04. SyncPushToken/1.04.1 syncPushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the sync up push token or not","fullTitle":"sync push token successfully with status code 200 Checking if the sync up push token or not","timedOut":null,"duration":490,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/sync-pushtoken\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    pushToken: \"user\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"00fd5701-5d71-4bb8-a9a2-084c0c128260","parentUUID":"a48cbdf3-e1a2-452e-aa72-e2461d1d75d3","isHook":false,"skipped":false}],"suites":[],"passes":["00fd5701-5d71-4bb8-a9a2-084c0c128260"],"failures":[],"pending":[],"skipped":[],"duration":490,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"31d152b0-3341-4abd-9c9b-eefd773cb9ee","title":"","fullFile":"cypress/e2e/1. UserService/03. UpdatUser/1.03.1 updateUser.cy.js","file":"cypress/e2e/1. UserService/03. UpdatUser/1.03.1 updateUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"5a1d4e1f-e1b6-4329-8eba-a9cf7e62f3ac","title":"Update user successfully with status code 200","fullFile":"cypress/e2e/1. UserService/03. UpdatUser/1.03.1 updateUser.cy.js","file":"cypress/e2e/1. UserService/03. UpdatUser/1.03.1 updateUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Update user successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":491,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/updateuser\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    firstName: \"Anonno\",\n    lastName: \"Das\",\n    about: \"Nothing\",\n    personalData: {\n      address: {\n        street: \"\",\n        city: \"Narail\",\n        postalCode: \"7521\",\n        state: \"Khulna\",\n        country: \"Bangladesh\"\n      },\n      socialMedia: {\n        facebook: \"\",\n        github: \"\",\n        instagram: \"\",\n        linkedin: \"\",\n        twitter: \"\"\n      },\n      resume: \"\",\n      bio: \"Don't have bio\"\n    }\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"f9fb2ebf-01b7-482c-8dd5-c343cd6dac0b","parentUUID":"5a1d4e1f-e1b6-4329-8eba-a9cf7e62f3ac","isHook":false,"skipped":false}],"suites":[],"passes":["f9fb2ebf-01b7-482c-8dd5-c343cd6dac0b"],"failures":[],"pending":[],"skipped":[],"duration":491,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"8d44e2eb-2885-42dc-95ec-98eecd9e629b","title":"","fullFile":"cypress/e2e/1. UserService/05. RemovePushToken/1.05.1 removePushToken.cy.js","file":"cypress/e2e/1. UserService/05. RemovePushToken/1.05.1 removePushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"4f20c263-0e00-48e9-b5f5-66cbe5e563c6","title":"Remove push token successfully with status code 200","fullFile":"cypress/e2e/1. UserService/05. RemovePushToken/1.05.1 removePushToken.cy.js","file":"cypress/e2e/1. UserService/05. RemovePushToken/1.05.1 removePushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the remove push token or not","fullTitle":"Remove push token successfully with status code 200 Checking if the remove push token or not","timedOut":null,"duration":488,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/remove-pushtoken\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    token: \"user\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Remove push token Response:\", response.body);\n    console.log(\"Remove push token Response:\", response.body);\n  } else {\n    cy.log(\"Remove push token failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"727b9ee2-f76d-400a-8b57-8927c80db1ed","parentUUID":"4f20c263-0e00-48e9-b5f5-66cbe5e563c6","isHook":false,"skipped":false}],"suites":[],"passes":["727b9ee2-f76d-400a-8b57-8927c80db1ed"],"failures":[],"pending":[],"skipped":[],"duration":488,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"187fe202-dbbd-463f-a348-53b26a1f6460","title":"","fullFile":"cypress/e2e/1. UserService/06. FilterUser/1.06.1 FilterUser.cy.js","file":"cypress/e2e/1. UserService/06. FilterUser/1.06.1 FilterUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"66ffeaae-884d-4e09-93b7-172e5f524c32","title":"User filtering successfully with status code 200","fullFile":"cypress/e2e/1. UserService/06. FilterUser/1.06.1 FilterUser.cy.js","file":"cypress/e2e/1. UserService/06. FilterUser/1.06.1 FilterUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able user filter or not","fullTitle":"User filtering successfully with status code 200 Checking if should be able user filter or not","timedOut":null,"duration":449,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/filter\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    program: \"\",\n    session: \"\",\n    query: \"anonno\",\n    global: true\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"User filter Response:\", response.body);\n    console.log(\"User filter Response:\", response.body);\n  } else {\n    cy.log(\"User filtering failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"87de9ffb-1d22-4731-9dc0-5e753b23851b","parentUUID":"66ffeaae-884d-4e09-93b7-172e5f524c32","isHook":false,"skipped":false}],"suites":[],"passes":["87de9ffb-1d22-4731-9dc0-5e753b23851b"],"failures":[],"pending":[],"skipped":[],"duration":449,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ac8aee9f-8351-4520-84b6-d5b56eda1ca0","title":"","fullFile":"cypress/e2e/1. UserService/07. UpdateUserStatus/1.07.1 updateUserStatus.cy.js","file":"cypress/e2e/1. UserService/07. UpdateUserStatus/1.07.1 updateUserStatus.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"ea9d9f57-6f0a-4903-9cc7-afa4fc2c98ee","title":"Update User Status successfully with status code 200","fullFile":"cypress/e2e/1. UserService/07. UpdateUserStatus/1.07.1 updateUserStatus.cy.js","file":"cypress/e2e/1. UserService/07. UpdateUserStatus/1.07.1 updateUserStatus.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able update user status or not","fullTitle":"Update User Status successfully with status code 200 Checking if should be able update user status or not","timedOut":null,"duration":517,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/updateuser\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    profileStatus: {\n      currentStatus: \"Busy Nai\",\n      recurring: {\n        isDailyRecurring: true,\n        fromTime: \"09:01 AM\",\n        toTime: \"05:00 PM\"\n      }\n    }\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"User status Response:\", response.body);\n    console.log(\"User status Response:\", response.body);\n  } else {\n    cy.log(\"Update user status failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"c36b3863-0679-4726-8bea-5b89cf57eb58","parentUUID":"ea9d9f57-6f0a-4903-9cc7-afa4fc2c98ee","isHook":false,"skipped":false}],"suites":[],"passes":["c36b3863-0679-4726-8bea-5b89cf57eb58"],"failures":[],"pending":[],"skipped":[],"duration":517,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"d6520622-1cbb-4041-9310-0837fc0caf95","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.1 userLogin.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.1 userLogin.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"25f9ea82-afce-4654-9bef-a7bd94f10e60","title":"Login to the portal with valid credential and get stats code 200","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.1 userLogin.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.1 userLogin.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to login","fullTitle":"Login to the portal with valid credential and get stats code 200 should be able to login","timedOut":null,"duration":1478,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/login\",\n  body: {\n    email: userEmail,\n    password: userPassword\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    const {\n      token,\n      user\n    } = response.body;\n    const studentToken = token;\n    const studentLoginID = user._id;\n    // Store token and login ID to fixtures\n    cy.writeFile(\"cypress/fixtures/studentToken.json\", {\n      studentLoginToken: studentToken\n    });\n    cy.writeFile(\"cypress/fixtures/studentLoginID.json\", {\n      userId: studentLoginID\n    });\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"token\");\n    expect(response.body.success).to.eq(true);\n    expect(response.duration).to.be.lessThan(2000);\n    cy.log(\"User Token:\", studentToken);\n    cy.log(\"User ID:\", studentLoginID);\n    console.log(\"User Token:\", studentToken);\n    console.log(\"User ID:\", studentLoginID);\n  } else {\n    cy.log(\"Login failed with status:\", response.status);\n    cy.log(`Login failed  ${response.body.error}`);\n    cy.log(`Login failed with status code ${response.status}`);\n  }\n});","err":{},"uuid":"11d1bf59-d9f0-4d2f-b4a1-eaa4c84715d9","parentUUID":"25f9ea82-afce-4654-9bef-a7bd94f10e60","isHook":false,"skipped":false}],"suites":[],"passes":["11d1bf59-d9f0-4d2f-b4a1-eaa4c84715d9"],"failures":[],"pending":[],"skipped":[],"duration":1478,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000}],"meta":{"mocha":{"version":"7.0.1"},"mochawesome":{"options":{"quiet":true,"reportFilename":"mochawesome","saveHtml":false,"saveJson":true,"consoleReporter":"spec","useInlineDiffs":false,"code":true},"version":"7.1.3"},"marge":{"options":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true,"overwrite":false,"html":false,"json":true,"reportDir":"cypress/reports/html/.jsons"},"version":"6.2.0"}}}
HTML result: ["/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/reports/html/index.html",null]
done
