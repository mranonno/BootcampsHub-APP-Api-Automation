start cypress-mochawesome-reporter 3.8.2
cwd: /Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation
cypress.json: {"configFile":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress.config.js","testingType":"e2e","projectId":"8axud3","reporter":"cypress-mochawesome-reporter","reporterOptions":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true,"reportDir":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/reports/html"},"baseUrl":"https://staging-api.bootcampshub.ai/api","setupNodeEvents":"[Function setupNodeEvents]","projectRoot":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation","projectName":"BootcampsHub-App-API-Automation","repoRoot":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation","rawJson":{"projectId":"8axud3","reporter":"cypress-mochawesome-reporter","reporterOptions":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true},"e2e":{"baseUrl":"https://staging-api.bootcampshub.ai/api","setupNodeEvents":"[Function setupNodeEvents]"},"baseUrl":"https://staging-api.bootcampshub.ai/api","setupNodeEvents":"[Function setupNodeEvents]","envFile":{},"projectRoot":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation","projectName":"BootcampsHub-App-API-Automation","repoRoot":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation"},"morgan":false,"isTextTerminal":true,"socketId":"6t1ca6klzq","report":true,"animationDistanceThreshold":5,"arch":"x64","blockHosts":null,"chromeWebSecurity":true,"clientCertificates":[],"defaultCommandTimeout":4000,"downloadsFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/downloads","env":{},"execTimeout":60000,"experimentalCspAllowList":false,"experimentalFetchPolyfill":false,"experimentalInteractiveRunEvents":false,"experimentalRunAllSpecs":false,"experimentalMemoryManagement":false,"experimentalModifyObstructiveThirdPartyCode":false,"experimentalSkipDomainInjection":null,"experimentalJustInTimeCompile":false,"experimentalOriginDependencies":false,"experimentalSourceRewriting":false,"experimentalSingleTabRunMode":false,"experimentalStudio":false,"experimentalWebKitSupport":false,"fileServerFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation","fixturesFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/fixtures","excludeSpecPattern":"*.hot-update.js","includeShadowDom":false,"keystrokeDelay":0,"modifyObstructiveCode":true,"numTestsKeptInMemory":0,"platform":"darwin","pageLoadTimeout":60000,"port":53478,"redirectionLimit":20,"requestTimeout":5000,"resolvedNodePath":"/usr/local/bin/node","resolvedNodeVersion":"20.18.0","responseTimeout":30000,"retries":{"runMode":0,"openMode":0},"screenshotOnRunFailure":true,"screenshotsFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/screenshots","slowTestThreshold":10000,"scrollBehavior":"top","supportFile":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/support/e2e.js","supportFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/support","taskTimeout":60000,"testIsolation":true,"trashAssetsBeforeRuns":true,"userAgent":null,"video":false,"videoCompression":false,"videosFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/videos","viewportHeight":660,"viewportWidth":1000,"waitForAnimations":true,"watchForFileChanges":false,"specPattern":"cypress/e2e/**/*.cy.{js,jsx,ts,tsx}","additionalIgnorePattern":[],"autoOpen":false,"browsers":[{"name":"chrome","family":"chromium","channel":"stable","displayName":"Chrome","version":"131.0.6778.86","path":"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome","minSupportedVersion":64,"majorVersion":"131"},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"118.0.5993.159","path":"","majorVersion":118}],"clientRoute":"/__/","cypressBinaryRoot":"/Users/anonno/Library/Caches/Cypress/13.15.2/Cypress.app/Contents/Resources/app","devServerPublicPathRoute":"/__cypress/src","hosts":null,"isInteractive":true,"namespace":"__cypress","reporterRoute":"/__cypress/reporter","socketIoCookie":"__socket","socketIoRoute":"/__socket","version":"13.15.2","protocolEnabled":false,"hideCommandLog":false,"hideRunnerUi":false,"cypressEnv":"production","resolved":{"animationDistanceThreshold":{"value":5,"from":"default"},"arch":{"value":"x64","from":"default"},"baseUrl":{"value":"https://staging-api.bootcampshub.ai/api","from":"config"},"blockHosts":{"value":null,"from":"default"},"chromeWebSecurity":{"value":true,"from":"default"},"clientCertificates":{"value":[],"from":"default"},"defaultCommandTimeout":{"value":4000,"from":"default"},"downloadsFolder":{"value":"cypress/downloads","from":"default"},"env":{},"execTimeout":{"value":60000,"from":"default"},"experimentalCspAllowList":{"value":false,"from":"default"},"experimentalFetchPolyfill":{"value":false,"from":"default"},"experimentalInteractiveRunEvents":{"value":false,"from":"default"},"experimentalRunAllSpecs":{"value":false,"from":"default"},"experimentalMemoryManagement":{"value":false,"from":"default"},"experimentalModifyObstructiveThirdPartyCode":{"value":false,"from":"default"},"experimentalSkipDomainInjection":{"value":null,"from":"default"},"experimentalJustInTimeCompile":{"value":false,"from":"default"},"experimentalOriginDependencies":{"value":false,"from":"default"},"experimentalSourceRewriting":{"value":false,"from":"default"},"experimentalSingleTabRunMode":{"value":false,"from":"default"},"experimentalStudio":{"value":false,"from":"default"},"experimentalWebKitSupport":{"value":false,"from":"default"},"fileServerFolder":{"value":"","from":"default"},"fixturesFolder":{"value":"cypress/fixtures","from":"default"},"excludeSpecPattern":{"value":"*.hot-update.js","from":"default"},"includeShadowDom":{"value":false,"from":"default"},"keystrokeDelay":{"value":0,"from":"default"},"modifyObstructiveCode":{"value":true,"from":"default"},"numTestsKeptInMemory":{"value":0,"from":"config"},"platform":{"value":"darwin","from":"default"},"pageLoadTimeout":{"value":60000,"from":"default"},"port":{"value":null,"from":"default"},"projectId":{"value":"8axud3","from":"config"},"redirectionLimit":{"value":20,"from":"default"},"reporter":{"value":"cypress-mochawesome-reporter","from":"config"},"reporterOptions":{"value":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true},"from":"config"},"requestTimeout":{"value":5000,"from":"default"},"resolvedNodePath":{"value":null,"from":"default"},"resolvedNodeVersion":{"value":null,"from":"default"},"responseTimeout":{"value":30000,"from":"default"},"retries":{"value":{"runMode":0,"openMode":0},"from":"default"},"screenshotOnRunFailure":{"value":true,"from":"default"},"screenshotsFolder":{"value":"cypress/screenshots","from":"default"},"slowTestThreshold":{"value":10000,"from":"default"},"scrollBehavior":{"value":"top","from":"default"},"supportFile":{"value":"cypress/support/e2e.{js,jsx,ts,tsx}","from":"default"},"supportFolder":{"value":false,"from":"default"},"taskTimeout":{"value":60000,"from":"default"},"testIsolation":{"value":true,"from":"default"},"trashAssetsBeforeRuns":{"value":true,"from":"default"},"userAgent":{"value":null,"from":"default"},"video":{"value":false,"from":"default"},"videoCompression":{"value":false,"from":"default"},"videosFolder":{"value":"cypress/videos","from":"default"},"viewportHeight":{"value":660,"from":"default"},"viewportWidth":{"value":1000,"from":"default"},"waitForAnimations":{"value":true,"from":"default"},"watchForFileChanges":{"value":false,"from":"config"},"specPattern":{"value":"cypress/e2e/**/*.cy.{js,jsx,ts,tsx}","from":"default"},"browsers":{"value":[{"name":"chrome","family":"chromium","channel":"stable","displayName":"Chrome","version":"131.0.6778.86","path":"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome","minSupportedVersion":64,"majorVersion":"131"},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"118.0.5993.159","path":"","majorVersion":118,"isHeadless":true,"isHeaded":false}],"from":"runtime"},"hosts":{"value":null,"from":"default"},"isInteractive":{"value":true,"from":"default"},"configFile":{"value":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress.config.js","from":"plugin"},"testingType":{"value":"e2e","from":"plugin"}},"remote":{"origin":"https://staging-api.bootcampshub.ai","strategy":"http","fileServer":null,"domainName":"bootcampshub.ai","props":{"port":"443","protocol":"https:","subdomain":"staging-api","domain":"bootcampshub","tld":"ai"}},"browser":null,"specs":[],"proxyUrl":"http://localhost:53478","browserUrl":"https://staging-api.bootcampshub.ai/__/","reporterUrl":"https://staging-api.bootcampshub.ai/__cypress/reporter","proxyServer":"http://localhost:53478","state":{}}
simple config: {"jsonDir":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/reports/html/.jsons","reporterOptions":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true,"reportDir":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/reports/html"},"screenshotsDir":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/screenshots","videosFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/videos","outputDir":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/reports/html","removeJsonsFolderAfterMerge":true}
report before enhance: {"stats":{"suites":62,"tests":62,"passes":50,"pending":12,"failures":0,"testsRegistered":62,"passPercent":80.64516129032258,"pendingPercent":19.35483870967742,"other":0,"hasOther":false,"skipped":0,"hasSkipped":false,"start":"2024-11-30T11:17:56.892Z","end":"2024-11-30T11:21:51.193Z","duration":234301},"results":[{"uuid":"afb61622-1055-4c90-ba1b-216c89db0a59","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.2 verifyUser.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.2 verifyUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"47f629d2-029f-4d29-88fa-e00d5ce32113","title":"Verify user successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to verify user","fullTitle":"Verify user successfully with status code 200 should be able to verify user","timedOut":null,"duration":1546,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"// const otp = \"863182\";\ncy.request({\n  method: \"POST\",\n  url: \"/user/verify\",\n  headers: {\n    Authorization: `Bearer ${studentToken}`\n  },\n  body: {\n    // otp: otp,\n    // channel: \"email\",\n    // userId: studentToken, // Use student ID obtained from fixture\n  }\n}).then(response => {\n  if (response.status === 200) {\n    cy.log(\"Verification successful\"); // Log successful verification\n    console.log(\"Verification successful\");\n    // Assertions\n    expect(response.status).to.eq(200); // Check if the status code is 200\n    expect(response.body).to.have.property(\"success\", true); // Check if the success property is true\n    expect(response.duration).to.be.lessThan(3000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"b3b8c697-8a97-4d41-bbc5-48eee7c6ef61","parentUUID":"47f629d2-029f-4d29-88fa-e00d5ce32113","isHook":false,"skipped":false}],"suites":[],"passes":["b3b8c697-8a97-4d41-bbc5-48eee7c6ef61"],"failures":[],"pending":[],"skipped":[],"duration":1546,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"cf091314-4d95-4a48-8cfd-c188e91966ab","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.3 sendOtp.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.3 sendOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"97bf82ab-1eac-4c89-9c1f-ed6012a1c362","title":"Get OTP on my email successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Should be able to send OTP to email","fullTitle":"Get OTP on my email successfully with status code 200 Should be able to send OTP to email","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/sendotp\",\n  body: {\n    userId: userId,\n    channel: \"email\",\n    captchaToken: \"\"\n  }\n}).then(response => {\n  if (response.status === 200) {\n    cy.log(\"Send OTP successful\");\n    console.log(\"Send OTP successful\");\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(3000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"39863d0c-5ae5-46c1-9b1b-a662e8de135f","parentUUID":"97bf82ab-1eac-4c89-9c1f-ed6012a1c362","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["39863d0c-5ae5-46c1-9b1b-a662e8de135f"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"504c47b7-7b98-4763-8378-3e31b7cb33c0","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.4 verifyOtp.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.4 verifyOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"f6a75c01-cbf0-4cae-978a-921469149f37","title":"Verify OTP with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to verify","fullTitle":"Verify OTP with status code 200 should be able to verify","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"const otp = \"731258\";\ncy.request({\n  method: \"POST\",\n  url: \"/user/verifyotp\",\n  body: {\n    otp: otp,\n    channel: \"email\",\n    userId: studentID // Use student ID obtained from fixture\n  }\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    cy.log(\"OTP verification successful\");\n    console.log(\"OTP verification successful\");\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"b27aa3ec-c115-45c1-bb8a-3e6f5020fc67","parentUUID":"f6a75c01-cbf0-4cae-978a-921469149f37","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["b27aa3ec-c115-45c1-bb8a-3e6f5020fc67"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"930c63c0-c234-4305-a9f8-418b0e51f89c","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.5 forgotPassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.5 forgotPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"80e0838c-718f-4a89-be85-06ed4024e327","title":"Forgot password functionality if I forgot my password successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if a user can use forgot password functionality in the browser or not","fullTitle":"Forgot password functionality if I forgot my password successfully with status code 200 Checking if a user can use forgot password functionality in the browser or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/password/forgot\",\n  body: {\n    phone: studentNumber,\n    email: studentEmail,\n    channel: \"email\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"isOtpSend\", true);\n    cy.log(\"Forgot Password Response:\", response.body);\n    console.log(\"Forgot Password Response:\", response.body);\n  } else {\n    cy.log(\"Forgot password failed due to: \", response.body.error);\n  }\n});","err":{},"uuid":"665ba2c6-3bd7-4305-8589-b8d5a64b6b68","parentUUID":"80e0838c-718f-4a89-be85-06ed4024e327","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["665ba2c6-3bd7-4305-8589-b8d5a64b6b68"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"d8eac088-9171-4d41-a6e3-1326daeea6be","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.6 resetPassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.6 resetPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"036e8b3c-999c-4cad-a2d4-923e849f1ff9","title":"Reset my password successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Reset my password successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/password/reset\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    email: studentEmail,\n    phone: studentNumber,\n    channel: \"email\",\n    otp: otp,\n    password: password\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"91377954-0a30-4dd0-9260-d1121c0c0d2a","parentUUID":"036e8b3c-999c-4cad-a2d4-923e849f1ff9","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["91377954-0a30-4dd0-9260-d1121c0c0d2a"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"898894fb-97e0-4fcf-a7f9-9b5fc955bc9e","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.7 changePassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.7 changePassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"623e9ce2-3f8a-4ba2-a3f5-a5cff739d594","title":"Change my password successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Change my password successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":559,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/changepassword\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    currentPassword: \"Anonno#1\",\n    newPassword: \"Anonno#1\",\n    confirmPassword: \"Anonno#1\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"8af7208b-5ccc-4164-bb4b-0a7b47035566","parentUUID":"623e9ce2-3f8a-4ba2-a3f5-a5cff739d594","isHook":false,"skipped":false}],"suites":[],"passes":["8af7208b-5ccc-4164-bb4b-0a7b47035566"],"failures":[],"pending":[],"skipped":[],"duration":559,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"696ff43b-0e47-420f-97b2-dc2ac9537b05","title":"","fullFile":"cypress/e2e/1. UserService/02. UpdateImage/1.02.1 updateImage.cy.js","file":"cypress/e2e/1. UserService/02. UpdateImage/1.02.1 updateImage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"8d9da57b-6b09-4430-a46d-3de5b4ac7988","title":"Update Profile Picture API","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Should successfully update the profile picture","fullTitle":"Update Profile Picture API Should successfully update the profile picture","timedOut":null,"duration":893,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"const imagePath = \"/images/image1.png\";\ncy.fixture(imagePath, \"binary\").then(Cypress.Blob.binaryStringToBlob).then(blob => {\n  const formData = new FormData();\n  formData.append(\"image\", blob, \"image1.png\");\n  // Send PATCH request with FormData\n  return cy.request({\n    method: \"PATCH\",\n    url: \"/user/updateimage\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    },\n    body: formData,\n    failOnStatusCode: false\n  });\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    cy.log(\"Profile picture updated successfully\");\n    //   cy.log(JSON.stringify(response.body, null, 2));\n  } else {\n    cy.log(\"Profile picture update failed with status code: \", response.status);\n    cy.log(response.body.error || \"Unknown error\");\n  }\n});","err":{},"uuid":"16caf6e8-a53c-484d-b77f-95cabcd3ec4d","parentUUID":"8d9da57b-6b09-4430-a46d-3de5b4ac7988","isHook":false,"skipped":false}],"suites":[],"passes":["16caf6e8-a53c-484d-b77f-95cabcd3ec4d"],"failures":[],"pending":[],"skipped":[],"duration":893,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"99980d7d-f5d6-4aef-a95f-85be31722866","title":"","fullFile":"cypress/e2e/1. UserService/03. UpdatUser/1.03.1 updateUser.cy.js","file":"cypress/e2e/1. UserService/03. UpdatUser/1.03.1 updateUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"3cd4ec0f-224f-47eb-92b3-0e4db8b367ba","title":"Update user successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Update user successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":491,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/updateuser\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    firstName: \"Md\",\n    lastName: \"Shimul\",\n    about: \"Nothing\",\n    personalData: {\n      address: {\n        street: \"\",\n        city: \"Dhaka\",\n        postalCode: \"1216\",\n        state: \"Dhaka\",\n        country: \"Bangladesh\"\n      },\n      socialMedia: {\n        facebook: \"\",\n        github: \"\",\n        instagram: \"\",\n        linkedin: \"\",\n        twitter: \"\"\n      },\n      resume: \"\",\n      bio: \"Don't have bio\"\n    }\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"d710cd54-758c-4aea-be01-b952fe3b95e9","parentUUID":"3cd4ec0f-224f-47eb-92b3-0e4db8b367ba","isHook":false,"skipped":false}],"suites":[],"passes":["d710cd54-758c-4aea-be01-b952fe3b95e9"],"failures":[],"pending":[],"skipped":[],"duration":491,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"a3809f51-1c18-465c-93ec-4e6e7f439f9c","title":"","fullFile":"cypress/e2e/1. UserService/04. SyncPushToken/1.04.1 syncPushToken.cy.js","file":"cypress/e2e/1. UserService/04. SyncPushToken/1.04.1 syncPushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"8a985757-2fd7-4ffc-b337-4f576c9f92cf","title":"sync push token successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the sync up push token or not","fullTitle":"sync push token successfully with status code 200 Checking if the sync up push token or not","timedOut":null,"duration":558,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/sync-pushtoken\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    pushToken: \"user\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"cb99837f-7d0e-4f4b-9611-c7d7e2febfe0","parentUUID":"8a985757-2fd7-4ffc-b337-4f576c9f92cf","isHook":false,"skipped":false}],"suites":[],"passes":["cb99837f-7d0e-4f4b-9611-c7d7e2febfe0"],"failures":[],"pending":[],"skipped":[],"duration":558,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"883f7160-e0ba-4bcc-87e3-a46e14aef655","title":"","fullFile":"cypress/e2e/1. UserService/05. RemovePushToken/1.05.1 removePushToken.cy.js","file":"cypress/e2e/1. UserService/05. RemovePushToken/1.05.1 removePushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"12620bf1-b093-45d2-917e-eec38e079c18","title":"Remove push token successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the remove push token or not","fullTitle":"Remove push token successfully with status code 200 Checking if the remove push token or not","timedOut":null,"duration":488,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/remove-pushtoken\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    token: \"user\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Remove push token Response:\", response.body);\n    console.log(\"Remove push token Response:\", response.body);\n  } else {\n    cy.log(\"Remove push token failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"f994cbbf-3a78-4918-a437-c90ba97e2efb","parentUUID":"12620bf1-b093-45d2-917e-eec38e079c18","isHook":false,"skipped":false}],"suites":[],"passes":["f994cbbf-3a78-4918-a437-c90ba97e2efb"],"failures":[],"pending":[],"skipped":[],"duration":488,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"0f95b2e3-5262-4e2b-b660-e54ce091a0af","title":"","fullFile":"cypress/e2e/1. UserService/06. FilterUser/1.06.1 FilterUser.cy.js","file":"cypress/e2e/1. UserService/06. FilterUser/1.06.1 FilterUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"47294dd8-ab9a-4c4f-9e6f-a1b38172737e","title":"User filtering successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able user filter or not","fullTitle":"User filtering successfully with status code 200 Checking if should be able user filter or not","timedOut":null,"duration":470,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/filter\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    program: \"\",\n    session: \"\",\n    query: \"anonno\",\n    global: true\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"User filter Response:\", response.body);\n    console.log(\"User filter Response:\", response.body);\n  } else {\n    cy.log(\"User filtering failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"2ce5cf09-9fc6-4cf4-a519-723ff9e3cd29","parentUUID":"47294dd8-ab9a-4c4f-9e6f-a1b38172737e","isHook":false,"skipped":false}],"suites":[],"passes":["2ce5cf09-9fc6-4cf4-a519-723ff9e3cd29"],"failures":[],"pending":[],"skipped":[],"duration":470,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"74bcfcf5-01a2-4036-b63d-9990a3945044","title":"","fullFile":"cypress/e2e/1. UserService/07. UpdateUserStatus/1.07.1 updateUserStatus.cy.js","file":"cypress/e2e/1. UserService/07. UpdateUserStatus/1.07.1 updateUserStatus.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"04d5c4d8-5345-4ec6-b879-64934ca7fa1b","title":"Update User Status successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able update user status or not","fullTitle":"Update User Status successfully with status code 200 Checking if should be able update user status or not","timedOut":null,"duration":511,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/updateuser\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    profileStatus: {\n      currentStatus: \"Busy Nai\",\n      recurring: {\n        isDailyRecurring: true,\n        fromTime: \"09:01 AM\",\n        toTime: \"05:00 PM\"\n      }\n    }\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"User status Response:\", response.body);\n    console.log(\"User status Response:\", response.body);\n  } else {\n    cy.log(\"Update user status failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"481e2846-d405-41b4-bf3f-a4df7f467cfc","parentUUID":"04d5c4d8-5345-4ec6-b879-64934ca7fa1b","isHook":false,"skipped":false}],"suites":[],"passes":["481e2846-d405-41b4-bf3f-a4df7f467cfc"],"failures":[],"pending":[],"skipped":[],"duration":511,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ee863a94-eef8-4308-a835-5620e8849f6b","title":"","fullFile":"cypress/e2e/2. OrganizationService/01. UserOrganization/2.01.1 getUserOrganization.cy.js","file":"cypress/e2e/2. OrganizationService/01. UserOrganization/2.01.1 getUserOrganization.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"1a0e2581-b86e-4af9-bbee-d0dba1ede297","title":"Get user organization successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get user organization or not","fullTitle":"Get user organization successfully with status code 200 Checking if should be able get user organization or not","timedOut":null,"duration":579,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/organization/user-organizations\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get user organization  Response:\", response.body);\n    console.log(\"Get user organization  Response:\", response.body);\n  } else {\n    cy.log(\"Get user organization failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"c7654ab2-6a4c-4e45-b1d3-aaf18c0f6f3c","parentUUID":"1a0e2581-b86e-4af9-bbee-d0dba1ede297","isHook":false,"skipped":false}],"suites":[],"passes":["c7654ab2-6a4c-4e45-b1d3-aaf18c0f6f3c"],"failures":[],"pending":[],"skipped":[],"duration":579,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"a392eff1-6ccb-4ec3-92c0-be84f4621d5d","title":"","fullFile":"cypress/e2e/2. OrganizationService/02. CompanyDetail/2.02.1 getCompanyDetail.cy.js","file":"cypress/e2e/2. OrganizationService/02. CompanyDetail/2.02.1 getCompanyDetail.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"91ce2b9e-6f8d-4519-b4d7-66fd2e1e0fc6","title":"Get Company Details successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get Company Details or not","fullTitle":"Get Company Details successfully with status code 200 Checking if should be able get Company Details or not","timedOut":null,"duration":558,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/organization/details/${slug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get Company Details  Response:\", response.body);\n    console.log(\"Get Company Details  Response:\", response.body);\n  } else {\n    cy.log(\"Get Company Details failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"76ce3324-0614-4ad3-870b-f59d1fc9b405","parentUUID":"91ce2b9e-6f8d-4519-b4d7-66fd2e1e0fc6","isHook":false,"skipped":false}],"suites":[],"passes":["76ce3324-0614-4ad3-870b-f59d1fc9b405"],"failures":[],"pending":[],"skipped":[],"duration":558,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ed8ea173-2bc7-43da-b230-2ce4904788f6","title":"","fullFile":"cypress/e2e/2. OrganizationService/03. GenerateText/2.03.1 generateTextByAI.cy.js","file":"cypress/e2e/2. OrganizationService/03. GenerateText/2.03.1 generateTextByAI.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"04029e05-e368-4cb4-b10b-1980ceffd5fe","title":"Generate Text successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able generate text or not","fullTitle":"Generate Text successfully with status code 200 Checking if should be able generate text or not","timedOut":null,"duration":5750,"state":"passed","speed":"medium","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/organization/integration/generate-text\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId,\n    Enrollment: enrollmentId\n  },\n  body: {\n    prompt: \"How to make money?\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    // expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Generate text  Response:\", response.body);\n    console.log(\"Generate text  Response:\", response.body);\n  } else {\n    cy.log(\"Generate text failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"64f5f18e-e5c6-4cf9-8432-08a7515d5028","parentUUID":"04029e05-e368-4cb4-b10b-1980ceffd5fe","isHook":false,"skipped":false}],"suites":[],"passes":["64f5f18e-e5c6-4cf9-8432-08a7515d5028"],"failures":[],"pending":[],"skipped":[],"duration":5750,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"016e0180-bae2-47ca-b759-eafbcf2dc2c9","title":"","fullFile":"cypress/e2e/3. ContentService/01. Content Flow/3.01.1 getCourseContent.cy.js","file":"cypress/e2e/3. ContentService/01. Content Flow/3.01.1 getCourseContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"948d84cf-2859-43cb-b7c9-c48e83fdb259","title":"Get course content by category successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get course data or not","fullTitle":"Get course content by category successfully with status code 200 Checking if should be able get course data or not","timedOut":null,"duration":1305,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/content/getbycourse/${category}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course data Response:\", response.body);\n    console.log(\"Get course data Response:\", response.body);\n  } else {\n    cy.log(\"Get course data failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"ed63652a-ad4a-41b1-b258-a721f9f5ad36","parentUUID":"948d84cf-2859-43cb-b7c9-c48e83fdb259","isHook":false,"skipped":false}],"suites":[],"passes":["ed63652a-ad4a-41b1-b258-a721f9f5ad36"],"failures":[],"pending":[],"skipped":[],"duration":1305,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"13676216-3f78-4a10-bf22-009f15d28c54","title":"","fullFile":"cypress/e2e/3. ContentService/01. Content Flow/3.01.2 getContentById.cy.js","file":"cypress/e2e/3. ContentService/01. Content Flow/3.01.2 getContentById.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"42394e64-682c-4362-aa32-b77d39611dd0","title":"Get content by content Id successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get content by content Id or not","fullTitle":"Get content by content Id successfully with status code 200 Checking if should be able get content by content Id or not","timedOut":null,"duration":481,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/content/getcontent/${courseId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course by course Id Response:\", response.body);\n    console.log(\"Get course data by course id Response:\", response.body);\n  } else {\n    cy.log(\"Get content by content Id failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"299359de-77b0-48a0-a304-ab5aa44dc945","parentUUID":"42394e64-682c-4362-aa32-b77d39611dd0","isHook":false,"skipped":false}],"suites":[],"passes":["299359de-77b0-48a0-a304-ab5aa44dc945"],"failures":[],"pending":[],"skipped":[],"duration":481,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"718c71dd-6ff1-4ea8-bb17-883919f9aec8","title":"","fullFile":"cypress/e2e/3. ContentService/01. Content Flow/3.01.3 getLabContent.cy.js","file":"cypress/e2e/3. ContentService/01. Content Flow/3.01.3 getLabContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"3a294db5-da4c-4d34-a43e-6e56606d5f32","title":"Get Lab Content successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get Lab Content or not","fullTitle":"Get Lab Content successfully with status code 200 Checking if should be able get Lab Content or not","timedOut":null,"duration":907,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/content/labcontent\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get lab content Response:\", response.body);\n    console.log(\"Get lab content Response:\", response.body);\n  } else {\n    cy.log(\"Get lab content failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"de43ac74-4af9-4bf9-a6cc-b513948d381e","parentUUID":"3a294db5-da4c-4d34-a43e-6e56606d5f32","isHook":false,"skipped":false}],"suites":[],"passes":["de43ac74-4af9-4bf9-a6cc-b513948d381e"],"failures":[],"pending":[],"skipped":[],"duration":907,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"b1dffa3c-5254-4dc5-a4d7-94eaa799df5d","title":"","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.1 getAllCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.1 getAllCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"c6415a92-7c72-4a7e-bf90-1fb679e34a63","title":"Get all community post successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get all community post or not","fullTitle":"Get all community post successfully with status code 200 Checking if should be able get all community post or not","timedOut":null,"duration":554,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/community/post/getall\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    // \"page\": \"1\",\n    // \"limit\": \"10\",\n    // \"query\": \"\",\n    // \"tags\": [],\n    // \"user\": \"\",\n    // \"filterBy\": \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get all community post Response:\", response.body);\n    console.log(\"Get all community post Response:\", response.body);\n  } else {\n    cy.log(\"Get all community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"7fb29ecf-22fb-4270-9729-3a8780480977","parentUUID":"c6415a92-7c72-4a7e-bf90-1fb679e34a63","isHook":false,"skipped":false}],"suites":[],"passes":["7fb29ecf-22fb-4270-9729-3a8780480977"],"failures":[],"pending":[],"skipped":[],"duration":554,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f58d177e-4415-4593-b2ab-da5db243c637","title":"","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.2 getSingleCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.2 getSingleCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2d3e6919-940f-4f38-a685-34aee0455cc7","title":"Get single community post successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get single community post or not","fullTitle":"Get single community post successfully with status code 200 Checking if should be able get single community post or not","timedOut":null,"duration":512,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/content/community/post/673905dc92731d9ad8c78e37\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get single community post Response:\", response.body);\n    console.log(\"Get single community post Response:\", response.body);\n  } else {\n    cy.log(\"Get single community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"2b62c240-00f3-467d-b302-056306b4d1f8","parentUUID":"2d3e6919-940f-4f38-a685-34aee0455cc7","isHook":false,"skipped":false}],"suites":[],"passes":["2b62c240-00f3-467d-b302-056306b4d1f8"],"failures":[],"pending":[],"skipped":[],"duration":512,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"b9a28679-6f8c-48df-a12e-4147bf66b483","title":"","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.3 createCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.3 createCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"f98c1a8c-d6dd-4479-966e-2fc517382202","title":"Create community post successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able create community post or not","fullTitle":"Create community post successfully with status code 200 Checking if should be able create community post or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/community/post/create\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    title: faker.lorem,\n    description: faker.lorem,\n    attachments: [],\n    tags: []\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Create community post Response:\", response.body);\n    console.log(\"Create community post Response:\", response.body);\n  } else {\n    cy.log(\"Create community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"702479db-8bf6-49fe-95b8-f8473d63a23c","parentUUID":"f98c1a8c-d6dd-4479-966e-2fc517382202","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["702479db-8bf6-49fe-95b8-f8473d63a23c"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"73c60887-7878-49d0-b5e3-48441372c30e","title":"","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.4 editCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.4 editCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2bdbdcba-01ef-4fe8-99d4-9579f9f7b2af","title":"Edit community post successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Edit community post or not","fullTitle":"Edit community post successfully with status code 200 Checking if should be able Edit community post or not","timedOut":null,"duration":576,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/content/community/post/edit/673905dc92731d9ad8c78e37\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    title: \"Community post testing\",\n    description: \"Description text\",\n    tags: \"#app\",\n    attachments: \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Edit community post Response:\", response.body);\n    console.log(\"Edit community post Response:\", response.body);\n  } else {\n    cy.log(\"Edit community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"33527395-8cdc-47c7-9a20-e244d1d87a21","parentUUID":"2bdbdcba-01ef-4fe8-99d4-9579f9f7b2af","isHook":false,"skipped":false}],"suites":[],"passes":["33527395-8cdc-47c7-9a20-e244d1d87a21"],"failures":[],"pending":[],"skipped":[],"duration":576,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"90f2ce8a-8259-430d-9ec9-466ae037f659","title":"","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.5 saveCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.5 saveCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"3c569514-ae6d-42e5-b956-438d35650521","title":"Save community post successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Save community post or not","fullTitle":"Save community post successfully with status code 200 Checking if should be able Save community post or not","timedOut":null,"duration":563,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/community/post/option/save\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    post: \"673905dc92731d9ad8c78e37\",\n    action: \"save\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Save community post Response:\", response.body);\n    console.log(\"Save community post Response:\", response.body);\n  } else {\n    cy.log(\"Save community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"419b1b94-0ceb-4104-9246-d2528a10d831","parentUUID":"3c569514-ae6d-42e5-b956-438d35650521","isHook":false,"skipped":false}],"suites":[],"passes":["419b1b94-0ceb-4104-9246-d2528a10d831"],"failures":[],"pending":[],"skipped":[],"duration":563,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"93e05ea7-ebce-469c-8843-920b4f0b2e3b","title":"","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.6 communityPostReaction.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.6 communityPostReaction.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"b55cacdf-2850-4e05-9669-240ca625c9d1","title":"Community post reaction successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Community post reaction or not","fullTitle":"Community post reaction successfully with status code 200 Checking if should be able Community post reaction or not","timedOut":null,"duration":527,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PUT\",\n  url: \"/content/community/post/react/673905dc92731d9ad8c78e37\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    symbol: \"😀\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Community post reaction Response:\", response.body);\n    console.log(\"Community post reaction Response:\", response.body);\n  } else {\n    cy.log(\"Community post reaction failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"43a8d0bf-05ac-49e5-b81b-9b7b5694ded5","parentUUID":"b55cacdf-2850-4e05-9669-240ca625c9d1","isHook":false,"skipped":false}],"suites":[],"passes":["43a8d0bf-05ac-49e5-b81b-9b7b5694ded5"],"failures":[],"pending":[],"skipped":[],"duration":527,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"0c6673e2-e8e1-47ff-b870-da8992bec706","title":"","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.7 reportCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.7 reportCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"3cc98a7a-ee1c-4e42-b3a9-c9a5574bc034","title":"Report community post successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Report community post or not","fullTitle":"Report community post successfully with status code 200 Checking if should be able Report community post or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/community/post/option/save\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    post: \"{{postId}}\",\n    action: \"report\",\n    reportReason: \"spam\",\n    note: \"{{note}}\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Report community post Response:\", response.body);\n    console.log(\"Report community post Response:\", response.body);\n  } else {\n    cy.log(\"Report community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"ab383041-339f-4996-873e-b5fd3c42f1ca","parentUUID":"3cc98a7a-ee1c-4e42-b3a9-c9a5574bc034","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["ab383041-339f-4996-873e-b5fd3c42f1ca"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"acae0ea0-fdcc-4d66-9fdd-e206f38fc626","title":"","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.8 communityTopContributor.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.8 communityTopContributor.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"10aaa835-a52f-4ec5-b17e-2cf34ba1fe9f","title":"Get Community top contribute successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get Community top contribute or not","fullTitle":"Get Community top contribute successfully with status code 200 Checking if should be able Get Community top contribute or not","timedOut":null,"duration":509,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/content/community/top-users\",\n  headers: {\n    Organization: organizationId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get Community top contribute Response:\", response.body);\n    console.log(\"Get Community top contribute Response:\", response.body);\n  } else {\n    cy.log(\"Get Community top contribute failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b7afaa9f-a117-4c8a-bc7f-a0a65e0cd8a5","parentUUID":"10aaa835-a52f-4ec5-b17e-2cf34ba1fe9f","isHook":false,"skipped":false}],"suites":[],"passes":["b7afaa9f-a117-4c8a-bc7f-a0a65e0cd8a5"],"failures":[],"pending":[],"skipped":[],"duration":509,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"1475f88a-283d-48e9-a86f-7179f6ab3a0b","title":"","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.9 deleteCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.9 deleteCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"74294e0a-9c6a-44fe-957a-925e96727d6d","title":"Delete community post successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Delete community post or not","fullTitle":"Delete community post successfully with status code 200 Checking if should be able Delete community post or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"DELETE\",\n  url: \"/content/community/post/delete/{{postId}}\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Delete community post Response:\", response.body);\n    console.log(\"Delete community post Response:\", response.body);\n  } else {\n    cy.log(\"Delete community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"17168eaf-f92f-428c-8a06-239cc42d2c80","parentUUID":"74294e0a-9c6a-44fe-957a-925e96727d6d","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["17168eaf-f92f-428c-8a06-239cc42d2c80"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"8c21330b-96d5-45f2-aba0-fa41b383cba8","title":"","fullFile":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.1 createComment.cy.js","file":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.1 createComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"f2e7a481-db49-454c-af2e-b9c83b6640f4","title":"Create community post comment successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Create community post comment or not","fullTitle":"Create community post comment successfully with status code 200 Checking if should be able Create community post comment or not","timedOut":null,"duration":528,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/comment/create\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    comment: \"Nice work bro 3\",\n    contentId: \"673905dc92731d9ad8c78e37\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 201) {\n    const {\n      comment\n    } = response.body;\n    cy.writeFile(\"cypress/fixtures/deleteCommentId.json\", {\n      commentId: comment._id\n    });\n    // Assertions\n    expect(response.status).to.eq(201);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Create community post comment Response:\", response.body);\n    console.log(\"Create community post comment Response:\", response.body);\n  } else {\n    cy.log(\"Create community post comment failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"2223fe07-c12f-4f55-bda5-f5d7fe716735","parentUUID":"f2e7a481-db49-454c-af2e-b9c83b6640f4","isHook":false,"skipped":false}],"suites":[],"passes":["2223fe07-c12f-4f55-bda5-f5d7fe716735"],"failures":[],"pending":[],"skipped":[],"duration":528,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"bdd4ebb8-5a87-49ce-a054-6696e7af114b","title":"","fullFile":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.2 replyComment.cy.js","file":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.2 replyComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"0eb7ea0d-3b90-4187-9614-f2fa821eab42","title":"Reply community post successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Reply community post or not","fullTitle":"Reply community post successfully with status code 200 Checking if should be able Reply community post or not","timedOut":null,"duration":480,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/comment/create\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    contentId: \"673905dc92731d9ad8c78e37\",\n    comment: \"Thank you\",\n    parentId: \"674835d5b419790019bb0f5a\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Reply community post Response:\", response.body);\n    console.log(\"Reply community post Response:\", response.body);\n  } else {\n    cy.log(\"Reply community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"3ef8ca83-a7ac-4553-8884-e10c320f833f","parentUUID":"0eb7ea0d-3b90-4187-9614-f2fa821eab42","isHook":false,"skipped":false}],"suites":[],"passes":["3ef8ca83-a7ac-4553-8884-e10c320f833f"],"failures":[],"pending":[],"skipped":[],"duration":480,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"680461da-dc26-4f88-9a27-b1ad8c4f3e06","title":"","fullFile":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.3 updateComment.cy.js","file":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.3 updateComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"74fb0a07-f564-43ae-a36b-d025e0b2411e","title":"Update community post comment successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Update community post comment or not","fullTitle":"Update community post comment successfully with status code 200 Checking if should be able Update community post comment or not","timedOut":null,"duration":525,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/content/comment/update/674835d5b419790019bb0f5a`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    comment: \"Updated comment again\",\n    contentId: \"673905dc92731d9ad8c78e37\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Update community post comment Response:\", response.body);\n    console.log(\"Update community post comment Response:\", response.body);\n  } else {\n    cy.log(\"Update community post comment failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"3a106f18-65c0-4a36-bf0f-f2f07dee55d8","parentUUID":"74fb0a07-f564-43ae-a36b-d025e0b2411e","isHook":false,"skipped":false}],"suites":[],"passes":["3a106f18-65c0-4a36-bf0f-f2f07dee55d8"],"failures":[],"pending":[],"skipped":[],"duration":525,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"241f0eb7-0833-4eb3-8b4e-2809fed894f9","title":"","fullFile":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.4 getComment.cy.js","file":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.4 getComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"d59dc9c9-2841-47a6-b677-8febcdca3e42","title":"Get community comment successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get community comment or not","fullTitle":"Get community comment successfully with status code 200 Checking if should be able Get community comment or not","timedOut":null,"duration":546,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/content/comment/get/673905dc92731d9ad8c78e37\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get community comment Response:\", response.body);\n    console.log(\"Get community comment Response:\", response.body);\n  } else {\n    cy.log(\"Get community comment failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"c8b36aee-8bae-4668-97c5-305b142380c0","parentUUID":"d59dc9c9-2841-47a6-b677-8febcdca3e42","isHook":false,"skipped":false}],"suites":[],"passes":["c8b36aee-8bae-4668-97c5-305b142380c0"],"failures":[],"pending":[],"skipped":[],"duration":546,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"44a6ea7b-b5b1-4edc-9c4c-63ee5e84df23","title":"","fullFile":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.5 getReplies.cy.js","file":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.5 getReplies.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"fd4732aa-744e-4fd0-b120-bbbdf78cf1f2","title":"Get community comment reply successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get community comment reply or not","fullTitle":"Get community comment reply successfully with status code 200 Checking if should be able Get community comment reply or not","timedOut":null,"duration":572,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/content/comment/get/673905dc92731d9ad8c78e37?parentId=674835d5b419790019bb0f5a\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get community comment reply Response:\", response.body);\n    console.log(\"Get community comment reply Response:\", response.body);\n  } else {\n    cy.log(\"Get community comment reply failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"3713c710-772c-49ea-90f6-67a6d30ddf2f","parentUUID":"fd4732aa-744e-4fd0-b120-bbbdf78cf1f2","isHook":false,"skipped":false}],"suites":[],"passes":["3713c710-772c-49ea-90f6-67a6d30ddf2f"],"failures":[],"pending":[],"skipped":[],"duration":572,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"80484c03-afda-48c2-97d4-4847cfc75166","title":"","fullFile":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.6 deleteComment.cy.js","file":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.6 deleteComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"dddabdb3-37f3-4497-a426-34912e3a18a5","title":"Delete community post comment successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Delete community post comment or not","fullTitle":"Delete community post comment successfully with status code 200 Checking if should be able Delete community post comment or not","timedOut":null,"duration":604,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"DELETE\",\n  url: `/content/comment/delete/${delete_commentId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Delete community post comment Response:\", response.body);\n    console.log(\"Delete community post comment Response:\", response.body);\n  } else {\n    cy.log(\"Delete community post comment failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"69d8957b-0fec-4d9f-b5e1-8c3e58b179f1","parentUUID":"dddabdb3-37f3-4497-a426-34912e3a18a5","isHook":false,"skipped":false}],"suites":[],"passes":["69d8957b-0fec-4d9f-b5e1-8c3e58b179f1"],"failures":[],"pending":[],"skipped":[],"duration":604,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"e9fb0853-8a62-4370-9a2d-23748b579653","title":"","fullFile":"cypress/e2e/5. CommonService/01. MyNavigation/5.01.1 getMyNavigation.cy.js","file":"cypress/e2e/5. CommonService/01. MyNavigation/5.01.1 getMyNavigation.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"d9959a70-5311-42ab-a63c-4bbb01f6a8df","title":"Get my navigation successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get my navigation or not","fullTitle":"Get my navigation successfully with status code 200 Checking if should be able get my navigation or not","timedOut":null,"duration":427,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/navigation/mynavigations\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my navigation Response:\", response.body);\n    console.log(\"get may navigation post Response:\", response.body);\n  } else {\n    cy.log(\"Get my navigation failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"4194fd19-f4e9-4ac3-9fb4-6663c21d1cf3","parentUUID":"d9959a70-5311-42ab-a63c-4bbb01f6a8df","isHook":false,"skipped":false}],"suites":[],"passes":["4194fd19-f4e9-4ac3-9fb4-6663c21d1cf3"],"failures":[],"pending":[],"skipped":[],"duration":427,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"76f3f76b-ffec-4e6a-ab35-b8735ec5ae6e","title":"","fullFile":"cypress/e2e/6. ChatService/02. FindOrCreateChatsByUser/6.02.1 findOrCreateChatsByUser.cy.js","file":"cypress/e2e/6. ChatService/02. FindOrCreateChatsByUser/6.02.1 findOrCreateChatsByUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"a72442b6-1c1e-4d48-9d7f-0ebad2134624","title":"Find or Create chats by user with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Find or Create chats by user or not","fullTitle":"Find or Create chats by user with status code 200 Checking if should be able Find or Create chats by user or not","timedOut":null,"duration":559,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/findorcreate/${userId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {},\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(3000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Find or Create chats by user Response:\", response.body);\n  } else {\n    cy.log(\"Find or Create chats by user failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"4df3c74a-e298-4202-95d9-ae7b690ed779","parentUUID":"a72442b6-1c1e-4d48-9d7f-0ebad2134624","isHook":false,"skipped":false}],"suites":[],"passes":["4df3c74a-e298-4202-95d9-ae7b690ed779"],"failures":[],"pending":[],"skipped":[],"duration":559,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"5a3c59ac-16c1-4aeb-97ef-efa11e280250","title":"","fullFile":"cypress/e2e/6. ChatService/01. MyChats/6.01.1 myChats.cy.js","file":"cypress/e2e/6. ChatService/01. MyChats/6.01.1 myChats.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"f1646a5e-2c93-45ce-ae5b-cf516b348f48","title":"My all chats with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get my all chats or not","fullTitle":"My all chats with status code 200 Checking if should be able get my all chats or not","timedOut":null,"duration":1517,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/chat/mychats\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(3000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"get my chats Response:\", response.body);\n  } else {\n    cy.log(\"Get my chats failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"58cc636e-d7b0-430f-9da6-f0d369f7b6ba","parentUUID":"f1646a5e-2c93-45ce-ae5b-cf516b348f48","isHook":false,"skipped":false}],"suites":[],"passes":["58cc636e-d7b0-430f-9da6-f0d369f7b6ba"],"failures":[],"pending":[],"skipped":[],"duration":1517,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"d9828aae-dd2d-4c05-b833-17320602e89a","title":"","fullFile":"cypress/e2e/6. ChatService/03. FetchChatMessage/6.03.1 fetchChatMessage.cy.js","file":"cypress/e2e/6. ChatService/03. FetchChatMessage/6.03.1 fetchChatMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"35758f31-bbd8-45f5-a0dc-f24be79b1359","title":"Fetch the chat message with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Fetch the chat message or not","fullTitle":"Fetch the chat message with status code 200 Checking if should be able Fetch the chat message or not","timedOut":null,"duration":1269,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/messages`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    page: 1,\n    chat: chatId,\n    limit: 5\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(7000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Fetch the chat message Response:\", response.body);\n  } else {\n    cy.log(\"Fetch the chat message failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"7e9144a4-f667-4393-a2d2-02be133ba8e6","parentUUID":"35758f31-bbd8-45f5-a0dc-f24be79b1359","isHook":false,"skipped":false}],"suites":[],"passes":["7e9144a4-f667-4393-a2d2-02be133ba8e6"],"failures":[],"pending":[],"skipped":[],"duration":1269,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"e2da3491-20d4-43ba-babf-7348203aa4c5","title":"","fullFile":"cypress/e2e/6. ChatService/04. AddMemberToChnnel/6.04.1 addMemberToChannel.cy.js","file":"cypress/e2e/6. ChatService/04. AddMemberToChnnel/6.04.1 addMemberToChannel.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"bdea1bf7-018f-41d6-b3c8-ec13ccba10e4","title":"Add member to channel with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Add member to channel or not","fullTitle":"Add member to channel with status code 200 Checking if should be able Add member to channel or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/chat/channel/adduser/${chatId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n    // Organization: organizationId,\n  },\n  body: {\n    member: memberId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Add member to channel Response:\", response.body);\n  } else {\n    cy.log(\"Add member to channel failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"13bb43e1-3752-4a98-ba7f-73abd8589eeb","parentUUID":"bdea1bf7-018f-41d6-b3c8-ec13ccba10e4","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["13bb43e1-3752-4a98-ba7f-73abd8589eeb"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"0b13e096-07a1-436e-b9c9-fa3256d00720","title":"","fullFile":"cypress/e2e/6. ChatService/05. GetChatMembers/6.05.1 getChatMembers.cy.js","file":"cypress/e2e/6. ChatService/05. GetChatMembers/6.05.1 getChatMembers.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"0ae67196-5a39-44a8-990f-a8354b2995d4","title":"Get the chat members with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get the chat members or not","fullTitle":"Get the chat members with status code 200 Checking if should be able Get the chat members or not","timedOut":null,"duration":601,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/members/${chatId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n    // Organization: organizationId,\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Get the chat members Response:\", response.body);\n  } else {\n    cy.log(\"Get the chat members failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"a5fc1020-0fbb-4ef8-bdc4-85f15c198d66","parentUUID":"0ae67196-5a39-44a8-990f-a8354b2995d4","isHook":false,"skipped":false}],"suites":[],"passes":["a5fc1020-0fbb-4ef8-bdc4-85f15c198d66"],"failures":[],"pending":[],"skipped":[],"duration":601,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"eeacc0ba-6f69-4784-8ddb-4249f1983ef4","title":"","fullFile":"cypress/e2e/6. ChatService/06. SearchChatMembers/6.06.1 searchChatMembers.cy.js","file":"cypress/e2e/6. ChatService/06. SearchChatMembers/6.06.1 searchChatMembers.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"1d4c57eb-6205-4e34-b49d-3861b721942d","title":"Search chat members with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Search chat members or not","fullTitle":"Search chat members with status code 200 Checking if should be able Search chat members or not","timedOut":null,"duration":603,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/members/${chatId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n    // Organization: organizationId,\n  },\n  body: {\n    query: \"anonno\",\n    limit: 5\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Search chat members Response:\", response.body);\n  } else {\n    cy.log(\"Search chat members failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"ca444da7-b4eb-4a1b-aa5f-74679f5b6ac3","parentUUID":"1d4c57eb-6205-4e34-b49d-3861b721942d","isHook":false,"skipped":false}],"suites":[],"passes":["ca444da7-b4eb-4a1b-aa5f-74679f5b6ac3"],"failures":[],"pending":[],"skipped":[],"duration":603,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"6d9591f7-6750-423d-8450-ba7ad276ebc4","title":"","fullFile":"cypress/e2e/6. ChatService/07. UpdateMemberRole/6.07.1 updateMemberRole.cy.js","file":"cypress/e2e/6. ChatService/07. UpdateMemberRole/6.07.1 updateMemberRole.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"e0b59412-7641-427b-880d-06f701f55676","title":"Update member role with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Update member role or not","fullTitle":"Update member role with status code 200 Checking if should be able Update member role or not","timedOut":null,"duration":506,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/chat/member/update\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n    // Organization: organizationId,\n  },\n  body: {\n    member: memberId,\n    role: \"moderator\",\n    chat: chatId,\n    actionType: \"role\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Update member role Response:\", response.body);\n  } else {\n    cy.log(\"Update member role failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"7bebf466-47e6-40a4-b362-f61cb91e2541","parentUUID":"e0b59412-7641-427b-880d-06f701f55676","isHook":false,"skipped":false}],"suites":[],"passes":["7bebf466-47e6-40a4-b362-f61cb91e2541"],"failures":[],"pending":[],"skipped":[],"duration":506,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"4a6e174c-0dec-45e8-b378-2d267cb641ee","title":"","fullFile":"cypress/e2e/6. ChatService/08. RemoveMemberFromChannel/6.08.1 removeMemberFromChannel.cy.js","file":"cypress/e2e/6. ChatService/08. RemoveMemberFromChannel/6.08.1 removeMemberFromChannel.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"24dcd412-780f-46ee-9b60-d3f2042e6cae","title":"Remove member from channel with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Remove member from channel or not","fullTitle":"Remove member from channel with status code 200 Checking if should be able Remove member from channel or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/chat/channel/remove-user/${chatId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n    // Organization: organizationId,\n  },\n  body: {\n    member: memberId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Remove member from channel Response:\", response.body);\n  } else {\n    cy.log(\"Remove member from channel failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"51c172c7-a8f9-48c9-a64a-115a130f7239","parentUUID":"24dcd412-780f-46ee-9b60-d3f2042e6cae","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["51c172c7-a8f9-48c9-a64a-115a130f7239"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"9808cb52-cfd0-44b2-9932-3eb27607aeb5","title":"","fullFile":"cypress/e2e/7. Notification Service/01. Get All Notification/7.01.1 getAllNotification.cy.js","file":"cypress/e2e/7. Notification Service/01. Get All Notification/7.01.1 getAllNotification.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"63d77015-f758-4418-824e-f2c2c421fe4c","title":"Get all notification successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get all notification or not","fullTitle":"Get all notification successfully with status code 200 Checking if should be able Get all notification or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/notification/mynotifications\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get all notification Response:\", response.body);\n    console.log(\"Get all notification Response:\", response.body);\n  } else {\n    cy.log(\"Get all notification failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"07984d3c-b332-47a5-b173-e9572286999e","parentUUID":"63d77015-f758-4418-824e-f2c2c421fe4c","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["07984d3c-b332-47a5-b173-e9572286999e"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ac3a97b4-d89d-4be9-af81-f319b5014779","title":"","fullFile":"cypress/e2e/7. Notification Service/02. Mark All Notification as Read/7.02.1 markAllNotificationAsRead.cy.js","file":"cypress/e2e/7. Notification Service/02. Mark All Notification as Read/7.02.1 markAllNotificationAsRead.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"f35ea999-6fbd-4bd2-aa91-cd04aa060394","title":"Mark all notification as read successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Mark all notification as read or not","fullTitle":"Mark all notification as read successfully with status code 200 Checking if should be able Mark all notification as read or not","timedOut":null,"duration":503,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/notification/markreadall\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {},\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Mark all notification as read Response:\", response.body);\n    console.log(\"Mark all notification as read Response:\", response.body);\n  } else {\n    cy.log(\"Mark all notification as read failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b12909fc-9f0e-45c2-983b-e270a0da8bee","parentUUID":"f35ea999-6fbd-4bd2-aa91-cd04aa060394","isHook":false,"skipped":false}],"suites":[],"passes":["b12909fc-9f0e-45c2-983b-e270a0da8bee"],"failures":[],"pending":[],"skipped":[],"duration":503,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"491c9acc-5b62-4d04-be7f-05c32fa8edc3","title":"","fullFile":"cypress/e2e/7. Notification Service/03. Mark Notification as Read/7.03.1 markNotificationAsRead.cy.js","file":"cypress/e2e/7. Notification Service/03. Mark Notification as Read/7.03.1 markNotificationAsRead.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"e28feb66-b6da-4765-9f9b-0fe3b4a89371","title":"Mark notification as Read successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Mark notification as Read or not","fullTitle":"Mark notification as Read successfully with status code 200 Checking if should be able Mark notification as Read or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/notification/markread/:notificationId\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Mark notification as Read Response:\", response.body);\n    console.log(\"Mark notification as Read Response:\", response.body);\n  } else {\n    cy.log(\"Mark notification as Read failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"597b05c2-02f5-4d74-b34c-bd02aea5ff19","parentUUID":"e28feb66-b6da-4765-9f9b-0fe3b4a89371","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["597b05c2-02f5-4d74-b34c-bd02aea5ff19"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"25fa425e-de21-445a-a187-49384ae0bceb","title":"","fullFile":"cypress/e2e/7. Notification Service/04. Get Active Notification/7.04.1 getActiveNotification.cy.js","file":"cypress/e2e/7. Notification Service/04. Get Active Notification/7.04.1 getActiveNotification.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"a29ac836-679a-48b5-a6e4-4e711d72362d","title":"Get active notification successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get active notification or not","fullTitle":"Get active notification successfully with status code 200 Checking if should be able Get active notification or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/notification/job/getactive/${sourceid}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get active notification Response:\", response.body);\n    console.log(\"Get active notification Response:\", response.body);\n  } else {\n    cy.log(\"Get active notification failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"3001cee5-50cb-43aa-855d-b0b2a8e9881d","parentUUID":"a29ac836-679a-48b5-a6e4-4e711d72362d","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["3001cee5-50cb-43aa-855d-b0b2a8e9881d"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"a4f01944-9ffb-491e-b425-e8867aa4ed15","title":"","fullFile":"cypress/e2e/4. Program Service/01. Programs/4.01.1 All Programs/4.01.1 allPrograms.cy.js","file":"cypress/e2e/4. Program Service/01. Programs/4.01.1 All Programs/4.01.1 allPrograms.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"b371ee61-92fa-4bb8-a82b-4fbf10c0ab20","title":"Get all programs successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get all programs or not","fullTitle":"Get all programs successfully with status code 200 Checking if should be able Get all programs or not","timedOut":null,"duration":824,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/course/organization/${slug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    currentPage: \"1\",\n    limit: \"10\",\n    type: type\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get all programs Response:\", response.body);\n    console.log(\"Get all programs Response:\", response.body);\n  } else {\n    cy.log(\"Get all programs failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"70e8a5cf-5ed8-4028-ba78-a1c88eaced4c","parentUUID":"b371ee61-92fa-4bb8-a82b-4fbf10c0ab20","isHook":false,"skipped":false}],"suites":[],"passes":["70e8a5cf-5ed8-4028-ba78-a1c88eaced4c"],"failures":[],"pending":[],"skipped":[],"duration":824,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"bc0cba77-09bd-4d26-92ed-ff6907fbac85","title":"","fullFile":"cypress/e2e/4. Program Service/01. Programs/4.01.2 All Courses/4.01.2 allCourses.cy.js","file":"cypress/e2e/4. Program Service/01. Programs/4.01.2 All Courses/4.01.2 allCourses.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"ed567b71-77fa-448d-abcf-8a8e7375095c","title":"Get all Courses successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get all Courses or not","fullTitle":"Get all Courses successfully with status code 200 Checking if should be able Get all Courses or not","timedOut":null,"duration":609,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/course/organization/${slug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    currentPage: \"1\",\n    limit: \"10\",\n    type: type\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get all Courses Response:\", response.body);\n    console.log(\"Get all Courses Response:\", response.body);\n  } else {\n    cy.log(\"Get all Courses failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"609961ce-96ee-42cb-887d-c246ce30a5f9","parentUUID":"ed567b71-77fa-448d-abcf-8a8e7375095c","isHook":false,"skipped":false}],"suites":[],"passes":["609961ce-96ee-42cb-887d-c246ce30a5f9"],"failures":[],"pending":[],"skipped":[],"duration":609,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"2efd4f54-3e2b-43a6-8341-ad0a38aab80c","title":"","fullFile":"cypress/e2e/4. Program Service/01. Programs/4.01.3 Course Content/4.01.3 courseContent.cy.js","file":"cypress/e2e/4. Program Service/01. Programs/4.01.3 Course Content/4.01.3 courseContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"cdb2c288-35fb-4ca9-980d-9004645123c3","title":"Get course content successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get course content or not","fullTitle":"Get course content successfully with status code 200 Checking if should be able Get course content or not","timedOut":null,"duration":772,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/course/content/${programSlug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course content Response:\", response.body);\n    console.log(\"Get course content Response:\", response.body);\n  } else {\n    cy.log(\"Get course content failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"420fa5df-a7bd-4b04-8f58-7901e0741a72","parentUUID":"cdb2c288-35fb-4ca9-980d-9004645123c3","isHook":false,"skipped":false}],"suites":[],"passes":["420fa5df-a7bd-4b04-8f58-7901e0741a72"],"failures":[],"pending":[],"skipped":[],"duration":772,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"d129d958-a90a-45a3-ab38-3b8495cdbef7","title":"","fullFile":"cypress/e2e/4. Program Service/01. Programs/4.01.4 Single Bootcamps Details/4.01.4 singleBootcampsDetails.cy.js","file":"cypress/e2e/4. Program Service/01. Programs/4.01.4 Single Bootcamps Details/4.01.4 singleBootcampsDetails.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"46bf7da2-4694-4e94-a440-64b3ea6c6f9d","title":"Get single bootcamps details successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get single bootcamps details or not","fullTitle":"Get single bootcamps details successfully with status code 200 Checking if should be able Get single bootcamps details or not","timedOut":null,"duration":767,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/course/single/${program_slug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get single bootcamps details Response:\", response.body);\n    console.log(\"Get single bootcamps details Response:\", response.body);\n  } else {\n    cy.log(\"Get single bootcamps details failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"5f81f624-4749-4261-83f1-fd3c7c8e6e15","parentUUID":"46bf7da2-4694-4e94-a440-64b3ea6c6f9d","isHook":false,"skipped":false}],"suites":[],"passes":["5f81f624-4749-4261-83f1-fd3c7c8e6e15"],"failures":[],"pending":[],"skipped":[],"duration":767,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ac1de6b5-850b-4dbd-a9b4-bc3ef67736f7","title":"","fullFile":"cypress/e2e/4. Program Service/01. Programs/4.01.5 Course Details v2/4.01.5 courseDetailsV2.cy.js","file":"cypress/e2e/4. Program Service/01. Programs/4.01.5 Course Details v2/4.01.5 courseDetailsV2.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"3b12e191-66eb-41a6-b35d-2eaeaf012815","title":"Get course details successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get course details or not","fullTitle":"Get course details successfully with status code 200 Checking if should be able Get course details or not","timedOut":null,"duration":743,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/course/contentv2/${program_slug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course details Response:\", response.body);\n    console.log(\"Get course details Response:\", response.body);\n  } else {\n    cy.log(\"Get course details failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"8578a48a-fe53-4f62-a623-9977e07c7ea9","parentUUID":"3b12e191-66eb-41a6-b35d-2eaeaf012815","isHook":false,"skipped":false}],"suites":[],"passes":["8578a48a-fe53-4f62-a623-9977e07c7ea9"],"failures":[],"pending":[],"skipped":[],"duration":743,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"70f7eb03-d407-4f52-85a3-37fdaa361c1c","title":"","fullFile":"cypress/e2e/4. Program Service/01. Programs/4.01.6 Course Roadmap/4.01.6 courseRoadmap.cy.js","file":"cypress/e2e/4. Program Service/01. Programs/4.01.6 Course Roadmap/4.01.6 courseRoadmap.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"c66ea80e-6b9e-46c4-bc0e-e660f5dd91ef","title":"Get course roadmap data successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get course roadmap data or not","fullTitle":"Get course roadmap data successfully with status code 200 Checking if should be able Get course roadmap data or not","timedOut":null,"duration":478,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/course/roadmap/find/${courseId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course roadmap data Response:\", response.body);\n    console.log(\"Get course roadmap data Response:\", response.body);\n  } else {\n    cy.log(\"Get course roadmap data failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"7ac61627-8373-441c-a74b-244e9e4285cb","parentUUID":"c66ea80e-6b9e-46c4-bc0e-e660f5dd91ef","isHook":false,"skipped":false}],"suites":[],"passes":["7ac61627-8373-441c-a74b-244e9e4285cb"],"failures":[],"pending":[],"skipped":[],"duration":478,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"000cca11-18b9-401e-b5c0-26f97eecfa6d","title":"","fullFile":"cypress/e2e/4. Program Service/01. Programs/4.01.7 Reviews Categories/4.01.7 reviewsCategories.cy.js","file":"cypress/e2e/4. Program Service/01. Programs/4.01.7 Reviews Categories/4.01.7 reviewsCategories.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"a8aab41e-00cc-48ad-a4dc-be918caeafaf","title":"Get reviews categories successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get reviews categories or not","fullTitle":"Get reviews categories successfully with status code 200 Checking if should be able Get reviews categories or not","timedOut":null,"duration":611,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/course/review/get/${course_id}?fields[]=categories&page=1&limit=10`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get reviews categories Response:\", response.body);\n    console.log(\"Get reviews categories Response:\", response.body);\n  } else {\n    cy.log(\"Get reviews categories failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"2c5b1def-a3ab-46b6-a182-b69dcb5b176e","parentUUID":"a8aab41e-00cc-48ad-a4dc-be918caeafaf","isHook":false,"skipped":false}],"suites":[],"passes":["2c5b1def-a3ab-46b6-a182-b69dcb5b176e"],"failures":[],"pending":[],"skipped":[],"duration":611,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"fb84fe8b-8eb5-4431-bb13-c9125c6ff253","title":"","fullFile":"cypress/e2e/4. Program Service/01. Programs/4.01.8 Course Student Reviews/4.01.8 courseStudentReviews.cy.js","file":"cypress/e2e/4. Program Service/01. Programs/4.01.8 Course Student Reviews/4.01.8 courseStudentReviews.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"cb01ae15-0688-4a82-b85a-efc4e56ffcc0","title":"Get student reviews course successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get Get student reviews course or not","fullTitle":"Get student reviews course successfully with status code 200 Checking if should be able get Get student reviews course or not","timedOut":null,"duration":574,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/course/review/get/${course_id}?fields[]=reviews&&page=1&limit=10&category=student`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get student reviews course Response:\", response.body);\n    console.log(\"Get student reviews course Response:\", response.body);\n  } else {\n    cy.log(\"Get student reviews course failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"488a1c84-b00b-4cc8-99a1-b80e51d8db96","parentUUID":"cb01ae15-0688-4a82-b85a-efc4e56ffcc0","isHook":false,"skipped":false}],"suites":[],"passes":["488a1c84-b00b-4cc8-99a1-b80e51d8db96"],"failures":[],"pending":[],"skipped":[],"duration":574,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"8cc30fcd-57c7-4262-9010-8b9aca8bb257","title":"","fullFile":"cypress/e2e/4. Program Service/02. Chapter/4.02.1 Chapter By Category/4.02.1 chapterByCategory.cy.js","file":"cypress/e2e/4. Program Service/02. Chapter/4.02.1 Chapter By Category/4.02.1 chapterByCategory.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2efe0488-15fd-4746-aa95-dd2d5f18276d","title":"Get chapter by category successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get chapter by category or not","fullTitle":"Get chapter by category successfully with status code 200 Checking if should be able Get chapter by category or not","timedOut":null,"duration":807,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/course/chapterv2/get/${program_slug}/${categoryId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  body: {\n    parent: \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get chapter by category Response:\", response.body);\n    console.log(\"Get chapter by category Response:\", response.body);\n  } else {\n    cy.log(\"Get chapter by category failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"10b724c0-f5c5-4b10-a6a1-c6eab1fcb6b4","parentUUID":"2efe0488-15fd-4746-aa95-dd2d5f18276d","isHook":false,"skipped":false}],"suites":[],"passes":["10b724c0-f5c5-4b10-a6a1-c6eab1fcb6b4"],"failures":[],"pending":[],"skipped":[],"duration":807,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"d2b59818-d507-4cdb-bd82-7009c206d6d3","title":"","fullFile":"cypress/e2e/4. Program Service/02. Chapter/4.02.2 Preview Chapter/4.02.2 previewChapter.cy.js","file":"cypress/e2e/4. Program Service/02. Chapter/4.02.2 Preview Chapter/4.02.2 previewChapter.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"99c4066f-6dcf-4131-8077-eee468fd1b72","title":"Get preview chapter successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get preview chapter or not","fullTitle":"Get preview chapter successfully with status code 200 Checking if should be able Get preview chapter or not","timedOut":null,"duration":711,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/course/chapterv2/preview\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    courseId: \"64fcb957b0cf6e9ae43d126d\",\n    fields: [\"chapters\", \"categories\", \"totalDuration\", \"totalChapter\", \"totalLesson\"]\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get preview chapter Response:\", response.body);\n    console.log(\"Get preview chapter Response:\", response.body);\n  } else {\n    cy.log(\"Get preview chapter failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"0a2a45c1-1864-494c-bf56-2364d7af8fd3","parentUUID":"99c4066f-6dcf-4131-8077-eee468fd1b72","isHook":false,"skipped":false}],"suites":[],"passes":["0a2a45c1-1864-494c-bf56-2364d7af8fd3"],"failures":[],"pending":[],"skipped":[],"duration":711,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"3884c086-a89c-40ae-a03f-65649ba31119","title":"","fullFile":"cypress/e2e/4. Program Service/02. Chapter/4.02.3 Preview Chapter By Category/4.02.4 previewChapterByCategory.cy.js","file":"cypress/e2e/4. Program Service/02. Chapter/4.02.3 Preview Chapter By Category/4.02.4 previewChapterByCategory.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"67ebc83b-3fe5-4231-ae82-c54cb918655b","title":"Get preview chapter by category successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get preview chapter by category or not","fullTitle":"Get preview chapter by category successfully with status code 200 Checking if should be able Get preview chapter by category or not","timedOut":null,"duration":611,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/course/chapterv2/preview\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    courseId: \"64fcb957b0cf6e9ae43d126d\",\n    fields: [\"chapters\"],\n    categoryId: \"65eb5eaff6d7cc3e14e90cd7\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get preview chapter by category Response:\", response.body);\n    console.log(\"Get preview chapter by category Response:\", response.body);\n  } else {\n    cy.log(\"Get preview chapter by category failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"174c4790-248e-4c40-8164-9f7ae724c74e","parentUUID":"67ebc83b-3fe5-4231-ae82-c54cb918655b","isHook":false,"skipped":false}],"suites":[],"passes":["174c4790-248e-4c40-8164-9f7ae724c74e"],"failures":[],"pending":[],"skipped":[],"duration":611,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"678ccae5-de05-40f5-ae99-358b21e19950","title":"","fullFile":"cypress/e2e/4. Program Service/03. Workshop/4.03.1 My Workshop/4.03.1 myWorkshop.cy.js","file":"cypress/e2e/4. Program Service/03. Workshop/4.03.1 My Workshop/4.03.1 myWorkshop.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"7c4f591b-9322-42d0-a863-c70c1f8c5a58","title":"Get my workshop successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my workshop or not","fullTitle":"Get my workshop successfully with status code 200 Checking if should be able Get my workshop or not","timedOut":null,"duration":790,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/workshop/myworkshop/workshop\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my workshop Response:\", response.body);\n    console.log(\"Get my workshop Response:\", response.body);\n  } else {\n    cy.log(\"Get my workshop failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"e51b507c-2e6c-4c29-b743-2b6aa924ce3c","parentUUID":"7c4f591b-9322-42d0-a863-c70c1f8c5a58","isHook":false,"skipped":false}],"suites":[],"passes":["e51b507c-2e6c-4c29-b743-2b6aa924ce3c"],"failures":[],"pending":[],"skipped":[],"duration":790,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f388dc69-d50c-4fa2-989c-5ed3099f3c9b","title":"","fullFile":"cypress/e2e/4. Program Service/03. Workshop/4.03.2 My Labs/4.03.2 myLabs.cy.js","file":"cypress/e2e/4. Program Service/03. Workshop/4.03.2 My Labs/4.03.2 myLabs.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"fd0706cc-9e99-4aee-bbfc-aced52f30a31","title":"Get my labs successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my labs or not","fullTitle":"Get my labs successfully with status code 200 Checking if should be able Get my labs or not","timedOut":null,"duration":824,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/workshop/myworkshop/lab\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my labs Response:\", response.body);\n    console.log(\"Get my labs Response:\", response.body);\n  } else {\n    cy.log(\"Get my labs failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"5bc5ffee-9b77-4f1b-a548-791d3c41fc96","parentUUID":"fd0706cc-9e99-4aee-bbfc-aced52f30a31","isHook":false,"skipped":false}],"suites":[],"passes":["5bc5ffee-9b77-4f1b-a548-791d3c41fc96"],"failures":[],"pending":[],"skipped":[],"duration":824,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"8a65bf81-4b15-4d84-9112-b1869fbc66b9","title":"","fullFile":"cypress/e2e/4. Program Service/03. Workshop/4.03.3 My Interviews/4.03.3 myInterviews.cy.js","file":"cypress/e2e/4. Program Service/03. Workshop/4.03.3 My Interviews/4.03.3 myInterviews.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"9ef0c291-5289-40de-b21e-5a8b429d24d8","title":"Get my interviews successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my interviews or not","fullTitle":"Get my interviews successfully with status code 200 Checking if should be able Get my interviews or not","timedOut":null,"duration":856,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/workshop/myworkshop/interview\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my interviews Response:\", response.body);\n    console.log(\"Get my interviews Response:\", response.body);\n  } else {\n    cy.log(\"Get my interviews failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"2c8cef06-6cbd-4719-8a0c-c3ea0d65efda","parentUUID":"9ef0c291-5289-40de-b21e-5a8b429d24d8","isHook":false,"skipped":false}],"suites":[],"passes":["2c8cef06-6cbd-4719-8a0c-c3ea0d65efda"],"failures":[],"pending":[],"skipped":[],"duration":856,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ff3d8dcf-b0f1-408a-88e4-2c0aa52c01da","title":"","fullFile":"cypress/e2e/4. Program Service/04. Media/4.04.1 My Media/4.04.1 myMedia.cy.js","file":"cypress/e2e/4. Program Service/04. Media/4.04.1 My Media/4.04.1 myMedia.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"bbbc1cab-ebf7-403d-ba28-943b34ab3aa7","title":"Get my media successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my media or not","fullTitle":"Get my media successfully with status code 200 Checking if should be able Get my media or not","timedOut":null,"duration":849,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/media/mymedia\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my media Response:\", response.body);\n    console.log(\"Get my media Response:\", response.body);\n  } else {\n    cy.log(\"Get my media failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"757f4f45-6ff3-47de-8f37-8cef81dc9d4e","parentUUID":"bbbc1cab-ebf7-403d-ba28-943b34ab3aa7","isHook":false,"skipped":false}],"suites":[],"passes":["757f4f45-6ff3-47de-8f37-8cef81dc9d4e"],"failures":[],"pending":[],"skipped":[],"duration":849,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"1516371d-f702-495e-9981-4d3d6835317e","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.1 userLogin.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.1 userLogin.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"56a3220a-44e0-453b-8d39-444499b7a5b5","title":"Login to the portal with valid credential and get stats code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to login","fullTitle":"Login to the portal with valid credential and get stats code 200 should be able to login","timedOut":null,"duration":1456,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/login\",\n  body: {\n    email: userEmail,\n    password: userPassword\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    const {\n      token,\n      user\n    } = response.body;\n    const studentToken = token;\n    const studentLoginID = user._id;\n    // Store token and login ID to fixtures\n    cy.writeFile(\"cypress/fixtures/studentToken.json\", {\n      studentLoginToken: studentToken\n    });\n    // cy.writeFile(\"cypress/fixtures/studentLoginID.json\", {\n    //   userId: studentLoginID,\n    // });\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"token\");\n    expect(response.body.success).to.eq(true);\n    expect(response.duration).to.be.lessThan(2000);\n    cy.log(\"User Token:\", studentToken);\n    cy.log(\"User ID:\", studentLoginID);\n    console.log(\"User Token:\", studentToken);\n    console.log(\"User ID:\", studentLoginID);\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Login failed with status:\", response.status);\n    cy.log(`Login failed  ${response.body.error}`);\n    cy.log(`Login failed with status code ${response.status}`);\n  }\n});","err":{},"uuid":"2bef0e2c-bb4f-4289-b26f-413b7ed7a677","parentUUID":"56a3220a-44e0-453b-8d39-444499b7a5b5","isHook":false,"skipped":false}],"suites":[],"passes":["2bef0e2c-bb4f-4289-b26f-413b7ed7a677"],"failures":[],"pending":[],"skipped":[],"duration":1456,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000}],"meta":{"mocha":{"version":"7.0.1"},"mochawesome":{"options":{"quiet":true,"reportFilename":"mochawesome","saveHtml":false,"saveJson":true,"consoleReporter":"spec","useInlineDiffs":false,"code":true},"version":"7.1.3"},"marge":{"options":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true,"overwrite":false,"html":false,"json":true,"reportDir":"cypress/reports/html/.jsons"},"version":"6.2.0"}}}
baseFolder: cypress/e2e
attach media for test "Verify user successfully with status code 200 should be able to verify user"
no context
attach media for test "Get OTP on my email successfully with status code 200 Should be able to send OTP to email"
no context
attach media for test "Verify OTP with status code 200 should be able to verify"
no context
attach media for test "Forgot password functionality if I forgot my password successfully with status code 200 Checking if a user can use forgot password functionality in the browser or not"
no context
attach media for test "Reset my password successfully with status code 200 Checking if the user can reset their password or not"
no context
attach media for test "Change my password successfully with status code 200 Checking if the user can reset their password or not"
no context
attach media for test "Update Profile Picture API Should successfully update the profile picture"
no context
attach media for test "Update user successfully with status code 200 Checking if the user can reset their password or not"
no context
attach media for test "sync push token successfully with status code 200 Checking if the sync up push token or not"
no context
attach media for test "Remove push token successfully with status code 200 Checking if the remove push token or not"
no context
attach media for test "User filtering successfully with status code 200 Checking if should be able user filter or not"
no context
attach media for test "Update User Status successfully with status code 200 Checking if should be able update user status or not"
no context
attach media for test "Get user organization successfully with status code 200 Checking if should be able get user organization or not"
no context
attach media for test "Get Company Details successfully with status code 200 Checking if should be able get Company Details or not"
no context
attach media for test "Generate Text successfully with status code 200 Checking if should be able generate text or not"
no context
attach media for test "Get course content by category successfully with status code 200 Checking if should be able get course data or not"
no context
attach media for test "Get content by content Id successfully with status code 200 Checking if should be able get content by content Id or not"
no context
attach media for test "Get Lab Content successfully with status code 200 Checking if should be able get Lab Content or not"
no context
attach media for test "Get all community post successfully with status code 200 Checking if should be able get all community post or not"
no context
attach media for test "Get single community post successfully with status code 200 Checking if should be able get single community post or not"
no context
attach media for test "Create community post successfully with status code 200 Checking if should be able create community post or not"
no context
attach media for test "Edit community post successfully with status code 200 Checking if should be able Edit community post or not"
no context
attach media for test "Save community post successfully with status code 200 Checking if should be able Save community post or not"
no context
attach media for test "Community post reaction successfully with status code 200 Checking if should be able Community post reaction or not"
no context
attach media for test "Report community post successfully with status code 200 Checking if should be able Report community post or not"
no context
attach media for test "Get Community top contribute successfully with status code 200 Checking if should be able Get Community top contribute or not"
no context
attach media for test "Delete community post successfully with status code 200 Checking if should be able Delete community post or not"
no context
attach media for test "Create community post comment successfully with status code 200 Checking if should be able Create community post comment or not"
no context
attach media for test "Reply community post successfully with status code 200 Checking if should be able Reply community post or not"
no context
attach media for test "Update community post comment successfully with status code 200 Checking if should be able Update community post comment or not"
no context
attach media for test "Get community comment successfully with status code 200 Checking if should be able Get community comment or not"
no context
attach media for test "Get community comment reply successfully with status code 200 Checking if should be able Get community comment reply or not"
no context
attach media for test "Delete community post comment successfully with status code 200 Checking if should be able Delete community post comment or not"
no context
attach media for test "Get my navigation successfully with status code 200 Checking if should be able get my navigation or not"
no context
attach media for test "Find or Create chats by user with status code 200 Checking if should be able Find or Create chats by user or not"
no context
attach media for test "My all chats with status code 200 Checking if should be able get my all chats or not"
no context
attach media for test "Fetch the chat message with status code 200 Checking if should be able Fetch the chat message or not"
no context
attach media for test "Add member to channel with status code 200 Checking if should be able Add member to channel or not"
no context
attach media for test "Get the chat members with status code 200 Checking if should be able Get the chat members or not"
no context
attach media for test "Search chat members with status code 200 Checking if should be able Search chat members or not"
no context
attach media for test "Update member role with status code 200 Checking if should be able Update member role or not"
no context
attach media for test "Remove member from channel with status code 200 Checking if should be able Remove member from channel or not"
no context
attach media for test "Get all notification successfully with status code 200 Checking if should be able Get all notification or not"
no context
attach media for test "Mark all notification as read successfully with status code 200 Checking if should be able Mark all notification as read or not"
no context
attach media for test "Mark notification as Read successfully with status code 200 Checking if should be able Mark notification as Read or not"
no context
attach media for test "Get active notification successfully with status code 200 Checking if should be able Get active notification or not"
no context
attach media for test "Get all programs successfully with status code 200 Checking if should be able Get all programs or not"
no context
attach media for test "Get all Courses successfully with status code 200 Checking if should be able Get all Courses or not"
no context
attach media for test "Get course content successfully with status code 200 Checking if should be able Get course content or not"
no context
attach media for test "Get single bootcamps details successfully with status code 200 Checking if should be able Get single bootcamps details or not"
no context
attach media for test "Get course details successfully with status code 200 Checking if should be able Get course details or not"
no context
attach media for test "Get course roadmap data successfully with status code 200 Checking if should be able Get course roadmap data or not"
no context
attach media for test "Get reviews categories successfully with status code 200 Checking if should be able Get reviews categories or not"
no context
attach media for test "Get student reviews course successfully with status code 200 Checking if should be able get Get student reviews course or not"
no context
attach media for test "Get chapter by category successfully with status code 200 Checking if should be able Get chapter by category or not"
no context
attach media for test "Get preview chapter successfully with status code 200 Checking if should be able Get preview chapter or not"
no context
attach media for test "Get preview chapter by category successfully with status code 200 Checking if should be able Get preview chapter by category or not"
no context
attach media for test "Get my workshop successfully with status code 200 Checking if should be able Get my workshop or not"
no context
attach media for test "Get my labs successfully with status code 200 Checking if should be able Get my labs or not"
no context
attach media for test "Get my interviews successfully with status code 200 Checking if should be able Get my interviews or not"
no context
attach media for test "Get my media successfully with status code 200 Checking if should be able Get my media or not"
no context
attach media for test "Login to the portal with valid credential and get stats code 200 should be able to login"
no context
report after enhance: {"stats":{"suites":62,"tests":62,"passes":50,"pending":12,"failures":0,"testsRegistered":62,"passPercent":80.64516129032258,"pendingPercent":19.35483870967742,"other":0,"hasOther":false,"skipped":0,"hasSkipped":false,"start":"2024-11-30T11:17:56.892Z","end":"2024-11-30T11:21:51.193Z","duration":234301},"results":[{"uuid":"afb61622-1055-4c90-ba1b-216c89db0a59","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.2 verifyUser.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.2 verifyUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"47f629d2-029f-4d29-88fa-e00d5ce32113","title":"Verify user successfully with status code 200","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.2 verifyUser.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.2 verifyUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to verify user","fullTitle":"Verify user successfully with status code 200 should be able to verify user","timedOut":null,"duration":1546,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"// const otp = \"863182\";\ncy.request({\n  method: \"POST\",\n  url: \"/user/verify\",\n  headers: {\n    Authorization: `Bearer ${studentToken}`\n  },\n  body: {\n    // otp: otp,\n    // channel: \"email\",\n    // userId: studentToken, // Use student ID obtained from fixture\n  }\n}).then(response => {\n  if (response.status === 200) {\n    cy.log(\"Verification successful\"); // Log successful verification\n    console.log(\"Verification successful\");\n    // Assertions\n    expect(response.status).to.eq(200); // Check if the status code is 200\n    expect(response.body).to.have.property(\"success\", true); // Check if the success property is true\n    expect(response.duration).to.be.lessThan(3000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"b3b8c697-8a97-4d41-bbc5-48eee7c6ef61","parentUUID":"47f629d2-029f-4d29-88fa-e00d5ce32113","isHook":false,"skipped":false}],"suites":[],"passes":["b3b8c697-8a97-4d41-bbc5-48eee7c6ef61"],"failures":[],"pending":[],"skipped":[],"duration":1546,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"cf091314-4d95-4a48-8cfd-c188e91966ab","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.3 sendOtp.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.3 sendOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"97bf82ab-1eac-4c89-9c1f-ed6012a1c362","title":"Get OTP on my email successfully with status code 200","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.3 sendOtp.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.3 sendOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Should be able to send OTP to email","fullTitle":"Get OTP on my email successfully with status code 200 Should be able to send OTP to email","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/sendotp\",\n  body: {\n    userId: userId,\n    channel: \"email\",\n    captchaToken: \"\"\n  }\n}).then(response => {\n  if (response.status === 200) {\n    cy.log(\"Send OTP successful\");\n    console.log(\"Send OTP successful\");\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(3000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"39863d0c-5ae5-46c1-9b1b-a662e8de135f","parentUUID":"97bf82ab-1eac-4c89-9c1f-ed6012a1c362","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["39863d0c-5ae5-46c1-9b1b-a662e8de135f"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"504c47b7-7b98-4763-8378-3e31b7cb33c0","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.4 verifyOtp.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.4 verifyOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"f6a75c01-cbf0-4cae-978a-921469149f37","title":"Verify OTP with status code 200","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.4 verifyOtp.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.4 verifyOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to verify","fullTitle":"Verify OTP with status code 200 should be able to verify","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"const otp = \"731258\";\ncy.request({\n  method: \"POST\",\n  url: \"/user/verifyotp\",\n  body: {\n    otp: otp,\n    channel: \"email\",\n    userId: studentID // Use student ID obtained from fixture\n  }\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    cy.log(\"OTP verification successful\");\n    console.log(\"OTP verification successful\");\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"b27aa3ec-c115-45c1-bb8a-3e6f5020fc67","parentUUID":"f6a75c01-cbf0-4cae-978a-921469149f37","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["b27aa3ec-c115-45c1-bb8a-3e6f5020fc67"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"930c63c0-c234-4305-a9f8-418b0e51f89c","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.5 forgotPassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.5 forgotPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"80e0838c-718f-4a89-be85-06ed4024e327","title":"Forgot password functionality if I forgot my password successfully with status code 200","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.5 forgotPassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.5 forgotPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if a user can use forgot password functionality in the browser or not","fullTitle":"Forgot password functionality if I forgot my password successfully with status code 200 Checking if a user can use forgot password functionality in the browser or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/password/forgot\",\n  body: {\n    phone: studentNumber,\n    email: studentEmail,\n    channel: \"email\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"isOtpSend\", true);\n    cy.log(\"Forgot Password Response:\", response.body);\n    console.log(\"Forgot Password Response:\", response.body);\n  } else {\n    cy.log(\"Forgot password failed due to: \", response.body.error);\n  }\n});","err":{},"uuid":"665ba2c6-3bd7-4305-8589-b8d5a64b6b68","parentUUID":"80e0838c-718f-4a89-be85-06ed4024e327","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["665ba2c6-3bd7-4305-8589-b8d5a64b6b68"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"d8eac088-9171-4d41-a6e3-1326daeea6be","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.6 resetPassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.6 resetPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"036e8b3c-999c-4cad-a2d4-923e849f1ff9","title":"Reset my password successfully with status code 200","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.6 resetPassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.6 resetPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Reset my password successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/password/reset\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    email: studentEmail,\n    phone: studentNumber,\n    channel: \"email\",\n    otp: otp,\n    password: password\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"91377954-0a30-4dd0-9260-d1121c0c0d2a","parentUUID":"036e8b3c-999c-4cad-a2d4-923e849f1ff9","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["91377954-0a30-4dd0-9260-d1121c0c0d2a"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"898894fb-97e0-4fcf-a7f9-9b5fc955bc9e","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.7 changePassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.7 changePassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"623e9ce2-3f8a-4ba2-a3f5-a5cff739d594","title":"Change my password successfully with status code 200","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.7 changePassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.7 changePassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Change my password successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":559,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/changepassword\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    currentPassword: \"Anonno#1\",\n    newPassword: \"Anonno#1\",\n    confirmPassword: \"Anonno#1\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"8af7208b-5ccc-4164-bb4b-0a7b47035566","parentUUID":"623e9ce2-3f8a-4ba2-a3f5-a5cff739d594","isHook":false,"skipped":false}],"suites":[],"passes":["8af7208b-5ccc-4164-bb4b-0a7b47035566"],"failures":[],"pending":[],"skipped":[],"duration":559,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"696ff43b-0e47-420f-97b2-dc2ac9537b05","title":"","fullFile":"cypress/e2e/1. UserService/02. UpdateImage/1.02.1 updateImage.cy.js","file":"cypress/e2e/1. UserService/02. UpdateImage/1.02.1 updateImage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"8d9da57b-6b09-4430-a46d-3de5b4ac7988","title":"Update Profile Picture API","fullFile":"cypress/e2e/1. UserService/02. UpdateImage/1.02.1 updateImage.cy.js","file":"cypress/e2e/1. UserService/02. UpdateImage/1.02.1 updateImage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Should successfully update the profile picture","fullTitle":"Update Profile Picture API Should successfully update the profile picture","timedOut":null,"duration":893,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"const imagePath = \"/images/image1.png\";\ncy.fixture(imagePath, \"binary\").then(Cypress.Blob.binaryStringToBlob).then(blob => {\n  const formData = new FormData();\n  formData.append(\"image\", blob, \"image1.png\");\n  // Send PATCH request with FormData\n  return cy.request({\n    method: \"PATCH\",\n    url: \"/user/updateimage\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    },\n    body: formData,\n    failOnStatusCode: false\n  });\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    cy.log(\"Profile picture updated successfully\");\n    //   cy.log(JSON.stringify(response.body, null, 2));\n  } else {\n    cy.log(\"Profile picture update failed with status code: \", response.status);\n    cy.log(response.body.error || \"Unknown error\");\n  }\n});","err":{},"uuid":"16caf6e8-a53c-484d-b77f-95cabcd3ec4d","parentUUID":"8d9da57b-6b09-4430-a46d-3de5b4ac7988","isHook":false,"skipped":false}],"suites":[],"passes":["16caf6e8-a53c-484d-b77f-95cabcd3ec4d"],"failures":[],"pending":[],"skipped":[],"duration":893,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"99980d7d-f5d6-4aef-a95f-85be31722866","title":"","fullFile":"cypress/e2e/1. UserService/03. UpdatUser/1.03.1 updateUser.cy.js","file":"cypress/e2e/1. UserService/03. UpdatUser/1.03.1 updateUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"3cd4ec0f-224f-47eb-92b3-0e4db8b367ba","title":"Update user successfully with status code 200","fullFile":"cypress/e2e/1. UserService/03. UpdatUser/1.03.1 updateUser.cy.js","file":"cypress/e2e/1. UserService/03. UpdatUser/1.03.1 updateUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Update user successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":491,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/updateuser\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    firstName: \"Md\",\n    lastName: \"Shimul\",\n    about: \"Nothing\",\n    personalData: {\n      address: {\n        street: \"\",\n        city: \"Dhaka\",\n        postalCode: \"1216\",\n        state: \"Dhaka\",\n        country: \"Bangladesh\"\n      },\n      socialMedia: {\n        facebook: \"\",\n        github: \"\",\n        instagram: \"\",\n        linkedin: \"\",\n        twitter: \"\"\n      },\n      resume: \"\",\n      bio: \"Don't have bio\"\n    }\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"d710cd54-758c-4aea-be01-b952fe3b95e9","parentUUID":"3cd4ec0f-224f-47eb-92b3-0e4db8b367ba","isHook":false,"skipped":false}],"suites":[],"passes":["d710cd54-758c-4aea-be01-b952fe3b95e9"],"failures":[],"pending":[],"skipped":[],"duration":491,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"a3809f51-1c18-465c-93ec-4e6e7f439f9c","title":"","fullFile":"cypress/e2e/1. UserService/04. SyncPushToken/1.04.1 syncPushToken.cy.js","file":"cypress/e2e/1. UserService/04. SyncPushToken/1.04.1 syncPushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"8a985757-2fd7-4ffc-b337-4f576c9f92cf","title":"sync push token successfully with status code 200","fullFile":"cypress/e2e/1. UserService/04. SyncPushToken/1.04.1 syncPushToken.cy.js","file":"cypress/e2e/1. UserService/04. SyncPushToken/1.04.1 syncPushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the sync up push token or not","fullTitle":"sync push token successfully with status code 200 Checking if the sync up push token or not","timedOut":null,"duration":558,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/sync-pushtoken\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    pushToken: \"user\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"cb99837f-7d0e-4f4b-9611-c7d7e2febfe0","parentUUID":"8a985757-2fd7-4ffc-b337-4f576c9f92cf","isHook":false,"skipped":false}],"suites":[],"passes":["cb99837f-7d0e-4f4b-9611-c7d7e2febfe0"],"failures":[],"pending":[],"skipped":[],"duration":558,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"883f7160-e0ba-4bcc-87e3-a46e14aef655","title":"","fullFile":"cypress/e2e/1. UserService/05. RemovePushToken/1.05.1 removePushToken.cy.js","file":"cypress/e2e/1. UserService/05. RemovePushToken/1.05.1 removePushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"12620bf1-b093-45d2-917e-eec38e079c18","title":"Remove push token successfully with status code 200","fullFile":"cypress/e2e/1. UserService/05. RemovePushToken/1.05.1 removePushToken.cy.js","file":"cypress/e2e/1. UserService/05. RemovePushToken/1.05.1 removePushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the remove push token or not","fullTitle":"Remove push token successfully with status code 200 Checking if the remove push token or not","timedOut":null,"duration":488,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/remove-pushtoken\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    token: \"user\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Remove push token Response:\", response.body);\n    console.log(\"Remove push token Response:\", response.body);\n  } else {\n    cy.log(\"Remove push token failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"f994cbbf-3a78-4918-a437-c90ba97e2efb","parentUUID":"12620bf1-b093-45d2-917e-eec38e079c18","isHook":false,"skipped":false}],"suites":[],"passes":["f994cbbf-3a78-4918-a437-c90ba97e2efb"],"failures":[],"pending":[],"skipped":[],"duration":488,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"0f95b2e3-5262-4e2b-b660-e54ce091a0af","title":"","fullFile":"cypress/e2e/1. UserService/06. FilterUser/1.06.1 FilterUser.cy.js","file":"cypress/e2e/1. UserService/06. FilterUser/1.06.1 FilterUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"47294dd8-ab9a-4c4f-9e6f-a1b38172737e","title":"User filtering successfully with status code 200","fullFile":"cypress/e2e/1. UserService/06. FilterUser/1.06.1 FilterUser.cy.js","file":"cypress/e2e/1. UserService/06. FilterUser/1.06.1 FilterUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able user filter or not","fullTitle":"User filtering successfully with status code 200 Checking if should be able user filter or not","timedOut":null,"duration":470,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/filter\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    program: \"\",\n    session: \"\",\n    query: \"anonno\",\n    global: true\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"User filter Response:\", response.body);\n    console.log(\"User filter Response:\", response.body);\n  } else {\n    cy.log(\"User filtering failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"2ce5cf09-9fc6-4cf4-a519-723ff9e3cd29","parentUUID":"47294dd8-ab9a-4c4f-9e6f-a1b38172737e","isHook":false,"skipped":false}],"suites":[],"passes":["2ce5cf09-9fc6-4cf4-a519-723ff9e3cd29"],"failures":[],"pending":[],"skipped":[],"duration":470,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"74bcfcf5-01a2-4036-b63d-9990a3945044","title":"","fullFile":"cypress/e2e/1. UserService/07. UpdateUserStatus/1.07.1 updateUserStatus.cy.js","file":"cypress/e2e/1. UserService/07. UpdateUserStatus/1.07.1 updateUserStatus.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"04d5c4d8-5345-4ec6-b879-64934ca7fa1b","title":"Update User Status successfully with status code 200","fullFile":"cypress/e2e/1. UserService/07. UpdateUserStatus/1.07.1 updateUserStatus.cy.js","file":"cypress/e2e/1. UserService/07. UpdateUserStatus/1.07.1 updateUserStatus.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able update user status or not","fullTitle":"Update User Status successfully with status code 200 Checking if should be able update user status or not","timedOut":null,"duration":511,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/updateuser\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    profileStatus: {\n      currentStatus: \"Busy Nai\",\n      recurring: {\n        isDailyRecurring: true,\n        fromTime: \"09:01 AM\",\n        toTime: \"05:00 PM\"\n      }\n    }\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"User status Response:\", response.body);\n    console.log(\"User status Response:\", response.body);\n  } else {\n    cy.log(\"Update user status failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"481e2846-d405-41b4-bf3f-a4df7f467cfc","parentUUID":"04d5c4d8-5345-4ec6-b879-64934ca7fa1b","isHook":false,"skipped":false}],"suites":[],"passes":["481e2846-d405-41b4-bf3f-a4df7f467cfc"],"failures":[],"pending":[],"skipped":[],"duration":511,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ee863a94-eef8-4308-a835-5620e8849f6b","title":"","fullFile":"cypress/e2e/2. OrganizationService/01. UserOrganization/2.01.1 getUserOrganization.cy.js","file":"cypress/e2e/2. OrganizationService/01. UserOrganization/2.01.1 getUserOrganization.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"1a0e2581-b86e-4af9-bbee-d0dba1ede297","title":"Get user organization successfully with status code 200","fullFile":"cypress/e2e/2. OrganizationService/01. UserOrganization/2.01.1 getUserOrganization.cy.js","file":"cypress/e2e/2. OrganizationService/01. UserOrganization/2.01.1 getUserOrganization.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get user organization or not","fullTitle":"Get user organization successfully with status code 200 Checking if should be able get user organization or not","timedOut":null,"duration":579,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/organization/user-organizations\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get user organization  Response:\", response.body);\n    console.log(\"Get user organization  Response:\", response.body);\n  } else {\n    cy.log(\"Get user organization failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"c7654ab2-6a4c-4e45-b1d3-aaf18c0f6f3c","parentUUID":"1a0e2581-b86e-4af9-bbee-d0dba1ede297","isHook":false,"skipped":false}],"suites":[],"passes":["c7654ab2-6a4c-4e45-b1d3-aaf18c0f6f3c"],"failures":[],"pending":[],"skipped":[],"duration":579,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"a392eff1-6ccb-4ec3-92c0-be84f4621d5d","title":"","fullFile":"cypress/e2e/2. OrganizationService/02. CompanyDetail/2.02.1 getCompanyDetail.cy.js","file":"cypress/e2e/2. OrganizationService/02. CompanyDetail/2.02.1 getCompanyDetail.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"91ce2b9e-6f8d-4519-b4d7-66fd2e1e0fc6","title":"Get Company Details successfully with status code 200","fullFile":"cypress/e2e/2. OrganizationService/02. CompanyDetail/2.02.1 getCompanyDetail.cy.js","file":"cypress/e2e/2. OrganizationService/02. CompanyDetail/2.02.1 getCompanyDetail.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get Company Details or not","fullTitle":"Get Company Details successfully with status code 200 Checking if should be able get Company Details or not","timedOut":null,"duration":558,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/organization/details/${slug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get Company Details  Response:\", response.body);\n    console.log(\"Get Company Details  Response:\", response.body);\n  } else {\n    cy.log(\"Get Company Details failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"76ce3324-0614-4ad3-870b-f59d1fc9b405","parentUUID":"91ce2b9e-6f8d-4519-b4d7-66fd2e1e0fc6","isHook":false,"skipped":false}],"suites":[],"passes":["76ce3324-0614-4ad3-870b-f59d1fc9b405"],"failures":[],"pending":[],"skipped":[],"duration":558,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ed8ea173-2bc7-43da-b230-2ce4904788f6","title":"","fullFile":"cypress/e2e/2. OrganizationService/03. GenerateText/2.03.1 generateTextByAI.cy.js","file":"cypress/e2e/2. OrganizationService/03. GenerateText/2.03.1 generateTextByAI.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"04029e05-e368-4cb4-b10b-1980ceffd5fe","title":"Generate Text successfully with status code 200","fullFile":"cypress/e2e/2. OrganizationService/03. GenerateText/2.03.1 generateTextByAI.cy.js","file":"cypress/e2e/2. OrganizationService/03. GenerateText/2.03.1 generateTextByAI.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able generate text or not","fullTitle":"Generate Text successfully with status code 200 Checking if should be able generate text or not","timedOut":null,"duration":5750,"state":"passed","speed":"medium","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/organization/integration/generate-text\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId,\n    Enrollment: enrollmentId\n  },\n  body: {\n    prompt: \"How to make money?\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    // expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Generate text  Response:\", response.body);\n    console.log(\"Generate text  Response:\", response.body);\n  } else {\n    cy.log(\"Generate text failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"64f5f18e-e5c6-4cf9-8432-08a7515d5028","parentUUID":"04029e05-e368-4cb4-b10b-1980ceffd5fe","isHook":false,"skipped":false}],"suites":[],"passes":["64f5f18e-e5c6-4cf9-8432-08a7515d5028"],"failures":[],"pending":[],"skipped":[],"duration":5750,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"016e0180-bae2-47ca-b759-eafbcf2dc2c9","title":"","fullFile":"cypress/e2e/3. ContentService/01. Content Flow/3.01.1 getCourseContent.cy.js","file":"cypress/e2e/3. ContentService/01. Content Flow/3.01.1 getCourseContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"948d84cf-2859-43cb-b7c9-c48e83fdb259","title":"Get course content by category successfully with status code 200","fullFile":"cypress/e2e/3. ContentService/01. Content Flow/3.01.1 getCourseContent.cy.js","file":"cypress/e2e/3. ContentService/01. Content Flow/3.01.1 getCourseContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get course data or not","fullTitle":"Get course content by category successfully with status code 200 Checking if should be able get course data or not","timedOut":null,"duration":1305,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/content/getbycourse/${category}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course data Response:\", response.body);\n    console.log(\"Get course data Response:\", response.body);\n  } else {\n    cy.log(\"Get course data failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"ed63652a-ad4a-41b1-b258-a721f9f5ad36","parentUUID":"948d84cf-2859-43cb-b7c9-c48e83fdb259","isHook":false,"skipped":false}],"suites":[],"passes":["ed63652a-ad4a-41b1-b258-a721f9f5ad36"],"failures":[],"pending":[],"skipped":[],"duration":1305,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"13676216-3f78-4a10-bf22-009f15d28c54","title":"","fullFile":"cypress/e2e/3. ContentService/01. Content Flow/3.01.2 getContentById.cy.js","file":"cypress/e2e/3. ContentService/01. Content Flow/3.01.2 getContentById.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"42394e64-682c-4362-aa32-b77d39611dd0","title":"Get content by content Id successfully with status code 200","fullFile":"cypress/e2e/3. ContentService/01. Content Flow/3.01.2 getContentById.cy.js","file":"cypress/e2e/3. ContentService/01. Content Flow/3.01.2 getContentById.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get content by content Id or not","fullTitle":"Get content by content Id successfully with status code 200 Checking if should be able get content by content Id or not","timedOut":null,"duration":481,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/content/getcontent/${courseId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course by course Id Response:\", response.body);\n    console.log(\"Get course data by course id Response:\", response.body);\n  } else {\n    cy.log(\"Get content by content Id failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"299359de-77b0-48a0-a304-ab5aa44dc945","parentUUID":"42394e64-682c-4362-aa32-b77d39611dd0","isHook":false,"skipped":false}],"suites":[],"passes":["299359de-77b0-48a0-a304-ab5aa44dc945"],"failures":[],"pending":[],"skipped":[],"duration":481,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"718c71dd-6ff1-4ea8-bb17-883919f9aec8","title":"","fullFile":"cypress/e2e/3. ContentService/01. Content Flow/3.01.3 getLabContent.cy.js","file":"cypress/e2e/3. ContentService/01. Content Flow/3.01.3 getLabContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"3a294db5-da4c-4d34-a43e-6e56606d5f32","title":"Get Lab Content successfully with status code 200","fullFile":"cypress/e2e/3. ContentService/01. Content Flow/3.01.3 getLabContent.cy.js","file":"cypress/e2e/3. ContentService/01. Content Flow/3.01.3 getLabContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get Lab Content or not","fullTitle":"Get Lab Content successfully with status code 200 Checking if should be able get Lab Content or not","timedOut":null,"duration":907,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/content/labcontent\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get lab content Response:\", response.body);\n    console.log(\"Get lab content Response:\", response.body);\n  } else {\n    cy.log(\"Get lab content failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"de43ac74-4af9-4bf9-a6cc-b513948d381e","parentUUID":"3a294db5-da4c-4d34-a43e-6e56606d5f32","isHook":false,"skipped":false}],"suites":[],"passes":["de43ac74-4af9-4bf9-a6cc-b513948d381e"],"failures":[],"pending":[],"skipped":[],"duration":907,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"b1dffa3c-5254-4dc5-a4d7-94eaa799df5d","title":"","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.1 getAllCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.1 getAllCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"c6415a92-7c72-4a7e-bf90-1fb679e34a63","title":"Get all community post successfully with status code 200","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.1 getAllCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.1 getAllCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get all community post or not","fullTitle":"Get all community post successfully with status code 200 Checking if should be able get all community post or not","timedOut":null,"duration":554,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/community/post/getall\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    // \"page\": \"1\",\n    // \"limit\": \"10\",\n    // \"query\": \"\",\n    // \"tags\": [],\n    // \"user\": \"\",\n    // \"filterBy\": \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get all community post Response:\", response.body);\n    console.log(\"Get all community post Response:\", response.body);\n  } else {\n    cy.log(\"Get all community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"7fb29ecf-22fb-4270-9729-3a8780480977","parentUUID":"c6415a92-7c72-4a7e-bf90-1fb679e34a63","isHook":false,"skipped":false}],"suites":[],"passes":["7fb29ecf-22fb-4270-9729-3a8780480977"],"failures":[],"pending":[],"skipped":[],"duration":554,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f58d177e-4415-4593-b2ab-da5db243c637","title":"","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.2 getSingleCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.2 getSingleCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2d3e6919-940f-4f38-a685-34aee0455cc7","title":"Get single community post successfully with status code 200","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.2 getSingleCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.2 getSingleCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get single community post or not","fullTitle":"Get single community post successfully with status code 200 Checking if should be able get single community post or not","timedOut":null,"duration":512,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/content/community/post/673905dc92731d9ad8c78e37\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get single community post Response:\", response.body);\n    console.log(\"Get single community post Response:\", response.body);\n  } else {\n    cy.log(\"Get single community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"2b62c240-00f3-467d-b302-056306b4d1f8","parentUUID":"2d3e6919-940f-4f38-a685-34aee0455cc7","isHook":false,"skipped":false}],"suites":[],"passes":["2b62c240-00f3-467d-b302-056306b4d1f8"],"failures":[],"pending":[],"skipped":[],"duration":512,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"b9a28679-6f8c-48df-a12e-4147bf66b483","title":"","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.3 createCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.3 createCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"f98c1a8c-d6dd-4479-966e-2fc517382202","title":"Create community post successfully with status code 200","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.3 createCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.3 createCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able create community post or not","fullTitle":"Create community post successfully with status code 200 Checking if should be able create community post or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/community/post/create\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    title: faker.lorem,\n    description: faker.lorem,\n    attachments: [],\n    tags: []\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Create community post Response:\", response.body);\n    console.log(\"Create community post Response:\", response.body);\n  } else {\n    cy.log(\"Create community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"702479db-8bf6-49fe-95b8-f8473d63a23c","parentUUID":"f98c1a8c-d6dd-4479-966e-2fc517382202","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["702479db-8bf6-49fe-95b8-f8473d63a23c"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"73c60887-7878-49d0-b5e3-48441372c30e","title":"","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.4 editCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.4 editCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2bdbdcba-01ef-4fe8-99d4-9579f9f7b2af","title":"Edit community post successfully with status code 200","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.4 editCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.4 editCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Edit community post or not","fullTitle":"Edit community post successfully with status code 200 Checking if should be able Edit community post or not","timedOut":null,"duration":576,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/content/community/post/edit/673905dc92731d9ad8c78e37\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    title: \"Community post testing\",\n    description: \"Description text\",\n    tags: \"#app\",\n    attachments: \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Edit community post Response:\", response.body);\n    console.log(\"Edit community post Response:\", response.body);\n  } else {\n    cy.log(\"Edit community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"33527395-8cdc-47c7-9a20-e244d1d87a21","parentUUID":"2bdbdcba-01ef-4fe8-99d4-9579f9f7b2af","isHook":false,"skipped":false}],"suites":[],"passes":["33527395-8cdc-47c7-9a20-e244d1d87a21"],"failures":[],"pending":[],"skipped":[],"duration":576,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"90f2ce8a-8259-430d-9ec9-466ae037f659","title":"","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.5 saveCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.5 saveCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"3c569514-ae6d-42e5-b956-438d35650521","title":"Save community post successfully with status code 200","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.5 saveCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.5 saveCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Save community post or not","fullTitle":"Save community post successfully with status code 200 Checking if should be able Save community post or not","timedOut":null,"duration":563,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/community/post/option/save\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    post: \"673905dc92731d9ad8c78e37\",\n    action: \"save\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Save community post Response:\", response.body);\n    console.log(\"Save community post Response:\", response.body);\n  } else {\n    cy.log(\"Save community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"419b1b94-0ceb-4104-9246-d2528a10d831","parentUUID":"3c569514-ae6d-42e5-b956-438d35650521","isHook":false,"skipped":false}],"suites":[],"passes":["419b1b94-0ceb-4104-9246-d2528a10d831"],"failures":[],"pending":[],"skipped":[],"duration":563,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"93e05ea7-ebce-469c-8843-920b4f0b2e3b","title":"","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.6 communityPostReaction.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.6 communityPostReaction.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"b55cacdf-2850-4e05-9669-240ca625c9d1","title":"Community post reaction successfully with status code 200","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.6 communityPostReaction.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.6 communityPostReaction.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Community post reaction or not","fullTitle":"Community post reaction successfully with status code 200 Checking if should be able Community post reaction or not","timedOut":null,"duration":527,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PUT\",\n  url: \"/content/community/post/react/673905dc92731d9ad8c78e37\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    symbol: \"😀\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Community post reaction Response:\", response.body);\n    console.log(\"Community post reaction Response:\", response.body);\n  } else {\n    cy.log(\"Community post reaction failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"43a8d0bf-05ac-49e5-b81b-9b7b5694ded5","parentUUID":"b55cacdf-2850-4e05-9669-240ca625c9d1","isHook":false,"skipped":false}],"suites":[],"passes":["43a8d0bf-05ac-49e5-b81b-9b7b5694ded5"],"failures":[],"pending":[],"skipped":[],"duration":527,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"0c6673e2-e8e1-47ff-b870-da8992bec706","title":"","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.7 reportCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.7 reportCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"3cc98a7a-ee1c-4e42-b3a9-c9a5574bc034","title":"Report community post successfully with status code 200","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.7 reportCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.7 reportCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Report community post or not","fullTitle":"Report community post successfully with status code 200 Checking if should be able Report community post or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/community/post/option/save\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    post: \"{{postId}}\",\n    action: \"report\",\n    reportReason: \"spam\",\n    note: \"{{note}}\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Report community post Response:\", response.body);\n    console.log(\"Report community post Response:\", response.body);\n  } else {\n    cy.log(\"Report community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"ab383041-339f-4996-873e-b5fd3c42f1ca","parentUUID":"3cc98a7a-ee1c-4e42-b3a9-c9a5574bc034","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["ab383041-339f-4996-873e-b5fd3c42f1ca"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"acae0ea0-fdcc-4d66-9fdd-e206f38fc626","title":"","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.8 communityTopContributor.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.8 communityTopContributor.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"10aaa835-a52f-4ec5-b17e-2cf34ba1fe9f","title":"Get Community top contribute successfully with status code 200","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.8 communityTopContributor.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.8 communityTopContributor.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get Community top contribute or not","fullTitle":"Get Community top contribute successfully with status code 200 Checking if should be able Get Community top contribute or not","timedOut":null,"duration":509,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/content/community/top-users\",\n  headers: {\n    Organization: organizationId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get Community top contribute Response:\", response.body);\n    console.log(\"Get Community top contribute Response:\", response.body);\n  } else {\n    cy.log(\"Get Community top contribute failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b7afaa9f-a117-4c8a-bc7f-a0a65e0cd8a5","parentUUID":"10aaa835-a52f-4ec5-b17e-2cf34ba1fe9f","isHook":false,"skipped":false}],"suites":[],"passes":["b7afaa9f-a117-4c8a-bc7f-a0a65e0cd8a5"],"failures":[],"pending":[],"skipped":[],"duration":509,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"1475f88a-283d-48e9-a86f-7179f6ab3a0b","title":"","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.9 deleteCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.9 deleteCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"74294e0a-9c6a-44fe-957a-925e96727d6d","title":"Delete community post successfully with status code 200","fullFile":"cypress/e2e/3. ContentService/02. Community Flow/3.02.9 deleteCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. Community Flow/3.02.9 deleteCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Delete community post or not","fullTitle":"Delete community post successfully with status code 200 Checking if should be able Delete community post or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"DELETE\",\n  url: \"/content/community/post/delete/{{postId}}\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Delete community post Response:\", response.body);\n    console.log(\"Delete community post Response:\", response.body);\n  } else {\n    cy.log(\"Delete community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"17168eaf-f92f-428c-8a06-239cc42d2c80","parentUUID":"74294e0a-9c6a-44fe-957a-925e96727d6d","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["17168eaf-f92f-428c-8a06-239cc42d2c80"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"8c21330b-96d5-45f2-aba0-fa41b383cba8","title":"","fullFile":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.1 createComment.cy.js","file":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.1 createComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"f2e7a481-db49-454c-af2e-b9c83b6640f4","title":"Create community post comment successfully with status code 200","fullFile":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.1 createComment.cy.js","file":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.1 createComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Create community post comment or not","fullTitle":"Create community post comment successfully with status code 200 Checking if should be able Create community post comment or not","timedOut":null,"duration":528,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/comment/create\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    comment: \"Nice work bro 3\",\n    contentId: \"673905dc92731d9ad8c78e37\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 201) {\n    const {\n      comment\n    } = response.body;\n    cy.writeFile(\"cypress/fixtures/deleteCommentId.json\", {\n      commentId: comment._id\n    });\n    // Assertions\n    expect(response.status).to.eq(201);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Create community post comment Response:\", response.body);\n    console.log(\"Create community post comment Response:\", response.body);\n  } else {\n    cy.log(\"Create community post comment failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"2223fe07-c12f-4f55-bda5-f5d7fe716735","parentUUID":"f2e7a481-db49-454c-af2e-b9c83b6640f4","isHook":false,"skipped":false}],"suites":[],"passes":["2223fe07-c12f-4f55-bda5-f5d7fe716735"],"failures":[],"pending":[],"skipped":[],"duration":528,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"bdd4ebb8-5a87-49ce-a054-6696e7af114b","title":"","fullFile":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.2 replyComment.cy.js","file":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.2 replyComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"0eb7ea0d-3b90-4187-9614-f2fa821eab42","title":"Reply community post successfully with status code 200","fullFile":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.2 replyComment.cy.js","file":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.2 replyComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Reply community post or not","fullTitle":"Reply community post successfully with status code 200 Checking if should be able Reply community post or not","timedOut":null,"duration":480,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/comment/create\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    contentId: \"673905dc92731d9ad8c78e37\",\n    comment: \"Thank you\",\n    parentId: \"674835d5b419790019bb0f5a\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Reply community post Response:\", response.body);\n    console.log(\"Reply community post Response:\", response.body);\n  } else {\n    cy.log(\"Reply community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"3ef8ca83-a7ac-4553-8884-e10c320f833f","parentUUID":"0eb7ea0d-3b90-4187-9614-f2fa821eab42","isHook":false,"skipped":false}],"suites":[],"passes":["3ef8ca83-a7ac-4553-8884-e10c320f833f"],"failures":[],"pending":[],"skipped":[],"duration":480,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"680461da-dc26-4f88-9a27-b1ad8c4f3e06","title":"","fullFile":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.3 updateComment.cy.js","file":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.3 updateComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"74fb0a07-f564-43ae-a36b-d025e0b2411e","title":"Update community post comment successfully with status code 200","fullFile":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.3 updateComment.cy.js","file":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.3 updateComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Update community post comment or not","fullTitle":"Update community post comment successfully with status code 200 Checking if should be able Update community post comment or not","timedOut":null,"duration":525,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/content/comment/update/674835d5b419790019bb0f5a`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    comment: \"Updated comment again\",\n    contentId: \"673905dc92731d9ad8c78e37\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Update community post comment Response:\", response.body);\n    console.log(\"Update community post comment Response:\", response.body);\n  } else {\n    cy.log(\"Update community post comment failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"3a106f18-65c0-4a36-bf0f-f2f07dee55d8","parentUUID":"74fb0a07-f564-43ae-a36b-d025e0b2411e","isHook":false,"skipped":false}],"suites":[],"passes":["3a106f18-65c0-4a36-bf0f-f2f07dee55d8"],"failures":[],"pending":[],"skipped":[],"duration":525,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"241f0eb7-0833-4eb3-8b4e-2809fed894f9","title":"","fullFile":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.4 getComment.cy.js","file":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.4 getComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"d59dc9c9-2841-47a6-b677-8febcdca3e42","title":"Get community comment successfully with status code 200","fullFile":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.4 getComment.cy.js","file":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.4 getComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get community comment or not","fullTitle":"Get community comment successfully with status code 200 Checking if should be able Get community comment or not","timedOut":null,"duration":546,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/content/comment/get/673905dc92731d9ad8c78e37\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get community comment Response:\", response.body);\n    console.log(\"Get community comment Response:\", response.body);\n  } else {\n    cy.log(\"Get community comment failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"c8b36aee-8bae-4668-97c5-305b142380c0","parentUUID":"d59dc9c9-2841-47a6-b677-8febcdca3e42","isHook":false,"skipped":false}],"suites":[],"passes":["c8b36aee-8bae-4668-97c5-305b142380c0"],"failures":[],"pending":[],"skipped":[],"duration":546,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"44a6ea7b-b5b1-4edc-9c4c-63ee5e84df23","title":"","fullFile":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.5 getReplies.cy.js","file":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.5 getReplies.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"fd4732aa-744e-4fd0-b120-bbbdf78cf1f2","title":"Get community comment reply successfully with status code 200","fullFile":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.5 getReplies.cy.js","file":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.5 getReplies.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get community comment reply or not","fullTitle":"Get community comment reply successfully with status code 200 Checking if should be able Get community comment reply or not","timedOut":null,"duration":572,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/content/comment/get/673905dc92731d9ad8c78e37?parentId=674835d5b419790019bb0f5a\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get community comment reply Response:\", response.body);\n    console.log(\"Get community comment reply Response:\", response.body);\n  } else {\n    cy.log(\"Get community comment reply failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"3713c710-772c-49ea-90f6-67a6d30ddf2f","parentUUID":"fd4732aa-744e-4fd0-b120-bbbdf78cf1f2","isHook":false,"skipped":false}],"suites":[],"passes":["3713c710-772c-49ea-90f6-67a6d30ddf2f"],"failures":[],"pending":[],"skipped":[],"duration":572,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"80484c03-afda-48c2-97d4-4847cfc75166","title":"","fullFile":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.6 deleteComment.cy.js","file":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.6 deleteComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"dddabdb3-37f3-4497-a426-34912e3a18a5","title":"Delete community post comment successfully with status code 200","fullFile":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.6 deleteComment.cy.js","file":"cypress/e2e/3. ContentService/03. Comment Flow/3.03.6 deleteComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Delete community post comment or not","fullTitle":"Delete community post comment successfully with status code 200 Checking if should be able Delete community post comment or not","timedOut":null,"duration":604,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"DELETE\",\n  url: `/content/comment/delete/${delete_commentId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Delete community post comment Response:\", response.body);\n    console.log(\"Delete community post comment Response:\", response.body);\n  } else {\n    cy.log(\"Delete community post comment failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"69d8957b-0fec-4d9f-b5e1-8c3e58b179f1","parentUUID":"dddabdb3-37f3-4497-a426-34912e3a18a5","isHook":false,"skipped":false}],"suites":[],"passes":["69d8957b-0fec-4d9f-b5e1-8c3e58b179f1"],"failures":[],"pending":[],"skipped":[],"duration":604,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"e9fb0853-8a62-4370-9a2d-23748b579653","title":"","fullFile":"cypress/e2e/5. CommonService/01. MyNavigation/5.01.1 getMyNavigation.cy.js","file":"cypress/e2e/5. CommonService/01. MyNavigation/5.01.1 getMyNavigation.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"d9959a70-5311-42ab-a63c-4bbb01f6a8df","title":"Get my navigation successfully with status code 200","fullFile":"cypress/e2e/5. CommonService/01. MyNavigation/5.01.1 getMyNavigation.cy.js","file":"cypress/e2e/5. CommonService/01. MyNavigation/5.01.1 getMyNavigation.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get my navigation or not","fullTitle":"Get my navigation successfully with status code 200 Checking if should be able get my navigation or not","timedOut":null,"duration":427,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/navigation/mynavigations\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my navigation Response:\", response.body);\n    console.log(\"get may navigation post Response:\", response.body);\n  } else {\n    cy.log(\"Get my navigation failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"4194fd19-f4e9-4ac3-9fb4-6663c21d1cf3","parentUUID":"d9959a70-5311-42ab-a63c-4bbb01f6a8df","isHook":false,"skipped":false}],"suites":[],"passes":["4194fd19-f4e9-4ac3-9fb4-6663c21d1cf3"],"failures":[],"pending":[],"skipped":[],"duration":427,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"76f3f76b-ffec-4e6a-ab35-b8735ec5ae6e","title":"","fullFile":"cypress/e2e/6. ChatService/02. FindOrCreateChatsByUser/6.02.1 findOrCreateChatsByUser.cy.js","file":"cypress/e2e/6. ChatService/02. FindOrCreateChatsByUser/6.02.1 findOrCreateChatsByUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"a72442b6-1c1e-4d48-9d7f-0ebad2134624","title":"Find or Create chats by user with status code 200","fullFile":"cypress/e2e/6. ChatService/02. FindOrCreateChatsByUser/6.02.1 findOrCreateChatsByUser.cy.js","file":"cypress/e2e/6. ChatService/02. FindOrCreateChatsByUser/6.02.1 findOrCreateChatsByUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Find or Create chats by user or not","fullTitle":"Find or Create chats by user with status code 200 Checking if should be able Find or Create chats by user or not","timedOut":null,"duration":559,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/findorcreate/${userId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {},\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(3000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Find or Create chats by user Response:\", response.body);\n  } else {\n    cy.log(\"Find or Create chats by user failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"4df3c74a-e298-4202-95d9-ae7b690ed779","parentUUID":"a72442b6-1c1e-4d48-9d7f-0ebad2134624","isHook":false,"skipped":false}],"suites":[],"passes":["4df3c74a-e298-4202-95d9-ae7b690ed779"],"failures":[],"pending":[],"skipped":[],"duration":559,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"5a3c59ac-16c1-4aeb-97ef-efa11e280250","title":"","fullFile":"cypress/e2e/6. ChatService/01. MyChats/6.01.1 myChats.cy.js","file":"cypress/e2e/6. ChatService/01. MyChats/6.01.1 myChats.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"f1646a5e-2c93-45ce-ae5b-cf516b348f48","title":"My all chats with status code 200","fullFile":"cypress/e2e/6. ChatService/01. MyChats/6.01.1 myChats.cy.js","file":"cypress/e2e/6. ChatService/01. MyChats/6.01.1 myChats.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get my all chats or not","fullTitle":"My all chats with status code 200 Checking if should be able get my all chats or not","timedOut":null,"duration":1517,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/chat/mychats\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(3000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"get my chats Response:\", response.body);\n  } else {\n    cy.log(\"Get my chats failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"58cc636e-d7b0-430f-9da6-f0d369f7b6ba","parentUUID":"f1646a5e-2c93-45ce-ae5b-cf516b348f48","isHook":false,"skipped":false}],"suites":[],"passes":["58cc636e-d7b0-430f-9da6-f0d369f7b6ba"],"failures":[],"pending":[],"skipped":[],"duration":1517,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"d9828aae-dd2d-4c05-b833-17320602e89a","title":"","fullFile":"cypress/e2e/6. ChatService/03. FetchChatMessage/6.03.1 fetchChatMessage.cy.js","file":"cypress/e2e/6. ChatService/03. FetchChatMessage/6.03.1 fetchChatMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"35758f31-bbd8-45f5-a0dc-f24be79b1359","title":"Fetch the chat message with status code 200","fullFile":"cypress/e2e/6. ChatService/03. FetchChatMessage/6.03.1 fetchChatMessage.cy.js","file":"cypress/e2e/6. ChatService/03. FetchChatMessage/6.03.1 fetchChatMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Fetch the chat message or not","fullTitle":"Fetch the chat message with status code 200 Checking if should be able Fetch the chat message or not","timedOut":null,"duration":1269,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/messages`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    page: 1,\n    chat: chatId,\n    limit: 5\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(7000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Fetch the chat message Response:\", response.body);\n  } else {\n    cy.log(\"Fetch the chat message failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"7e9144a4-f667-4393-a2d2-02be133ba8e6","parentUUID":"35758f31-bbd8-45f5-a0dc-f24be79b1359","isHook":false,"skipped":false}],"suites":[],"passes":["7e9144a4-f667-4393-a2d2-02be133ba8e6"],"failures":[],"pending":[],"skipped":[],"duration":1269,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"e2da3491-20d4-43ba-babf-7348203aa4c5","title":"","fullFile":"cypress/e2e/6. ChatService/04. AddMemberToChnnel/6.04.1 addMemberToChannel.cy.js","file":"cypress/e2e/6. ChatService/04. AddMemberToChnnel/6.04.1 addMemberToChannel.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"bdea1bf7-018f-41d6-b3c8-ec13ccba10e4","title":"Add member to channel with status code 200","fullFile":"cypress/e2e/6. ChatService/04. AddMemberToChnnel/6.04.1 addMemberToChannel.cy.js","file":"cypress/e2e/6. ChatService/04. AddMemberToChnnel/6.04.1 addMemberToChannel.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Add member to channel or not","fullTitle":"Add member to channel with status code 200 Checking if should be able Add member to channel or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/chat/channel/adduser/${chatId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n    // Organization: organizationId,\n  },\n  body: {\n    member: memberId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Add member to channel Response:\", response.body);\n  } else {\n    cy.log(\"Add member to channel failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"13bb43e1-3752-4a98-ba7f-73abd8589eeb","parentUUID":"bdea1bf7-018f-41d6-b3c8-ec13ccba10e4","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["13bb43e1-3752-4a98-ba7f-73abd8589eeb"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"0b13e096-07a1-436e-b9c9-fa3256d00720","title":"","fullFile":"cypress/e2e/6. ChatService/05. GetChatMembers/6.05.1 getChatMembers.cy.js","file":"cypress/e2e/6. ChatService/05. GetChatMembers/6.05.1 getChatMembers.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"0ae67196-5a39-44a8-990f-a8354b2995d4","title":"Get the chat members with status code 200","fullFile":"cypress/e2e/6. ChatService/05. GetChatMembers/6.05.1 getChatMembers.cy.js","file":"cypress/e2e/6. ChatService/05. GetChatMembers/6.05.1 getChatMembers.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get the chat members or not","fullTitle":"Get the chat members with status code 200 Checking if should be able Get the chat members or not","timedOut":null,"duration":601,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/members/${chatId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n    // Organization: organizationId,\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Get the chat members Response:\", response.body);\n  } else {\n    cy.log(\"Get the chat members failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"a5fc1020-0fbb-4ef8-bdc4-85f15c198d66","parentUUID":"0ae67196-5a39-44a8-990f-a8354b2995d4","isHook":false,"skipped":false}],"suites":[],"passes":["a5fc1020-0fbb-4ef8-bdc4-85f15c198d66"],"failures":[],"pending":[],"skipped":[],"duration":601,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"eeacc0ba-6f69-4784-8ddb-4249f1983ef4","title":"","fullFile":"cypress/e2e/6. ChatService/06. SearchChatMembers/6.06.1 searchChatMembers.cy.js","file":"cypress/e2e/6. ChatService/06. SearchChatMembers/6.06.1 searchChatMembers.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"1d4c57eb-6205-4e34-b49d-3861b721942d","title":"Search chat members with status code 200","fullFile":"cypress/e2e/6. ChatService/06. SearchChatMembers/6.06.1 searchChatMembers.cy.js","file":"cypress/e2e/6. ChatService/06. SearchChatMembers/6.06.1 searchChatMembers.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Search chat members or not","fullTitle":"Search chat members with status code 200 Checking if should be able Search chat members or not","timedOut":null,"duration":603,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/members/${chatId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n    // Organization: organizationId,\n  },\n  body: {\n    query: \"anonno\",\n    limit: 5\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Search chat members Response:\", response.body);\n  } else {\n    cy.log(\"Search chat members failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"ca444da7-b4eb-4a1b-aa5f-74679f5b6ac3","parentUUID":"1d4c57eb-6205-4e34-b49d-3861b721942d","isHook":false,"skipped":false}],"suites":[],"passes":["ca444da7-b4eb-4a1b-aa5f-74679f5b6ac3"],"failures":[],"pending":[],"skipped":[],"duration":603,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"6d9591f7-6750-423d-8450-ba7ad276ebc4","title":"","fullFile":"cypress/e2e/6. ChatService/07. UpdateMemberRole/6.07.1 updateMemberRole.cy.js","file":"cypress/e2e/6. ChatService/07. UpdateMemberRole/6.07.1 updateMemberRole.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"e0b59412-7641-427b-880d-06f701f55676","title":"Update member role with status code 200","fullFile":"cypress/e2e/6. ChatService/07. UpdateMemberRole/6.07.1 updateMemberRole.cy.js","file":"cypress/e2e/6. ChatService/07. UpdateMemberRole/6.07.1 updateMemberRole.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Update member role or not","fullTitle":"Update member role with status code 200 Checking if should be able Update member role or not","timedOut":null,"duration":506,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/chat/member/update\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n    // Organization: organizationId,\n  },\n  body: {\n    member: memberId,\n    role: \"moderator\",\n    chat: chatId,\n    actionType: \"role\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Update member role Response:\", response.body);\n  } else {\n    cy.log(\"Update member role failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"7bebf466-47e6-40a4-b362-f61cb91e2541","parentUUID":"e0b59412-7641-427b-880d-06f701f55676","isHook":false,"skipped":false}],"suites":[],"passes":["7bebf466-47e6-40a4-b362-f61cb91e2541"],"failures":[],"pending":[],"skipped":[],"duration":506,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"4a6e174c-0dec-45e8-b378-2d267cb641ee","title":"","fullFile":"cypress/e2e/6. ChatService/08. RemoveMemberFromChannel/6.08.1 removeMemberFromChannel.cy.js","file":"cypress/e2e/6. ChatService/08. RemoveMemberFromChannel/6.08.1 removeMemberFromChannel.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"24dcd412-780f-46ee-9b60-d3f2042e6cae","title":"Remove member from channel with status code 200","fullFile":"cypress/e2e/6. ChatService/08. RemoveMemberFromChannel/6.08.1 removeMemberFromChannel.cy.js","file":"cypress/e2e/6. ChatService/08. RemoveMemberFromChannel/6.08.1 removeMemberFromChannel.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Remove member from channel or not","fullTitle":"Remove member from channel with status code 200 Checking if should be able Remove member from channel or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/chat/channel/remove-user/${chatId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n    // Organization: organizationId,\n  },\n  body: {\n    member: memberId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Remove member from channel Response:\", response.body);\n  } else {\n    cy.log(\"Remove member from channel failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"51c172c7-a8f9-48c9-a64a-115a130f7239","parentUUID":"24dcd412-780f-46ee-9b60-d3f2042e6cae","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["51c172c7-a8f9-48c9-a64a-115a130f7239"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"9808cb52-cfd0-44b2-9932-3eb27607aeb5","title":"","fullFile":"cypress/e2e/7. Notification Service/01. Get All Notification/7.01.1 getAllNotification.cy.js","file":"cypress/e2e/7. Notification Service/01. Get All Notification/7.01.1 getAllNotification.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"63d77015-f758-4418-824e-f2c2c421fe4c","title":"Get all notification successfully with status code 200","fullFile":"cypress/e2e/7. Notification Service/01. Get All Notification/7.01.1 getAllNotification.cy.js","file":"cypress/e2e/7. Notification Service/01. Get All Notification/7.01.1 getAllNotification.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get all notification or not","fullTitle":"Get all notification successfully with status code 200 Checking if should be able Get all notification or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/notification/mynotifications\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get all notification Response:\", response.body);\n    console.log(\"Get all notification Response:\", response.body);\n  } else {\n    cy.log(\"Get all notification failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"07984d3c-b332-47a5-b173-e9572286999e","parentUUID":"63d77015-f758-4418-824e-f2c2c421fe4c","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["07984d3c-b332-47a5-b173-e9572286999e"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ac3a97b4-d89d-4be9-af81-f319b5014779","title":"","fullFile":"cypress/e2e/7. Notification Service/02. Mark All Notification as Read/7.02.1 markAllNotificationAsRead.cy.js","file":"cypress/e2e/7. Notification Service/02. Mark All Notification as Read/7.02.1 markAllNotificationAsRead.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"f35ea999-6fbd-4bd2-aa91-cd04aa060394","title":"Mark all notification as read successfully with status code 200","fullFile":"cypress/e2e/7. Notification Service/02. Mark All Notification as Read/7.02.1 markAllNotificationAsRead.cy.js","file":"cypress/e2e/7. Notification Service/02. Mark All Notification as Read/7.02.1 markAllNotificationAsRead.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Mark all notification as read or not","fullTitle":"Mark all notification as read successfully with status code 200 Checking if should be able Mark all notification as read or not","timedOut":null,"duration":503,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/notification/markreadall\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {},\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Mark all notification as read Response:\", response.body);\n    console.log(\"Mark all notification as read Response:\", response.body);\n  } else {\n    cy.log(\"Mark all notification as read failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b12909fc-9f0e-45c2-983b-e270a0da8bee","parentUUID":"f35ea999-6fbd-4bd2-aa91-cd04aa060394","isHook":false,"skipped":false}],"suites":[],"passes":["b12909fc-9f0e-45c2-983b-e270a0da8bee"],"failures":[],"pending":[],"skipped":[],"duration":503,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"491c9acc-5b62-4d04-be7f-05c32fa8edc3","title":"","fullFile":"cypress/e2e/7. Notification Service/03. Mark Notification as Read/7.03.1 markNotificationAsRead.cy.js","file":"cypress/e2e/7. Notification Service/03. Mark Notification as Read/7.03.1 markNotificationAsRead.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"e28feb66-b6da-4765-9f9b-0fe3b4a89371","title":"Mark notification as Read successfully with status code 200","fullFile":"cypress/e2e/7. Notification Service/03. Mark Notification as Read/7.03.1 markNotificationAsRead.cy.js","file":"cypress/e2e/7. Notification Service/03. Mark Notification as Read/7.03.1 markNotificationAsRead.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Mark notification as Read or not","fullTitle":"Mark notification as Read successfully with status code 200 Checking if should be able Mark notification as Read or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/notification/markread/:notificationId\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Mark notification as Read Response:\", response.body);\n    console.log(\"Mark notification as Read Response:\", response.body);\n  } else {\n    cy.log(\"Mark notification as Read failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"597b05c2-02f5-4d74-b34c-bd02aea5ff19","parentUUID":"e28feb66-b6da-4765-9f9b-0fe3b4a89371","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["597b05c2-02f5-4d74-b34c-bd02aea5ff19"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"25fa425e-de21-445a-a187-49384ae0bceb","title":"","fullFile":"cypress/e2e/7. Notification Service/04. Get Active Notification/7.04.1 getActiveNotification.cy.js","file":"cypress/e2e/7. Notification Service/04. Get Active Notification/7.04.1 getActiveNotification.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"a29ac836-679a-48b5-a6e4-4e711d72362d","title":"Get active notification successfully with status code 200","fullFile":"cypress/e2e/7. Notification Service/04. Get Active Notification/7.04.1 getActiveNotification.cy.js","file":"cypress/e2e/7. Notification Service/04. Get Active Notification/7.04.1 getActiveNotification.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get active notification or not","fullTitle":"Get active notification successfully with status code 200 Checking if should be able Get active notification or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/notification/job/getactive/${sourceid}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get active notification Response:\", response.body);\n    console.log(\"Get active notification Response:\", response.body);\n  } else {\n    cy.log(\"Get active notification failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"3001cee5-50cb-43aa-855d-b0b2a8e9881d","parentUUID":"a29ac836-679a-48b5-a6e4-4e711d72362d","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["3001cee5-50cb-43aa-855d-b0b2a8e9881d"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"a4f01944-9ffb-491e-b425-e8867aa4ed15","title":"","fullFile":"cypress/e2e/4. Program Service/01. Programs/4.01.1 All Programs/4.01.1 allPrograms.cy.js","file":"cypress/e2e/4. Program Service/01. Programs/4.01.1 All Programs/4.01.1 allPrograms.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"b371ee61-92fa-4bb8-a82b-4fbf10c0ab20","title":"Get all programs successfully with status code 200","fullFile":"cypress/e2e/4. Program Service/01. Programs/4.01.1 All Programs/4.01.1 allPrograms.cy.js","file":"cypress/e2e/4. Program Service/01. Programs/4.01.1 All Programs/4.01.1 allPrograms.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get all programs or not","fullTitle":"Get all programs successfully with status code 200 Checking if should be able Get all programs or not","timedOut":null,"duration":824,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/course/organization/${slug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    currentPage: \"1\",\n    limit: \"10\",\n    type: type\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get all programs Response:\", response.body);\n    console.log(\"Get all programs Response:\", response.body);\n  } else {\n    cy.log(\"Get all programs failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"70e8a5cf-5ed8-4028-ba78-a1c88eaced4c","parentUUID":"b371ee61-92fa-4bb8-a82b-4fbf10c0ab20","isHook":false,"skipped":false}],"suites":[],"passes":["70e8a5cf-5ed8-4028-ba78-a1c88eaced4c"],"failures":[],"pending":[],"skipped":[],"duration":824,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"bc0cba77-09bd-4d26-92ed-ff6907fbac85","title":"","fullFile":"cypress/e2e/4. Program Service/01. Programs/4.01.2 All Courses/4.01.2 allCourses.cy.js","file":"cypress/e2e/4. Program Service/01. Programs/4.01.2 All Courses/4.01.2 allCourses.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"ed567b71-77fa-448d-abcf-8a8e7375095c","title":"Get all Courses successfully with status code 200","fullFile":"cypress/e2e/4. Program Service/01. Programs/4.01.2 All Courses/4.01.2 allCourses.cy.js","file":"cypress/e2e/4. Program Service/01. Programs/4.01.2 All Courses/4.01.2 allCourses.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get all Courses or not","fullTitle":"Get all Courses successfully with status code 200 Checking if should be able Get all Courses or not","timedOut":null,"duration":609,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/course/organization/${slug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    currentPage: \"1\",\n    limit: \"10\",\n    type: type\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get all Courses Response:\", response.body);\n    console.log(\"Get all Courses Response:\", response.body);\n  } else {\n    cy.log(\"Get all Courses failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"609961ce-96ee-42cb-887d-c246ce30a5f9","parentUUID":"ed567b71-77fa-448d-abcf-8a8e7375095c","isHook":false,"skipped":false}],"suites":[],"passes":["609961ce-96ee-42cb-887d-c246ce30a5f9"],"failures":[],"pending":[],"skipped":[],"duration":609,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"2efd4f54-3e2b-43a6-8341-ad0a38aab80c","title":"","fullFile":"cypress/e2e/4. Program Service/01. Programs/4.01.3 Course Content/4.01.3 courseContent.cy.js","file":"cypress/e2e/4. Program Service/01. Programs/4.01.3 Course Content/4.01.3 courseContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"cdb2c288-35fb-4ca9-980d-9004645123c3","title":"Get course content successfully with status code 200","fullFile":"cypress/e2e/4. Program Service/01. Programs/4.01.3 Course Content/4.01.3 courseContent.cy.js","file":"cypress/e2e/4. Program Service/01. Programs/4.01.3 Course Content/4.01.3 courseContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get course content or not","fullTitle":"Get course content successfully with status code 200 Checking if should be able Get course content or not","timedOut":null,"duration":772,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/course/content/${programSlug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course content Response:\", response.body);\n    console.log(\"Get course content Response:\", response.body);\n  } else {\n    cy.log(\"Get course content failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"420fa5df-a7bd-4b04-8f58-7901e0741a72","parentUUID":"cdb2c288-35fb-4ca9-980d-9004645123c3","isHook":false,"skipped":false}],"suites":[],"passes":["420fa5df-a7bd-4b04-8f58-7901e0741a72"],"failures":[],"pending":[],"skipped":[],"duration":772,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"d129d958-a90a-45a3-ab38-3b8495cdbef7","title":"","fullFile":"cypress/e2e/4. Program Service/01. Programs/4.01.4 Single Bootcamps Details/4.01.4 singleBootcampsDetails.cy.js","file":"cypress/e2e/4. Program Service/01. Programs/4.01.4 Single Bootcamps Details/4.01.4 singleBootcampsDetails.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"46bf7da2-4694-4e94-a440-64b3ea6c6f9d","title":"Get single bootcamps details successfully with status code 200","fullFile":"cypress/e2e/4. Program Service/01. Programs/4.01.4 Single Bootcamps Details/4.01.4 singleBootcampsDetails.cy.js","file":"cypress/e2e/4. Program Service/01. Programs/4.01.4 Single Bootcamps Details/4.01.4 singleBootcampsDetails.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get single bootcamps details or not","fullTitle":"Get single bootcamps details successfully with status code 200 Checking if should be able Get single bootcamps details or not","timedOut":null,"duration":767,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/course/single/${program_slug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get single bootcamps details Response:\", response.body);\n    console.log(\"Get single bootcamps details Response:\", response.body);\n  } else {\n    cy.log(\"Get single bootcamps details failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"5f81f624-4749-4261-83f1-fd3c7c8e6e15","parentUUID":"46bf7da2-4694-4e94-a440-64b3ea6c6f9d","isHook":false,"skipped":false}],"suites":[],"passes":["5f81f624-4749-4261-83f1-fd3c7c8e6e15"],"failures":[],"pending":[],"skipped":[],"duration":767,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ac1de6b5-850b-4dbd-a9b4-bc3ef67736f7","title":"","fullFile":"cypress/e2e/4. Program Service/01. Programs/4.01.5 Course Details v2/4.01.5 courseDetailsV2.cy.js","file":"cypress/e2e/4. Program Service/01. Programs/4.01.5 Course Details v2/4.01.5 courseDetailsV2.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"3b12e191-66eb-41a6-b35d-2eaeaf012815","title":"Get course details successfully with status code 200","fullFile":"cypress/e2e/4. Program Service/01. Programs/4.01.5 Course Details v2/4.01.5 courseDetailsV2.cy.js","file":"cypress/e2e/4. Program Service/01. Programs/4.01.5 Course Details v2/4.01.5 courseDetailsV2.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get course details or not","fullTitle":"Get course details successfully with status code 200 Checking if should be able Get course details or not","timedOut":null,"duration":743,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/course/contentv2/${program_slug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course details Response:\", response.body);\n    console.log(\"Get course details Response:\", response.body);\n  } else {\n    cy.log(\"Get course details failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"8578a48a-fe53-4f62-a623-9977e07c7ea9","parentUUID":"3b12e191-66eb-41a6-b35d-2eaeaf012815","isHook":false,"skipped":false}],"suites":[],"passes":["8578a48a-fe53-4f62-a623-9977e07c7ea9"],"failures":[],"pending":[],"skipped":[],"duration":743,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"70f7eb03-d407-4f52-85a3-37fdaa361c1c","title":"","fullFile":"cypress/e2e/4. Program Service/01. Programs/4.01.6 Course Roadmap/4.01.6 courseRoadmap.cy.js","file":"cypress/e2e/4. Program Service/01. Programs/4.01.6 Course Roadmap/4.01.6 courseRoadmap.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"c66ea80e-6b9e-46c4-bc0e-e660f5dd91ef","title":"Get course roadmap data successfully with status code 200","fullFile":"cypress/e2e/4. Program Service/01. Programs/4.01.6 Course Roadmap/4.01.6 courseRoadmap.cy.js","file":"cypress/e2e/4. Program Service/01. Programs/4.01.6 Course Roadmap/4.01.6 courseRoadmap.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get course roadmap data or not","fullTitle":"Get course roadmap data successfully with status code 200 Checking if should be able Get course roadmap data or not","timedOut":null,"duration":478,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/course/roadmap/find/${courseId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course roadmap data Response:\", response.body);\n    console.log(\"Get course roadmap data Response:\", response.body);\n  } else {\n    cy.log(\"Get course roadmap data failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"7ac61627-8373-441c-a74b-244e9e4285cb","parentUUID":"c66ea80e-6b9e-46c4-bc0e-e660f5dd91ef","isHook":false,"skipped":false}],"suites":[],"passes":["7ac61627-8373-441c-a74b-244e9e4285cb"],"failures":[],"pending":[],"skipped":[],"duration":478,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"000cca11-18b9-401e-b5c0-26f97eecfa6d","title":"","fullFile":"cypress/e2e/4. Program Service/01. Programs/4.01.7 Reviews Categories/4.01.7 reviewsCategories.cy.js","file":"cypress/e2e/4. Program Service/01. Programs/4.01.7 Reviews Categories/4.01.7 reviewsCategories.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"a8aab41e-00cc-48ad-a4dc-be918caeafaf","title":"Get reviews categories successfully with status code 200","fullFile":"cypress/e2e/4. Program Service/01. Programs/4.01.7 Reviews Categories/4.01.7 reviewsCategories.cy.js","file":"cypress/e2e/4. Program Service/01. Programs/4.01.7 Reviews Categories/4.01.7 reviewsCategories.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get reviews categories or not","fullTitle":"Get reviews categories successfully with status code 200 Checking if should be able Get reviews categories or not","timedOut":null,"duration":611,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/course/review/get/${course_id}?fields[]=categories&page=1&limit=10`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get reviews categories Response:\", response.body);\n    console.log(\"Get reviews categories Response:\", response.body);\n  } else {\n    cy.log(\"Get reviews categories failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"2c5b1def-a3ab-46b6-a182-b69dcb5b176e","parentUUID":"a8aab41e-00cc-48ad-a4dc-be918caeafaf","isHook":false,"skipped":false}],"suites":[],"passes":["2c5b1def-a3ab-46b6-a182-b69dcb5b176e"],"failures":[],"pending":[],"skipped":[],"duration":611,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"fb84fe8b-8eb5-4431-bb13-c9125c6ff253","title":"","fullFile":"cypress/e2e/4. Program Service/01. Programs/4.01.8 Course Student Reviews/4.01.8 courseStudentReviews.cy.js","file":"cypress/e2e/4. Program Service/01. Programs/4.01.8 Course Student Reviews/4.01.8 courseStudentReviews.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"cb01ae15-0688-4a82-b85a-efc4e56ffcc0","title":"Get student reviews course successfully with status code 200","fullFile":"cypress/e2e/4. Program Service/01. Programs/4.01.8 Course Student Reviews/4.01.8 courseStudentReviews.cy.js","file":"cypress/e2e/4. Program Service/01. Programs/4.01.8 Course Student Reviews/4.01.8 courseStudentReviews.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get Get student reviews course or not","fullTitle":"Get student reviews course successfully with status code 200 Checking if should be able get Get student reviews course or not","timedOut":null,"duration":574,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/course/review/get/${course_id}?fields[]=reviews&&page=1&limit=10&category=student`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get student reviews course Response:\", response.body);\n    console.log(\"Get student reviews course Response:\", response.body);\n  } else {\n    cy.log(\"Get student reviews course failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"488a1c84-b00b-4cc8-99a1-b80e51d8db96","parentUUID":"cb01ae15-0688-4a82-b85a-efc4e56ffcc0","isHook":false,"skipped":false}],"suites":[],"passes":["488a1c84-b00b-4cc8-99a1-b80e51d8db96"],"failures":[],"pending":[],"skipped":[],"duration":574,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"8cc30fcd-57c7-4262-9010-8b9aca8bb257","title":"","fullFile":"cypress/e2e/4. Program Service/02. Chapter/4.02.1 Chapter By Category/4.02.1 chapterByCategory.cy.js","file":"cypress/e2e/4. Program Service/02. Chapter/4.02.1 Chapter By Category/4.02.1 chapterByCategory.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2efe0488-15fd-4746-aa95-dd2d5f18276d","title":"Get chapter by category successfully with status code 200","fullFile":"cypress/e2e/4. Program Service/02. Chapter/4.02.1 Chapter By Category/4.02.1 chapterByCategory.cy.js","file":"cypress/e2e/4. Program Service/02. Chapter/4.02.1 Chapter By Category/4.02.1 chapterByCategory.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get chapter by category or not","fullTitle":"Get chapter by category successfully with status code 200 Checking if should be able Get chapter by category or not","timedOut":null,"duration":807,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/course/chapterv2/get/${program_slug}/${categoryId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  body: {\n    parent: \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get chapter by category Response:\", response.body);\n    console.log(\"Get chapter by category Response:\", response.body);\n  } else {\n    cy.log(\"Get chapter by category failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"10b724c0-f5c5-4b10-a6a1-c6eab1fcb6b4","parentUUID":"2efe0488-15fd-4746-aa95-dd2d5f18276d","isHook":false,"skipped":false}],"suites":[],"passes":["10b724c0-f5c5-4b10-a6a1-c6eab1fcb6b4"],"failures":[],"pending":[],"skipped":[],"duration":807,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"d2b59818-d507-4cdb-bd82-7009c206d6d3","title":"","fullFile":"cypress/e2e/4. Program Service/02. Chapter/4.02.2 Preview Chapter/4.02.2 previewChapter.cy.js","file":"cypress/e2e/4. Program Service/02. Chapter/4.02.2 Preview Chapter/4.02.2 previewChapter.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"99c4066f-6dcf-4131-8077-eee468fd1b72","title":"Get preview chapter successfully with status code 200","fullFile":"cypress/e2e/4. Program Service/02. Chapter/4.02.2 Preview Chapter/4.02.2 previewChapter.cy.js","file":"cypress/e2e/4. Program Service/02. Chapter/4.02.2 Preview Chapter/4.02.2 previewChapter.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get preview chapter or not","fullTitle":"Get preview chapter successfully with status code 200 Checking if should be able Get preview chapter or not","timedOut":null,"duration":711,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/course/chapterv2/preview\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    courseId: \"64fcb957b0cf6e9ae43d126d\",\n    fields: [\"chapters\", \"categories\", \"totalDuration\", \"totalChapter\", \"totalLesson\"]\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get preview chapter Response:\", response.body);\n    console.log(\"Get preview chapter Response:\", response.body);\n  } else {\n    cy.log(\"Get preview chapter failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"0a2a45c1-1864-494c-bf56-2364d7af8fd3","parentUUID":"99c4066f-6dcf-4131-8077-eee468fd1b72","isHook":false,"skipped":false}],"suites":[],"passes":["0a2a45c1-1864-494c-bf56-2364d7af8fd3"],"failures":[],"pending":[],"skipped":[],"duration":711,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"3884c086-a89c-40ae-a03f-65649ba31119","title":"","fullFile":"cypress/e2e/4. Program Service/02. Chapter/4.02.3 Preview Chapter By Category/4.02.4 previewChapterByCategory.cy.js","file":"cypress/e2e/4. Program Service/02. Chapter/4.02.3 Preview Chapter By Category/4.02.4 previewChapterByCategory.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"67ebc83b-3fe5-4231-ae82-c54cb918655b","title":"Get preview chapter by category successfully with status code 200","fullFile":"cypress/e2e/4. Program Service/02. Chapter/4.02.3 Preview Chapter By Category/4.02.4 previewChapterByCategory.cy.js","file":"cypress/e2e/4. Program Service/02. Chapter/4.02.3 Preview Chapter By Category/4.02.4 previewChapterByCategory.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get preview chapter by category or not","fullTitle":"Get preview chapter by category successfully with status code 200 Checking if should be able Get preview chapter by category or not","timedOut":null,"duration":611,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/course/chapterv2/preview\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    courseId: \"64fcb957b0cf6e9ae43d126d\",\n    fields: [\"chapters\"],\n    categoryId: \"65eb5eaff6d7cc3e14e90cd7\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get preview chapter by category Response:\", response.body);\n    console.log(\"Get preview chapter by category Response:\", response.body);\n  } else {\n    cy.log(\"Get preview chapter by category failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"174c4790-248e-4c40-8164-9f7ae724c74e","parentUUID":"67ebc83b-3fe5-4231-ae82-c54cb918655b","isHook":false,"skipped":false}],"suites":[],"passes":["174c4790-248e-4c40-8164-9f7ae724c74e"],"failures":[],"pending":[],"skipped":[],"duration":611,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"678ccae5-de05-40f5-ae99-358b21e19950","title":"","fullFile":"cypress/e2e/4. Program Service/03. Workshop/4.03.1 My Workshop/4.03.1 myWorkshop.cy.js","file":"cypress/e2e/4. Program Service/03. Workshop/4.03.1 My Workshop/4.03.1 myWorkshop.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"7c4f591b-9322-42d0-a863-c70c1f8c5a58","title":"Get my workshop successfully with status code 200","fullFile":"cypress/e2e/4. Program Service/03. Workshop/4.03.1 My Workshop/4.03.1 myWorkshop.cy.js","file":"cypress/e2e/4. Program Service/03. Workshop/4.03.1 My Workshop/4.03.1 myWorkshop.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my workshop or not","fullTitle":"Get my workshop successfully with status code 200 Checking if should be able Get my workshop or not","timedOut":null,"duration":790,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/workshop/myworkshop/workshop\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my workshop Response:\", response.body);\n    console.log(\"Get my workshop Response:\", response.body);\n  } else {\n    cy.log(\"Get my workshop failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"e51b507c-2e6c-4c29-b743-2b6aa924ce3c","parentUUID":"7c4f591b-9322-42d0-a863-c70c1f8c5a58","isHook":false,"skipped":false}],"suites":[],"passes":["e51b507c-2e6c-4c29-b743-2b6aa924ce3c"],"failures":[],"pending":[],"skipped":[],"duration":790,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f388dc69-d50c-4fa2-989c-5ed3099f3c9b","title":"","fullFile":"cypress/e2e/4. Program Service/03. Workshop/4.03.2 My Labs/4.03.2 myLabs.cy.js","file":"cypress/e2e/4. Program Service/03. Workshop/4.03.2 My Labs/4.03.2 myLabs.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"fd0706cc-9e99-4aee-bbfc-aced52f30a31","title":"Get my labs successfully with status code 200","fullFile":"cypress/e2e/4. Program Service/03. Workshop/4.03.2 My Labs/4.03.2 myLabs.cy.js","file":"cypress/e2e/4. Program Service/03. Workshop/4.03.2 My Labs/4.03.2 myLabs.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my labs or not","fullTitle":"Get my labs successfully with status code 200 Checking if should be able Get my labs or not","timedOut":null,"duration":824,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/workshop/myworkshop/lab\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my labs Response:\", response.body);\n    console.log(\"Get my labs Response:\", response.body);\n  } else {\n    cy.log(\"Get my labs failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"5bc5ffee-9b77-4f1b-a548-791d3c41fc96","parentUUID":"fd0706cc-9e99-4aee-bbfc-aced52f30a31","isHook":false,"skipped":false}],"suites":[],"passes":["5bc5ffee-9b77-4f1b-a548-791d3c41fc96"],"failures":[],"pending":[],"skipped":[],"duration":824,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"8a65bf81-4b15-4d84-9112-b1869fbc66b9","title":"","fullFile":"cypress/e2e/4. Program Service/03. Workshop/4.03.3 My Interviews/4.03.3 myInterviews.cy.js","file":"cypress/e2e/4. Program Service/03. Workshop/4.03.3 My Interviews/4.03.3 myInterviews.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"9ef0c291-5289-40de-b21e-5a8b429d24d8","title":"Get my interviews successfully with status code 200","fullFile":"cypress/e2e/4. Program Service/03. Workshop/4.03.3 My Interviews/4.03.3 myInterviews.cy.js","file":"cypress/e2e/4. Program Service/03. Workshop/4.03.3 My Interviews/4.03.3 myInterviews.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my interviews or not","fullTitle":"Get my interviews successfully with status code 200 Checking if should be able Get my interviews or not","timedOut":null,"duration":856,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/workshop/myworkshop/interview\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my interviews Response:\", response.body);\n    console.log(\"Get my interviews Response:\", response.body);\n  } else {\n    cy.log(\"Get my interviews failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"2c8cef06-6cbd-4719-8a0c-c3ea0d65efda","parentUUID":"9ef0c291-5289-40de-b21e-5a8b429d24d8","isHook":false,"skipped":false}],"suites":[],"passes":["2c8cef06-6cbd-4719-8a0c-c3ea0d65efda"],"failures":[],"pending":[],"skipped":[],"duration":856,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ff3d8dcf-b0f1-408a-88e4-2c0aa52c01da","title":"","fullFile":"cypress/e2e/4. Program Service/04. Media/4.04.1 My Media/4.04.1 myMedia.cy.js","file":"cypress/e2e/4. Program Service/04. Media/4.04.1 My Media/4.04.1 myMedia.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"bbbc1cab-ebf7-403d-ba28-943b34ab3aa7","title":"Get my media successfully with status code 200","fullFile":"cypress/e2e/4. Program Service/04. Media/4.04.1 My Media/4.04.1 myMedia.cy.js","file":"cypress/e2e/4. Program Service/04. Media/4.04.1 My Media/4.04.1 myMedia.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my media or not","fullTitle":"Get my media successfully with status code 200 Checking if should be able Get my media or not","timedOut":null,"duration":849,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/media/mymedia\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my media Response:\", response.body);\n    console.log(\"Get my media Response:\", response.body);\n  } else {\n    cy.log(\"Get my media failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"757f4f45-6ff3-47de-8f37-8cef81dc9d4e","parentUUID":"bbbc1cab-ebf7-403d-ba28-943b34ab3aa7","isHook":false,"skipped":false}],"suites":[],"passes":["757f4f45-6ff3-47de-8f37-8cef81dc9d4e"],"failures":[],"pending":[],"skipped":[],"duration":849,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"1516371d-f702-495e-9981-4d3d6835317e","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.1 userLogin.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.1 userLogin.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"56a3220a-44e0-453b-8d39-444499b7a5b5","title":"Login to the portal with valid credential and get stats code 200","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.1 userLogin.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.1 userLogin.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to login","fullTitle":"Login to the portal with valid credential and get stats code 200 should be able to login","timedOut":null,"duration":1456,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/login\",\n  body: {\n    email: userEmail,\n    password: userPassword\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    const {\n      token,\n      user\n    } = response.body;\n    const studentToken = token;\n    const studentLoginID = user._id;\n    // Store token and login ID to fixtures\n    cy.writeFile(\"cypress/fixtures/studentToken.json\", {\n      studentLoginToken: studentToken\n    });\n    // cy.writeFile(\"cypress/fixtures/studentLoginID.json\", {\n    //   userId: studentLoginID,\n    // });\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"token\");\n    expect(response.body.success).to.eq(true);\n    expect(response.duration).to.be.lessThan(2000);\n    cy.log(\"User Token:\", studentToken);\n    cy.log(\"User ID:\", studentLoginID);\n    console.log(\"User Token:\", studentToken);\n    console.log(\"User ID:\", studentLoginID);\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Login failed with status:\", response.status);\n    cy.log(`Login failed  ${response.body.error}`);\n    cy.log(`Login failed with status code ${response.status}`);\n  }\n});","err":{},"uuid":"2bef0e2c-bb4f-4289-b26f-413b7ed7a677","parentUUID":"56a3220a-44e0-453b-8d39-444499b7a5b5","isHook":false,"skipped":false}],"suites":[],"passes":["2bef0e2c-bb4f-4289-b26f-413b7ed7a677"],"failures":[],"pending":[],"skipped":[],"duration":1456,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000}],"meta":{"mocha":{"version":"7.0.1"},"mochawesome":{"options":{"quiet":true,"reportFilename":"mochawesome","saveHtml":false,"saveJson":true,"consoleReporter":"spec","useInlineDiffs":false,"code":true},"version":"7.1.3"},"marge":{"options":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true,"overwrite":false,"html":false,"json":true,"reportDir":"cypress/reports/html/.jsons"},"version":"6.2.0"}}}
HTML result: ["/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/reports/html/index.html",null]
done
