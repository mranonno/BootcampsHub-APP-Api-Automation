start cypress-mochawesome-reporter 3.8.2
cwd: C:\Users\TS4U\Desktop\Projects\Api-Automation
cypress.json: {"configFile":"C:\\Users\\TS4U\\Desktop\\Projects\\Api-Automation\\cypress.config.js","testingType":"e2e","projectId":"8axud3","reporter":"cypress-mochawesome-reporter","reporterOptions":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true,"reportDir":"C:\\Users\\TS4U\\Desktop\\Projects\\Api-Automation\\cypress\\reports\\html"},"baseUrl":"https://staging-api.bootcampshub.ai/api","setupNodeEvents":"[Function setupNodeEvents]","projectRoot":"C:\\Users\\TS4U\\Desktop\\Projects\\Api-Automation","projectName":"Api-Automation","repoRoot":"C:/Users/TS4U/Desktop/Projects/Api-Automation","rawJson":{"projectId":"8axud3","reporter":"cypress-mochawesome-reporter","reporterOptions":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true},"e2e":{"baseUrl":"https://staging-api.bootcampshub.ai/api","setupNodeEvents":"[Function setupNodeEvents]"},"baseUrl":"https://staging-api.bootcampshub.ai/api","setupNodeEvents":"[Function setupNodeEvents]","envFile":{},"projectRoot":"C:\\Users\\TS4U\\Desktop\\Projects\\Api-Automation","projectName":"Api-Automation","repoRoot":"C:/Users/TS4U/Desktop/Projects/Api-Automation"},"morgan":false,"isTextTerminal":true,"socketId":"wgb5k9bpag","report":true,"animationDistanceThreshold":5,"arch":"x64","blockHosts":null,"chromeWebSecurity":true,"clientCertificates":[],"defaultCommandTimeout":4000,"downloadsFolder":"C:\\Users\\TS4U\\Desktop\\Projects\\Api-Automation\\cypress\\downloads","env":{},"execTimeout":60000,"experimentalCspAllowList":false,"experimentalFetchPolyfill":false,"experimentalInteractiveRunEvents":false,"experimentalRunAllSpecs":false,"experimentalMemoryManagement":false,"experimentalModifyObstructiveThirdPartyCode":false,"experimentalSkipDomainInjection":null,"experimentalJustInTimeCompile":false,"experimentalOriginDependencies":false,"experimentalSourceRewriting":false,"experimentalSingleTabRunMode":false,"experimentalStudio":false,"experimentalWebKitSupport":false,"fileServerFolder":"C:\\Users\\TS4U\\Desktop\\Projects\\Api-Automation","fixturesFolder":"C:\\Users\\TS4U\\Desktop\\Projects\\Api-Automation\\cypress\\fixtures","excludeSpecPattern":"*.hot-update.js","includeShadowDom":false,"keystrokeDelay":0,"modifyObstructiveCode":true,"numTestsKeptInMemory":0,"platform":"win32","pageLoadTimeout":60000,"port":2636,"redirectionLimit":20,"requestTimeout":5000,"resolvedNodePath":"C:\\Program Files\\nodejs\\node.exe","resolvedNodeVersion":"18.18.0","responseTimeout":30000,"retries":{"runMode":0,"openMode":0},"screenshotOnRunFailure":true,"screenshotsFolder":"C:\\Users\\TS4U\\Desktop\\Projects\\Api-Automation\\cypress\\screenshots","slowTestThreshold":10000,"scrollBehavior":"top","supportFile":"C:\\Users\\TS4U\\Desktop\\Projects\\Api-Automation\\cypress\\support\\e2e.js","supportFolder":"C:\\Users\\TS4U\\Desktop\\Projects\\Api-Automation\\cypress\\support","taskTimeout":60000,"testIsolation":true,"trashAssetsBeforeRuns":true,"userAgent":null,"video":false,"videoCompression":false,"videosFolder":"C:\\Users\\TS4U\\Desktop\\Projects\\Api-Automation\\cypress\\videos","viewportHeight":660,"viewportWidth":1000,"waitForAnimations":true,"watchForFileChanges":false,"specPattern":"cypress/e2e/**/*.cy.{js,jsx,ts,tsx}","additionalIgnorePattern":[],"autoOpen":false,"browsers":[{"name":"chrome","family":"chromium","channel":"stable","displayName":"Chrome","version":"131.0.6778.86","path":"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe","minSupportedVersion":64,"majorVersion":"131"},{"name":"firefox","family":"firefox","channel":"dev","displayName":"Firefox Developer Edition","version":"133.0","path":"C:\\Program Files\\Firefox Developer Edition\\firefox.exe","minSupportedVersion":86,"majorVersion":"133"},{"name":"edge","family":"chromium","channel":"stable","displayName":"Edge","version":"131.0.2903.70","path":"C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe","minSupportedVersion":79,"majorVersion":"131"},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"118.0.5993.159","path":"","majorVersion":118}],"clientRoute":"/__/","cypressBinaryRoot":"C:\\Users\\TS4U\\AppData\\Local\\Cypress\\Cache\\13.15.2\\Cypress\\resources\\app","devServerPublicPathRoute":"/__cypress/src","hosts":null,"isInteractive":true,"namespace":"__cypress","reporterRoute":"/__cypress/reporter","socketIoCookie":"__socket","socketIoRoute":"/__socket","version":"13.15.2","protocolEnabled":false,"hideCommandLog":false,"hideRunnerUi":false,"cypressEnv":"production","resolved":{"animationDistanceThreshold":{"value":5,"from":"default"},"arch":{"value":"x64","from":"default"},"baseUrl":{"value":"https://staging-api.bootcampshub.ai/api","from":"config"},"blockHosts":{"value":null,"from":"default"},"chromeWebSecurity":{"value":true,"from":"default"},"clientCertificates":{"value":[],"from":"default"},"defaultCommandTimeout":{"value":4000,"from":"default"},"downloadsFolder":{"value":"cypress/downloads","from":"default"},"env":{},"execTimeout":{"value":60000,"from":"default"},"experimentalCspAllowList":{"value":false,"from":"default"},"experimentalFetchPolyfill":{"value":false,"from":"default"},"experimentalInteractiveRunEvents":{"value":false,"from":"default"},"experimentalRunAllSpecs":{"value":false,"from":"default"},"experimentalMemoryManagement":{"value":false,"from":"default"},"experimentalModifyObstructiveThirdPartyCode":{"value":false,"from":"default"},"experimentalSkipDomainInjection":{"value":null,"from":"default"},"experimentalJustInTimeCompile":{"value":false,"from":"default"},"experimentalOriginDependencies":{"value":false,"from":"default"},"experimentalSourceRewriting":{"value":false,"from":"default"},"experimentalSingleTabRunMode":{"value":false,"from":"default"},"experimentalStudio":{"value":false,"from":"default"},"experimentalWebKitSupport":{"value":false,"from":"default"},"fileServerFolder":{"value":"","from":"default"},"fixturesFolder":{"value":"cypress/fixtures","from":"default"},"excludeSpecPattern":{"value":"*.hot-update.js","from":"default"},"includeShadowDom":{"value":false,"from":"default"},"keystrokeDelay":{"value":0,"from":"default"},"modifyObstructiveCode":{"value":true,"from":"default"},"numTestsKeptInMemory":{"value":0,"from":"config"},"platform":{"value":"win32","from":"default"},"pageLoadTimeout":{"value":60000,"from":"default"},"port":{"value":null,"from":"default"},"projectId":{"value":"8axud3","from":"config"},"redirectionLimit":{"value":20,"from":"default"},"reporter":{"value":"cypress-mochawesome-reporter","from":"config"},"reporterOptions":{"value":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true},"from":"config"},"requestTimeout":{"value":5000,"from":"default"},"resolvedNodePath":{"value":null,"from":"default"},"resolvedNodeVersion":{"value":null,"from":"default"},"responseTimeout":{"value":30000,"from":"default"},"retries":{"value":{"runMode":0,"openMode":0},"from":"default"},"screenshotOnRunFailure":{"value":true,"from":"default"},"screenshotsFolder":{"value":"cypress/screenshots","from":"default"},"slowTestThreshold":{"value":10000,"from":"default"},"scrollBehavior":{"value":"top","from":"default"},"supportFile":{"value":"cypress/support/e2e.{js,jsx,ts,tsx}","from":"default"},"supportFolder":{"value":false,"from":"default"},"taskTimeout":{"value":60000,"from":"default"},"testIsolation":{"value":true,"from":"default"},"trashAssetsBeforeRuns":{"value":true,"from":"default"},"userAgent":{"value":null,"from":"default"},"video":{"value":false,"from":"default"},"videoCompression":{"value":false,"from":"default"},"videosFolder":{"value":"cypress/videos","from":"default"},"viewportHeight":{"value":660,"from":"default"},"viewportWidth":{"value":1000,"from":"default"},"waitForAnimations":{"value":true,"from":"default"},"watchForFileChanges":{"value":false,"from":"config"},"specPattern":{"value":"cypress/e2e/**/*.cy.{js,jsx,ts,tsx}","from":"default"},"browsers":{"value":[{"name":"chrome","family":"chromium","channel":"stable","displayName":"Chrome","version":"131.0.6778.86","path":"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe","minSupportedVersion":64,"majorVersion":"131"},{"name":"firefox","family":"firefox","channel":"dev","displayName":"Firefox Developer Edition","version":"133.0","path":"C:\\Program Files\\Firefox Developer Edition\\firefox.exe","minSupportedVersion":86,"majorVersion":"133"},{"name":"edge","family":"chromium","channel":"stable","displayName":"Edge","version":"131.0.2903.70","path":"C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe","minSupportedVersion":79,"majorVersion":"131"},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"118.0.5993.159","path":"","majorVersion":118,"isHeadless":true,"isHeaded":false}],"from":"runtime"},"hosts":{"value":null,"from":"default"},"isInteractive":{"value":true,"from":"default"},"configFile":{"value":"C:\\Users\\TS4U\\Desktop\\Projects\\Api-Automation\\cypress.config.js","from":"plugin"},"testingType":{"value":"e2e","from":"plugin"}},"remote":{"origin":"https://staging-api.bootcampshub.ai","strategy":"http","fileServer":null,"domainName":"bootcampshub.ai","props":{"port":"443","protocol":"https:","subdomain":"staging-api","domain":"bootcampshub","tld":"ai"}},"browser":null,"specs":[],"proxyUrl":"http://localhost:2636","browserUrl":"https://staging-api.bootcampshub.ai/__/","reporterUrl":"https://staging-api.bootcampshub.ai/__cypress/reporter","proxyServer":"http://localhost:2636","state":{}}
simple config: {"jsonDir":"C:\\Users\\TS4U\\Desktop\\Projects\\Api-Automation\\cypress\\reports\\html\\.jsons","reporterOptions":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true,"reportDir":"C:\\Users\\TS4U\\Desktop\\Projects\\Api-Automation\\cypress\\reports\\html"},"screenshotsDir":"C:\\Users\\TS4U\\Desktop\\Projects\\Api-Automation\\cypress\\screenshots","videosFolder":"C:\\Users\\TS4U\\Desktop\\Projects\\Api-Automation\\cypress\\videos","outputDir":"C:\\Users\\TS4U\\Desktop\\Projects\\Api-Automation\\cypress\\reports\\html","removeJsonsFolderAfterMerge":true}
report before enhance: {"stats":{"suites":22,"tests":22,"passes":19,"pending":2,"failures":1,"testsRegistered":22,"passPercent":86.36363636363636,"pendingPercent":9.090909090909092,"other":0,"hasOther":false,"skipped":0,"hasSkipped":false,"start":"2024-11-28T10:27:14.717Z","end":"2024-11-28T10:28:54.418Z","duration":99701},"results":[{"uuid":"7e1f37da-3a32-4ade-89fd-84d62896d051","title":"","fullFile":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.2 verifyUser.cy.js","file":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.2 verifyUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"8c8c355b-537e-4170-94d8-c73cf2570db4","title":"Verify user successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to verify user","fullTitle":"Verify user successfully with status code 200 should be able to verify user","timedOut":null,"duration":1200,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"// const otp = \"863182\";\ncy.request({\n  method: \"POST\",\n  url: \"/user/verify\",\n  headers: {\n    Authorization: `Bearer ${studentToken}`\n  },\n  body: {\n    // otp: otp,\n    // channel: \"email\",\n    // userId: studentToken, // Use student ID obtained from fixture\n  }\n}).then(response => {\n  if (response.status === 200) {\n    cy.log(\"Verification successful\"); // Log successful verification\n    console.log(\"Verification successful\");\n    // Assertions\n    expect(response.status).to.eq(200); // Check if the status code is 200\n    expect(response.body).to.have.property(\"success\", true); // Check if the success property is true\n    expect(response.duration).to.be.lessThan(3000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"958b4888-9883-4a11-b771-3654527ce57b","parentUUID":"8c8c355b-537e-4170-94d8-c73cf2570db4","isHook":false,"skipped":false}],"suites":[],"passes":["958b4888-9883-4a11-b771-3654527ce57b"],"failures":[],"pending":[],"skipped":[],"duration":1200,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"fec5385e-4150-47b6-b934-d1a2bb0da3aa","title":"","fullFile":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.3 sendOtp.cy.js","file":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.3 sendOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"081a76bf-6959-4a2d-bcfb-01d0b4e6ea90","title":"Get OTP on my email successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Should be able to send OTP to email","fullTitle":"Get OTP on my email successfully with status code 200 Should be able to send OTP to email","timedOut":null,"duration":650,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/sendotp\",\n  body: {\n    userId: userId,\n    channel: \"email\",\n    captchaToken: \"\"\n  }\n}).then(response => {\n  if (response.status === 200) {\n    cy.log(\"Send OTP successful\");\n    console.log(\"Send OTP successful\");\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(3000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"606251bc-ad34-42b1-979f-8729be396af7","parentUUID":"081a76bf-6959-4a2d-bcfb-01d0b4e6ea90","isHook":false,"skipped":false}],"suites":[],"passes":["606251bc-ad34-42b1-979f-8729be396af7"],"failures":[],"pending":[],"skipped":[],"duration":650,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"3800a964-907a-42d9-9a39-c02703d659d5","title":"","fullFile":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.4 verifyOtp.cy.js","file":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.4 verifyOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"a8ab08fc-c428-4975-a1c3-cb68d3312556","title":"Verify OTP with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to verify","fullTitle":"Verify OTP with status code 200 should be able to verify","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"const otp = \"731258\";\ncy.request({\n  method: \"POST\",\n  url: \"/user/verifyotp\",\n  body: {\n    otp: otp,\n    channel: \"email\",\n    userId: studentID // Use student ID obtained from fixture\n  }\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    cy.log(\"OTP verification successful\");\n    console.log(\"OTP verification successful\");\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"28569910-8d3c-4821-b591-e9baca68854b","parentUUID":"a8ab08fc-c428-4975-a1c3-cb68d3312556","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["28569910-8d3c-4821-b591-e9baca68854b"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"4722f755-3571-4ec3-85eb-f583e4e8c24e","title":"","fullFile":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.5 forgotPassword.cy.js","file":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.5 forgotPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"757e922a-809c-42e1-b930-7c1f2935e01c","title":"Forgot password functionality if I forgot my password successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if a user can use forgot password functionality in the browser or not","fullTitle":"Forgot password functionality if I forgot my password successfully with status code 200 Checking if a user can use forgot password functionality in the browser or not","timedOut":null,"duration":669,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/password/forgot\",\n  body: {\n    phone: studentNumber,\n    email: studentEmail,\n    channel: \"email\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"isOtpSend\", true);\n    cy.log(\"Forgot Password Response:\", response.body);\n    console.log(\"Forgot Password Response:\", response.body);\n  } else {\n    cy.log(\"Forgot password failed due to: \", response.body.error);\n  }\n});","err":{},"uuid":"0099cc28-4475-4458-b225-11e3cce3dba2","parentUUID":"757e922a-809c-42e1-b930-7c1f2935e01c","isHook":false,"skipped":false}],"suites":[],"passes":["0099cc28-4475-4458-b225-11e3cce3dba2"],"failures":[],"pending":[],"skipped":[],"duration":669,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"28fb6563-d769-46fb-8120-7a11785b4158","title":"","fullFile":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.6 resetPassword.cy.js","file":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.6 resetPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"be5d238c-3438-4bad-9d49-ce24f815cde4","title":"Reset my password successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Reset my password successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/password/reset\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    email: studentEmail,\n    phone: studentNumber,\n    channel: \"email\",\n    otp: otp,\n    password: password\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"44367730-e734-4a70-82b6-8db5c34e439a","parentUUID":"be5d238c-3438-4bad-9d49-ce24f815cde4","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["44367730-e734-4a70-82b6-8db5c34e439a"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"5c6e032a-5663-4485-8817-e9c148d773d2","title":"","fullFile":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.7 changePassword.cy.js","file":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.7 changePassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"1d04a815-1290-42d2-bca3-49b3b17aae6e","title":"Change my password successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Change my password successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":445,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/changepassword\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    currentPassword: \"Anonno#1\",\n    newPassword: \"Anonno#1\",\n    confirmPassword: \"Anonno#1\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"3a6efd8e-8c3a-4e7d-a9bf-05211635e593","parentUUID":"1d04a815-1290-42d2-bca3-49b3b17aae6e","isHook":false,"skipped":false}],"suites":[],"passes":["3a6efd8e-8c3a-4e7d-a9bf-05211635e593"],"failures":[],"pending":[],"skipped":[],"duration":445,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"a33e8201-7da6-49cf-b4d8-86081d914e21","title":"","fullFile":"cypress\\e2e\\1. UserService\\02. UpdateImage\\1.02.1 updateImage.cy.js","file":"cypress\\e2e\\1. UserService\\02. UpdateImage\\1.02.1 updateImage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"9efe33a2-4b83-42e5-b7aa-de866b2ba3d2","title":"Update Profile Picture API","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Should successfully update the profile picture","fullTitle":"Update Profile Picture API Should successfully update the profile picture","timedOut":null,"duration":950,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"const imagePath = \"/images/image1.png\";\ncy.fixture(imagePath, \"binary\").then(Cypress.Blob.binaryStringToBlob).then(blob => {\n  const formData = new FormData();\n  formData.append(\"image\", blob, \"image1.png\");\n  // Send PATCH request with FormData\n  return cy.request({\n    method: \"PATCH\",\n    url: \"/user/updateimage\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    },\n    body: formData,\n    failOnStatusCode: false\n  });\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    cy.log(\"Profile picture updated successfully\");\n    //   cy.log(JSON.stringify(response.body, null, 2));\n  } else {\n    cy.log(\"Profile picture update failed with status code: \", response.status);\n    cy.log(response.body.error || \"Unknown error\");\n  }\n});","err":{},"uuid":"093caa9b-95f8-4085-aa6f-ca338443b5df","parentUUID":"9efe33a2-4b83-42e5-b7aa-de866b2ba3d2","isHook":false,"skipped":false}],"suites":[],"passes":["093caa9b-95f8-4085-aa6f-ca338443b5df"],"failures":[],"pending":[],"skipped":[],"duration":950,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"38a48f92-534c-418e-9160-d57dd30bb442","title":"","fullFile":"cypress\\e2e\\1. UserService\\03. UpdatUser\\1.03.1 updateUser.cy.js","file":"cypress\\e2e\\1. UserService\\03. UpdatUser\\1.03.1 updateUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"cd0f69f7-646f-40f3-8ab4-7734c776fb4e","title":"Update user successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Update user successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":440,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/updateuser\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    firstName: \"Anonno\",\n    lastName: \"Das\",\n    about: \"Nothing\",\n    personalData: {\n      address: {\n        street: \"\",\n        city: \"Narail\",\n        postalCode: \"7521\",\n        state: \"Khulna\",\n        country: \"Bangladesh\"\n      },\n      socialMedia: {\n        facebook: \"\",\n        github: \"\",\n        instagram: \"\",\n        linkedin: \"\",\n        twitter: \"\"\n      },\n      resume: \"\",\n      bio: \"Don't have bio\"\n    }\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"563d5051-d29e-48c2-9c4a-3644017f9660","parentUUID":"cd0f69f7-646f-40f3-8ab4-7734c776fb4e","isHook":false,"skipped":false}],"suites":[],"passes":["563d5051-d29e-48c2-9c4a-3644017f9660"],"failures":[],"pending":[],"skipped":[],"duration":440,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"17e076ec-1ebd-4da7-adc5-cdc114b67ed7","title":"","fullFile":"cypress\\e2e\\1. UserService\\04. SyncPushToken\\1.04.1 syncPushToken.cy.js","file":"cypress\\e2e\\1. UserService\\04. SyncPushToken\\1.04.1 syncPushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"f3c84f0e-bd20-4453-9ceb-0c78d4f3939f","title":"sync push token successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the sync up push token or not","fullTitle":"sync push token successfully with status code 200 Checking if the sync up push token or not","timedOut":null,"duration":428,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/sync-pushtoken\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    pushToken: \"user\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b7a2561f-4525-497f-9f54-84888038eb03","parentUUID":"f3c84f0e-bd20-4453-9ceb-0c78d4f3939f","isHook":false,"skipped":false}],"suites":[],"passes":["b7a2561f-4525-497f-9f54-84888038eb03"],"failures":[],"pending":[],"skipped":[],"duration":428,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"9c55bece-8d27-474b-89a9-426d30cda10e","title":"","fullFile":"cypress\\e2e\\1. UserService\\05. RemovePushToken\\1.05.1 removePushToken.cy.js","file":"cypress\\e2e\\1. UserService\\05. RemovePushToken\\1.05.1 removePushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2c16d6b8-ac97-4fb6-bc9a-55875628a8db","title":"Remove push token successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the remove push token or not","fullTitle":"Remove push token successfully with status code 200 Checking if the remove push token or not","timedOut":null,"duration":449,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/remove-pushtoken\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    token: \"user\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Remove push token Response:\", response.body);\n    console.log(\"Remove push token Response:\", response.body);\n  } else {\n    cy.log(\"Remove push token failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"c1771389-3df9-44e6-8962-9184842080f7","parentUUID":"2c16d6b8-ac97-4fb6-bc9a-55875628a8db","isHook":false,"skipped":false}],"suites":[],"passes":["c1771389-3df9-44e6-8962-9184842080f7"],"failures":[],"pending":[],"skipped":[],"duration":449,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"8c94b5b7-4d2b-44fe-a930-835ad85529ed","title":"","fullFile":"cypress\\e2e\\1. UserService\\06. FilterUser\\1.06.1 FilterUser.cy.js","file":"cypress\\e2e\\1. UserService\\06. FilterUser\\1.06.1 FilterUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"ffb5cf16-dc1f-4621-b3b1-0c5ed6b4094c","title":"User filtering successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able user filter or not","fullTitle":"User filtering successfully with status code 200 Checking if should be able user filter or not","timedOut":null,"duration":421,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/filter\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    program: \"\",\n    session: \"\",\n    query: \"anonno\",\n    global: true\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"User filter Response:\", response.body);\n    console.log(\"User filter Response:\", response.body);\n  } else {\n    cy.log(\"User filtering failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"0b6764d1-0bcc-44de-8f05-bf5ea3dfa29f","parentUUID":"ffb5cf16-dc1f-4621-b3b1-0c5ed6b4094c","isHook":false,"skipped":false}],"suites":[],"passes":["0b6764d1-0bcc-44de-8f05-bf5ea3dfa29f"],"failures":[],"pending":[],"skipped":[],"duration":421,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"15ec2b25-2d6d-4508-bb56-c5a089333d1e","title":"","fullFile":"cypress\\e2e\\1. UserService\\07. UpdateUserStatus\\1.07.1 updateUserStatus.cy.js","file":"cypress\\e2e\\1. UserService\\07. UpdateUserStatus\\1.07.1 updateUserStatus.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"83837184-ffa5-4b17-b684-a3cc26861e87","title":"Update User Status successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able update user status or not","fullTitle":"Update User Status successfully with status code 200 Checking if should be able update user status or not","timedOut":null,"duration":453,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/updateuser\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    profileStatus: {\n      currentStatus: \"Busy Nai\",\n      recurring: {\n        isDailyRecurring: true,\n        fromTime: \"09:01 AM\",\n        toTime: \"05:00 PM\"\n      }\n    }\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"User status Response:\", response.body);\n    console.log(\"User status Response:\", response.body);\n  } else {\n    cy.log(\"Update user status failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"06b00062-c234-4f99-8fc1-7ec458797467","parentUUID":"83837184-ffa5-4b17-b684-a3cc26861e87","isHook":false,"skipped":false}],"suites":[],"passes":["06b00062-c234-4f99-8fc1-7ec458797467"],"failures":[],"pending":[],"skipped":[],"duration":453,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"5feb677d-a8dc-4c6b-8b86-045246d3e14b","title":"","fullFile":"cypress\\e2e\\2. OrganizationService\\01. UserOrganization\\2.01.1 getUserOrganization.cy.js","file":"cypress\\e2e\\2. OrganizationService\\01. UserOrganization\\2.01.1 getUserOrganization.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"f2345b91-dca0-4fbd-8165-73bb5bbad505","title":"Get user organization successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get user organization or not","fullTitle":"Get user organization successfully with status code 200 Checking if should be able get user organization or not","timedOut":null,"duration":455,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/organization/user-organizations\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get user organization  Response:\", response.body);\n    console.log(\"Get user organization  Response:\", response.body);\n  } else {\n    cy.log(\"Get user organization failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"582a3cdf-b961-4c08-bc72-c892797f9c3f","parentUUID":"f2345b91-dca0-4fbd-8165-73bb5bbad505","isHook":false,"skipped":false}],"suites":[],"passes":["582a3cdf-b961-4c08-bc72-c892797f9c3f"],"failures":[],"pending":[],"skipped":[],"duration":455,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f62925f7-002f-4535-aed2-42ad327cf356","title":"","fullFile":"cypress\\e2e\\2. OrganizationService\\02. CompanyDetail\\2.02.1 getCompanyDetail.cy.js","file":"cypress\\e2e\\2. OrganizationService\\02. CompanyDetail\\2.02.1 getCompanyDetail.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"5d2f3cae-963f-4470-be13-955f083072b5","title":"Get Company Details successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get Company Details or not","fullTitle":"Get Company Details successfully with status code 200 Checking if should be able get Company Details or not","timedOut":null,"duration":383,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/organization/details/${slug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get Company Details  Response:\", response.body);\n    console.log(\"Get Company Details  Response:\", response.body);\n  } else {\n    cy.log(\"Get Company Details failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"decf746b-31d7-46c2-a067-bb333f0207e5","parentUUID":"5d2f3cae-963f-4470-be13-955f083072b5","isHook":false,"skipped":false}],"suites":[],"passes":["decf746b-31d7-46c2-a067-bb333f0207e5"],"failures":[],"pending":[],"skipped":[],"duration":383,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"7c7ba902-da06-4af3-94c7-0cf941418e13","title":"","fullFile":"cypress\\e2e\\2. OrganizationService\\03. GenerateText\\2.03.1 generateTextByAI.cy.js","file":"cypress\\e2e\\2. OrganizationService\\03. GenerateText\\2.03.1 generateTextByAI.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"a1fcfebb-1dce-40fa-8333-942eafff8f9d","title":"Generate Text successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able generate text or not","fullTitle":"Generate Text successfully with status code 200 Checking if should be able generate text or not","timedOut":null,"duration":395,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/organization/integration/generate-text\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId,\n    Enrollment: enrollmentId\n  },\n  body: {\n    prompt: \"How to make money?\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    // expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Generate text  Response:\", response.body);\n    console.log(\"Generate text  Response:\", response.body);\n  } else {\n    cy.log(\"Generate text failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"e6516242-4a3a-4af0-880f-18e1df11e063","parentUUID":"a1fcfebb-1dce-40fa-8333-942eafff8f9d","isHook":false,"skipped":false}],"suites":[],"passes":["e6516242-4a3a-4af0-880f-18e1df11e063"],"failures":[],"pending":[],"skipped":[],"duration":395,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"2860e071-321b-4457-b70c-eb5b1d3ea08b","title":"","fullFile":"cypress\\e2e\\3. ContentService\\01. ContentFlow\\3.01.1 getCourseContent.cy.js","file":"cypress\\e2e\\3. ContentService\\01. ContentFlow\\3.01.1 getCourseContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"ff443919-5505-4991-a868-02809156a9fc","title":"Get course content by category successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get course data or not","fullTitle":"Get course content by category successfully with status code 200 Checking if should be able get course data or not","timedOut":null,"duration":390,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/content/getbycourse/${category}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course data Response:\", response.body);\n    console.log(\"Get course data Response:\", response.body);\n  } else {\n    cy.log(\"Get course data failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"a6098241-bbc1-4033-a9a1-00193460d31b","parentUUID":"ff443919-5505-4991-a868-02809156a9fc","isHook":false,"skipped":false}],"suites":[],"passes":["a6098241-bbc1-4033-a9a1-00193460d31b"],"failures":[],"pending":[],"skipped":[],"duration":390,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"25e833f4-3212-4943-9c95-d23a85b89be2","title":"","fullFile":"cypress\\e2e\\3. ContentService\\01. ContentFlow\\3.01.2 getContentById.cy.js","file":"cypress\\e2e\\3. ContentService\\01. ContentFlow\\3.01.2 getContentById.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"8577e5b9-e05b-45ba-94f5-7ecaeeea57de","title":"Get content by content Id successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get content by content Id or not","fullTitle":"Get content by content Id successfully with status code 200 Checking if should be able get content by content Id or not","timedOut":null,"duration":543,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/content/getcontent/${courseId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course by course Id Response:\", response.body);\n    console.log(\"Get course data by course id Response:\", response.body);\n  } else {\n    cy.log(\"Get content by content Id failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"07b10526-a4c9-4857-8965-6c5ccf0109fc","parentUUID":"8577e5b9-e05b-45ba-94f5-7ecaeeea57de","isHook":false,"skipped":false}],"suites":[],"passes":["07b10526-a4c9-4857-8965-6c5ccf0109fc"],"failures":[],"pending":[],"skipped":[],"duration":543,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"fc102e62-cc4b-4799-9b36-fd0b7211f742","title":"","fullFile":"cypress\\e2e\\3. ContentService\\01. ContentFlow\\3.01.3 getLabContent.cy.js","file":"cypress\\e2e\\3. ContentService\\01. ContentFlow\\3.01.3 getLabContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"5cbef7d9-255f-4efd-bc0b-06c73fbbab71","title":"Get Lab Content successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get Lab Content or not","fullTitle":"Get Lab Content successfully with status code 200 Checking if should be able get Lab Content or not","timedOut":null,"duration":395,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/content/labcontent\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get lab content Response:\", response.body);\n    console.log(\"Get lab content Response:\", response.body);\n  } else {\n    cy.log(\"Get lab content failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"d8d384e6-5005-4171-8920-d2a4f2d62e2f","parentUUID":"5cbef7d9-255f-4efd-bc0b-06c73fbbab71","isHook":false,"skipped":false}],"suites":[],"passes":["d8d384e6-5005-4171-8920-d2a4f2d62e2f"],"failures":[],"pending":[],"skipped":[],"duration":395,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"80196447-92c3-4c39-b24b-8cb1fea12e04","title":"","fullFile":"cypress\\e2e\\3. ContentService\\02. CommunityFlow\\3.02.1 GetCommunityPost.cy.js","file":"cypress\\e2e\\3. ContentService\\02. CommunityFlow\\3.02.1 GetCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"3b3d245b-0cd1-427e-bace-ef6008c57df6","title":"Get all community post successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get Lab Content or not","fullTitle":"Get all community post successfully with status code 200 Checking if should be able get Lab Content or not","timedOut":null,"duration":378,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/community/post/getall\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    // \"page\": \"1\",\n    // \"limit\": \"10\",\n    // \"query\": \"\",\n    // \"tags\": [],\n    // \"user\": \"\",\n    // \"filterBy\": \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get lab content Response:\", response.body);\n    console.log(\"Get lab content Response:\", response.body);\n  } else {\n    cy.log(\"Get lab content failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"dae7cc03-9cb5-4435-845c-fe09616ad5ae","parentUUID":"3b3d245b-0cd1-427e-bace-ef6008c57df6","isHook":false,"skipped":false}],"suites":[],"passes":["dae7cc03-9cb5-4435-845c-fe09616ad5ae"],"failures":[],"pending":[],"skipped":[],"duration":378,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"8f606578-2dc4-42cf-92a8-d27bde47d155","title":"","fullFile":"cypress\\e2e\\5. CommonService\\01. MyNavigation\\5.01.1 getMyNavigation.cy.js","file":"cypress\\e2e\\5. CommonService\\01. MyNavigation\\5.01.1 getMyNavigation.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"5b503853-26c2-4c56-909d-dcdef61c21e3","title":"Get my navigation successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get my navigation or not","fullTitle":"Get my navigation successfully with status code 200 Checking if should be able get my navigation or not","timedOut":null,"duration":353,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/navigation/mynavigations\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my navigation Response:\", response.body);\n    console.log(\"get may navigation post Response:\", response.body);\n  } else {\n    cy.log(\"Get my navigation failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b7dfad9e-27fb-4bd5-93c3-97552ebb5242","parentUUID":"5b503853-26c2-4c56-909d-dcdef61c21e3","isHook":false,"skipped":false}],"suites":[],"passes":["b7dfad9e-27fb-4bd5-93c3-97552ebb5242"],"failures":[],"pending":[],"skipped":[],"duration":353,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"e9443fa0-6e42-480b-83c2-7ae3479d038f","title":"","fullFile":"cypress\\e2e\\6. ChatService\\01. MyChats\\6.01.1 myChats.cy.js","file":"cypress\\e2e\\6. ChatService\\01. MyChats\\6.01.1 myChats.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"19b7e0eb-1fad-4675-b10b-8ac3d345558b","title":"My all chats with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get my all chats or not","fullTitle":"My all chats with status code 200 Checking if should be able get my all chats or not","timedOut":null,"duration":30407,"state":"failed","speed":null,"pass":false,"fail":true,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/chat/mychats\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(3000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"get may chats Response:\", response.body);\n  } else {\n    cy.log(\"Get my chats failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{"message":"CypressError: `cy.request()` timed out waiting `30000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://staging-api.bootcampshub.ai/api/chat/mychats\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request","estack":"CypressError: `cy.request()` timed out waiting `30000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://staging-api.bootcampshub.ai/api/chat/mychats\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at <unknown> (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:132736:70)\n    at tryCatcher (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:1807:23)\n    at <unknown> (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:4186:41)\n    at tryCatcher (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:1697:18)\n    at _drainQueueStep (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://bootcamphub_app/./cypress/e2e/6. ChatService/01. MyChats/6.01.1 myChats.cy.js:15:7)","diff":null},"uuid":"cefdcae1-903c-49ba-884e-0a17c446b1a5","parentUUID":"19b7e0eb-1fad-4675-b10b-8ac3d345558b","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":["cefdcae1-903c-49ba-884e-0a17c446b1a5"],"pending":[],"skipped":[],"duration":30407,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f47bf748-bab1-44a2-83b4-de7ec38febd2","title":"","fullFile":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.1 userLogin.cy.js","file":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.1 userLogin.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"7a3c5bcb-9735-4a79-95ac-64cd3902c749","title":"Login to the portal with valid credential and get stats code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to login","fullTitle":"Login to the portal with valid credential and get stats code 200 should be able to login","timedOut":null,"duration":1546,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/login\",\n  body: {\n    email: userEmail,\n    password: userPassword\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    const {\n      token,\n      user\n    } = response.body;\n    const studentToken = token;\n    const studentLoginID = user._id;\n    // Store token and login ID to fixtures\n    cy.writeFile(\"cypress/fixtures/studentToken.json\", {\n      studentLoginToken: studentToken\n    });\n    cy.writeFile(\"cypress/fixtures/studentLoginID.json\", {\n      userId: studentLoginID\n    });\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"token\");\n    expect(response.body.success).to.eq(true);\n    expect(response.duration).to.be.lessThan(2000);\n    cy.log(\"User Token:\", studentToken);\n    cy.log(\"User ID:\", studentLoginID);\n    console.log(\"User Token:\", studentToken);\n    console.log(\"User ID:\", studentLoginID);\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Login failed with status:\", response.status);\n    cy.log(`Login failed  ${response.body.error}`);\n    cy.log(`Login failed with status code ${response.status}`);\n  }\n});","err":{},"uuid":"ab781ceb-d9e7-4c23-98ef-7b29cc07c2b1","parentUUID":"7a3c5bcb-9735-4a79-95ac-64cd3902c749","isHook":false,"skipped":false}],"suites":[],"passes":["ab781ceb-d9e7-4c23-98ef-7b29cc07c2b1"],"failures":[],"pending":[],"skipped":[],"duration":1546,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000}],"meta":{"mocha":{"version":"7.0.1"},"mochawesome":{"options":{"quiet":true,"reportFilename":"mochawesome","saveHtml":false,"saveJson":true,"consoleReporter":"spec","useInlineDiffs":false,"code":true},"version":"7.1.3"},"marge":{"options":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true,"overwrite":false,"html":false,"json":true,"reportDir":"cypress\\reports\\html\\.jsons"},"version":"6.2.0"}}}
baseFolder: cypress\e2e
attach media for test "Verify user successfully with status code 200 should be able to verify user"
no context
attach media for test "Get OTP on my email successfully with status code 200 Should be able to send OTP to email"
no context
attach media for test "Verify OTP with status code 200 should be able to verify"
no context
attach media for test "Forgot password functionality if I forgot my password successfully with status code 200 Checking if a user can use forgot password functionality in the browser or not"
no context
attach media for test "Reset my password successfully with status code 200 Checking if the user can reset their password or not"
no context
attach media for test "Change my password successfully with status code 200 Checking if the user can reset their password or not"
no context
attach media for test "Update Profile Picture API Should successfully update the profile picture"
no context
attach media for test "Update user successfully with status code 200 Checking if the user can reset their password or not"
no context
attach media for test "sync push token successfully with status code 200 Checking if the sync up push token or not"
no context
attach media for test "Remove push token successfully with status code 200 Checking if the remove push token or not"
no context
attach media for test "User filtering successfully with status code 200 Checking if should be able user filter or not"
no context
attach media for test "Update User Status successfully with status code 200 Checking if should be able update user status or not"
no context
attach media for test "Get user organization successfully with status code 200 Checking if should be able get user organization or not"
no context
attach media for test "Get Company Details successfully with status code 200 Checking if should be able get Company Details or not"
no context
attach media for test "Generate Text successfully with status code 200 Checking if should be able generate text or not"
no context
attach media for test "Get course content by category successfully with status code 200 Checking if should be able get course data or not"
no context
attach media for test "Get content by content Id successfully with status code 200 Checking if should be able get content by content Id or not"
no context
attach media for test "Get Lab Content successfully with status code 200 Checking if should be able get Lab Content or not"
no context
attach media for test "Get all community post successfully with status code 200 Checking if should be able get Lab Content or not"
no context
attach media for test "Get my navigation successfully with status code 200 Checking if should be able get my navigation or not"
no context
attach media for test "My all chats with status code 200 Checking if should be able get my all chats or not"
no context
attach media for test "Login to the portal with valid credential and get stats code 200 should be able to login"
no context
report after enhance: {"stats":{"suites":22,"tests":22,"passes":19,"pending":2,"failures":1,"testsRegistered":22,"passPercent":86.36363636363636,"pendingPercent":9.090909090909092,"other":0,"hasOther":false,"skipped":0,"hasSkipped":false,"start":"2024-11-28T10:27:14.717Z","end":"2024-11-28T10:28:54.418Z","duration":99701},"results":[{"uuid":"7e1f37da-3a32-4ade-89fd-84d62896d051","title":"","fullFile":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.2 verifyUser.cy.js","file":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.2 verifyUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"8c8c355b-537e-4170-94d8-c73cf2570db4","title":"Verify user successfully with status code 200","fullFile":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.2 verifyUser.cy.js","file":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.2 verifyUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to verify user","fullTitle":"Verify user successfully with status code 200 should be able to verify user","timedOut":null,"duration":1200,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"// const otp = \"863182\";\ncy.request({\n  method: \"POST\",\n  url: \"/user/verify\",\n  headers: {\n    Authorization: `Bearer ${studentToken}`\n  },\n  body: {\n    // otp: otp,\n    // channel: \"email\",\n    // userId: studentToken, // Use student ID obtained from fixture\n  }\n}).then(response => {\n  if (response.status === 200) {\n    cy.log(\"Verification successful\"); // Log successful verification\n    console.log(\"Verification successful\");\n    // Assertions\n    expect(response.status).to.eq(200); // Check if the status code is 200\n    expect(response.body).to.have.property(\"success\", true); // Check if the success property is true\n    expect(response.duration).to.be.lessThan(3000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"958b4888-9883-4a11-b771-3654527ce57b","parentUUID":"8c8c355b-537e-4170-94d8-c73cf2570db4","isHook":false,"skipped":false}],"suites":[],"passes":["958b4888-9883-4a11-b771-3654527ce57b"],"failures":[],"pending":[],"skipped":[],"duration":1200,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"fec5385e-4150-47b6-b934-d1a2bb0da3aa","title":"","fullFile":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.3 sendOtp.cy.js","file":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.3 sendOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"081a76bf-6959-4a2d-bcfb-01d0b4e6ea90","title":"Get OTP on my email successfully with status code 200","fullFile":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.3 sendOtp.cy.js","file":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.3 sendOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Should be able to send OTP to email","fullTitle":"Get OTP on my email successfully with status code 200 Should be able to send OTP to email","timedOut":null,"duration":650,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/sendotp\",\n  body: {\n    userId: userId,\n    channel: \"email\",\n    captchaToken: \"\"\n  }\n}).then(response => {\n  if (response.status === 200) {\n    cy.log(\"Send OTP successful\");\n    console.log(\"Send OTP successful\");\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(3000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"606251bc-ad34-42b1-979f-8729be396af7","parentUUID":"081a76bf-6959-4a2d-bcfb-01d0b4e6ea90","isHook":false,"skipped":false}],"suites":[],"passes":["606251bc-ad34-42b1-979f-8729be396af7"],"failures":[],"pending":[],"skipped":[],"duration":650,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"3800a964-907a-42d9-9a39-c02703d659d5","title":"","fullFile":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.4 verifyOtp.cy.js","file":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.4 verifyOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"a8ab08fc-c428-4975-a1c3-cb68d3312556","title":"Verify OTP with status code 200","fullFile":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.4 verifyOtp.cy.js","file":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.4 verifyOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to verify","fullTitle":"Verify OTP with status code 200 should be able to verify","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"const otp = \"731258\";\ncy.request({\n  method: \"POST\",\n  url: \"/user/verifyotp\",\n  body: {\n    otp: otp,\n    channel: \"email\",\n    userId: studentID // Use student ID obtained from fixture\n  }\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    cy.log(\"OTP verification successful\");\n    console.log(\"OTP verification successful\");\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"28569910-8d3c-4821-b591-e9baca68854b","parentUUID":"a8ab08fc-c428-4975-a1c3-cb68d3312556","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["28569910-8d3c-4821-b591-e9baca68854b"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"4722f755-3571-4ec3-85eb-f583e4e8c24e","title":"","fullFile":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.5 forgotPassword.cy.js","file":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.5 forgotPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"757e922a-809c-42e1-b930-7c1f2935e01c","title":"Forgot password functionality if I forgot my password successfully with status code 200","fullFile":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.5 forgotPassword.cy.js","file":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.5 forgotPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if a user can use forgot password functionality in the browser or not","fullTitle":"Forgot password functionality if I forgot my password successfully with status code 200 Checking if a user can use forgot password functionality in the browser or not","timedOut":null,"duration":669,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/password/forgot\",\n  body: {\n    phone: studentNumber,\n    email: studentEmail,\n    channel: \"email\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"isOtpSend\", true);\n    cy.log(\"Forgot Password Response:\", response.body);\n    console.log(\"Forgot Password Response:\", response.body);\n  } else {\n    cy.log(\"Forgot password failed due to: \", response.body.error);\n  }\n});","err":{},"uuid":"0099cc28-4475-4458-b225-11e3cce3dba2","parentUUID":"757e922a-809c-42e1-b930-7c1f2935e01c","isHook":false,"skipped":false}],"suites":[],"passes":["0099cc28-4475-4458-b225-11e3cce3dba2"],"failures":[],"pending":[],"skipped":[],"duration":669,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"28fb6563-d769-46fb-8120-7a11785b4158","title":"","fullFile":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.6 resetPassword.cy.js","file":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.6 resetPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"be5d238c-3438-4bad-9d49-ce24f815cde4","title":"Reset my password successfully with status code 200","fullFile":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.6 resetPassword.cy.js","file":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.6 resetPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Reset my password successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/password/reset\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    email: studentEmail,\n    phone: studentNumber,\n    channel: \"email\",\n    otp: otp,\n    password: password\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"44367730-e734-4a70-82b6-8db5c34e439a","parentUUID":"be5d238c-3438-4bad-9d49-ce24f815cde4","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["44367730-e734-4a70-82b6-8db5c34e439a"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"5c6e032a-5663-4485-8817-e9c148d773d2","title":"","fullFile":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.7 changePassword.cy.js","file":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.7 changePassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"1d04a815-1290-42d2-bca3-49b3b17aae6e","title":"Change my password successfully with status code 200","fullFile":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.7 changePassword.cy.js","file":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.7 changePassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Change my password successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":445,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/changepassword\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    currentPassword: \"Anonno#1\",\n    newPassword: \"Anonno#1\",\n    confirmPassword: \"Anonno#1\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"3a6efd8e-8c3a-4e7d-a9bf-05211635e593","parentUUID":"1d04a815-1290-42d2-bca3-49b3b17aae6e","isHook":false,"skipped":false}],"suites":[],"passes":["3a6efd8e-8c3a-4e7d-a9bf-05211635e593"],"failures":[],"pending":[],"skipped":[],"duration":445,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"a33e8201-7da6-49cf-b4d8-86081d914e21","title":"","fullFile":"cypress\\e2e\\1. UserService\\02. UpdateImage\\1.02.1 updateImage.cy.js","file":"cypress\\e2e\\1. UserService\\02. UpdateImage\\1.02.1 updateImage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"9efe33a2-4b83-42e5-b7aa-de866b2ba3d2","title":"Update Profile Picture API","fullFile":"cypress\\e2e\\1. UserService\\02. UpdateImage\\1.02.1 updateImage.cy.js","file":"cypress\\e2e\\1. UserService\\02. UpdateImage\\1.02.1 updateImage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Should successfully update the profile picture","fullTitle":"Update Profile Picture API Should successfully update the profile picture","timedOut":null,"duration":950,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"const imagePath = \"/images/image1.png\";\ncy.fixture(imagePath, \"binary\").then(Cypress.Blob.binaryStringToBlob).then(blob => {\n  const formData = new FormData();\n  formData.append(\"image\", blob, \"image1.png\");\n  // Send PATCH request with FormData\n  return cy.request({\n    method: \"PATCH\",\n    url: \"/user/updateimage\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    },\n    body: formData,\n    failOnStatusCode: false\n  });\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    cy.log(\"Profile picture updated successfully\");\n    //   cy.log(JSON.stringify(response.body, null, 2));\n  } else {\n    cy.log(\"Profile picture update failed with status code: \", response.status);\n    cy.log(response.body.error || \"Unknown error\");\n  }\n});","err":{},"uuid":"093caa9b-95f8-4085-aa6f-ca338443b5df","parentUUID":"9efe33a2-4b83-42e5-b7aa-de866b2ba3d2","isHook":false,"skipped":false}],"suites":[],"passes":["093caa9b-95f8-4085-aa6f-ca338443b5df"],"failures":[],"pending":[],"skipped":[],"duration":950,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"38a48f92-534c-418e-9160-d57dd30bb442","title":"","fullFile":"cypress\\e2e\\1. UserService\\03. UpdatUser\\1.03.1 updateUser.cy.js","file":"cypress\\e2e\\1. UserService\\03. UpdatUser\\1.03.1 updateUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"cd0f69f7-646f-40f3-8ab4-7734c776fb4e","title":"Update user successfully with status code 200","fullFile":"cypress\\e2e\\1. UserService\\03. UpdatUser\\1.03.1 updateUser.cy.js","file":"cypress\\e2e\\1. UserService\\03. UpdatUser\\1.03.1 updateUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Update user successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":440,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/updateuser\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    firstName: \"Anonno\",\n    lastName: \"Das\",\n    about: \"Nothing\",\n    personalData: {\n      address: {\n        street: \"\",\n        city: \"Narail\",\n        postalCode: \"7521\",\n        state: \"Khulna\",\n        country: \"Bangladesh\"\n      },\n      socialMedia: {\n        facebook: \"\",\n        github: \"\",\n        instagram: \"\",\n        linkedin: \"\",\n        twitter: \"\"\n      },\n      resume: \"\",\n      bio: \"Don't have bio\"\n    }\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"563d5051-d29e-48c2-9c4a-3644017f9660","parentUUID":"cd0f69f7-646f-40f3-8ab4-7734c776fb4e","isHook":false,"skipped":false}],"suites":[],"passes":["563d5051-d29e-48c2-9c4a-3644017f9660"],"failures":[],"pending":[],"skipped":[],"duration":440,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"17e076ec-1ebd-4da7-adc5-cdc114b67ed7","title":"","fullFile":"cypress\\e2e\\1. UserService\\04. SyncPushToken\\1.04.1 syncPushToken.cy.js","file":"cypress\\e2e\\1. UserService\\04. SyncPushToken\\1.04.1 syncPushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"f3c84f0e-bd20-4453-9ceb-0c78d4f3939f","title":"sync push token successfully with status code 200","fullFile":"cypress\\e2e\\1. UserService\\04. SyncPushToken\\1.04.1 syncPushToken.cy.js","file":"cypress\\e2e\\1. UserService\\04. SyncPushToken\\1.04.1 syncPushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the sync up push token or not","fullTitle":"sync push token successfully with status code 200 Checking if the sync up push token or not","timedOut":null,"duration":428,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/sync-pushtoken\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    pushToken: \"user\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b7a2561f-4525-497f-9f54-84888038eb03","parentUUID":"f3c84f0e-bd20-4453-9ceb-0c78d4f3939f","isHook":false,"skipped":false}],"suites":[],"passes":["b7a2561f-4525-497f-9f54-84888038eb03"],"failures":[],"pending":[],"skipped":[],"duration":428,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"9c55bece-8d27-474b-89a9-426d30cda10e","title":"","fullFile":"cypress\\e2e\\1. UserService\\05. RemovePushToken\\1.05.1 removePushToken.cy.js","file":"cypress\\e2e\\1. UserService\\05. RemovePushToken\\1.05.1 removePushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2c16d6b8-ac97-4fb6-bc9a-55875628a8db","title":"Remove push token successfully with status code 200","fullFile":"cypress\\e2e\\1. UserService\\05. RemovePushToken\\1.05.1 removePushToken.cy.js","file":"cypress\\e2e\\1. UserService\\05. RemovePushToken\\1.05.1 removePushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the remove push token or not","fullTitle":"Remove push token successfully with status code 200 Checking if the remove push token or not","timedOut":null,"duration":449,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/remove-pushtoken\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    token: \"user\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Remove push token Response:\", response.body);\n    console.log(\"Remove push token Response:\", response.body);\n  } else {\n    cy.log(\"Remove push token failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"c1771389-3df9-44e6-8962-9184842080f7","parentUUID":"2c16d6b8-ac97-4fb6-bc9a-55875628a8db","isHook":false,"skipped":false}],"suites":[],"passes":["c1771389-3df9-44e6-8962-9184842080f7"],"failures":[],"pending":[],"skipped":[],"duration":449,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"8c94b5b7-4d2b-44fe-a930-835ad85529ed","title":"","fullFile":"cypress\\e2e\\1. UserService\\06. FilterUser\\1.06.1 FilterUser.cy.js","file":"cypress\\e2e\\1. UserService\\06. FilterUser\\1.06.1 FilterUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"ffb5cf16-dc1f-4621-b3b1-0c5ed6b4094c","title":"User filtering successfully with status code 200","fullFile":"cypress\\e2e\\1. UserService\\06. FilterUser\\1.06.1 FilterUser.cy.js","file":"cypress\\e2e\\1. UserService\\06. FilterUser\\1.06.1 FilterUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able user filter or not","fullTitle":"User filtering successfully with status code 200 Checking if should be able user filter or not","timedOut":null,"duration":421,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/filter\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    program: \"\",\n    session: \"\",\n    query: \"anonno\",\n    global: true\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"User filter Response:\", response.body);\n    console.log(\"User filter Response:\", response.body);\n  } else {\n    cy.log(\"User filtering failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"0b6764d1-0bcc-44de-8f05-bf5ea3dfa29f","parentUUID":"ffb5cf16-dc1f-4621-b3b1-0c5ed6b4094c","isHook":false,"skipped":false}],"suites":[],"passes":["0b6764d1-0bcc-44de-8f05-bf5ea3dfa29f"],"failures":[],"pending":[],"skipped":[],"duration":421,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"15ec2b25-2d6d-4508-bb56-c5a089333d1e","title":"","fullFile":"cypress\\e2e\\1. UserService\\07. UpdateUserStatus\\1.07.1 updateUserStatus.cy.js","file":"cypress\\e2e\\1. UserService\\07. UpdateUserStatus\\1.07.1 updateUserStatus.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"83837184-ffa5-4b17-b684-a3cc26861e87","title":"Update User Status successfully with status code 200","fullFile":"cypress\\e2e\\1. UserService\\07. UpdateUserStatus\\1.07.1 updateUserStatus.cy.js","file":"cypress\\e2e\\1. UserService\\07. UpdateUserStatus\\1.07.1 updateUserStatus.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able update user status or not","fullTitle":"Update User Status successfully with status code 200 Checking if should be able update user status or not","timedOut":null,"duration":453,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/updateuser\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    profileStatus: {\n      currentStatus: \"Busy Nai\",\n      recurring: {\n        isDailyRecurring: true,\n        fromTime: \"09:01 AM\",\n        toTime: \"05:00 PM\"\n      }\n    }\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"User status Response:\", response.body);\n    console.log(\"User status Response:\", response.body);\n  } else {\n    cy.log(\"Update user status failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"06b00062-c234-4f99-8fc1-7ec458797467","parentUUID":"83837184-ffa5-4b17-b684-a3cc26861e87","isHook":false,"skipped":false}],"suites":[],"passes":["06b00062-c234-4f99-8fc1-7ec458797467"],"failures":[],"pending":[],"skipped":[],"duration":453,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"5feb677d-a8dc-4c6b-8b86-045246d3e14b","title":"","fullFile":"cypress\\e2e\\2. OrganizationService\\01. UserOrganization\\2.01.1 getUserOrganization.cy.js","file":"cypress\\e2e\\2. OrganizationService\\01. UserOrganization\\2.01.1 getUserOrganization.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"f2345b91-dca0-4fbd-8165-73bb5bbad505","title":"Get user organization successfully with status code 200","fullFile":"cypress\\e2e\\2. OrganizationService\\01. UserOrganization\\2.01.1 getUserOrganization.cy.js","file":"cypress\\e2e\\2. OrganizationService\\01. UserOrganization\\2.01.1 getUserOrganization.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get user organization or not","fullTitle":"Get user organization successfully with status code 200 Checking if should be able get user organization or not","timedOut":null,"duration":455,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/organization/user-organizations\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get user organization  Response:\", response.body);\n    console.log(\"Get user organization  Response:\", response.body);\n  } else {\n    cy.log(\"Get user organization failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"582a3cdf-b961-4c08-bc72-c892797f9c3f","parentUUID":"f2345b91-dca0-4fbd-8165-73bb5bbad505","isHook":false,"skipped":false}],"suites":[],"passes":["582a3cdf-b961-4c08-bc72-c892797f9c3f"],"failures":[],"pending":[],"skipped":[],"duration":455,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f62925f7-002f-4535-aed2-42ad327cf356","title":"","fullFile":"cypress\\e2e\\2. OrganizationService\\02. CompanyDetail\\2.02.1 getCompanyDetail.cy.js","file":"cypress\\e2e\\2. OrganizationService\\02. CompanyDetail\\2.02.1 getCompanyDetail.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"5d2f3cae-963f-4470-be13-955f083072b5","title":"Get Company Details successfully with status code 200","fullFile":"cypress\\e2e\\2. OrganizationService\\02. CompanyDetail\\2.02.1 getCompanyDetail.cy.js","file":"cypress\\e2e\\2. OrganizationService\\02. CompanyDetail\\2.02.1 getCompanyDetail.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get Company Details or not","fullTitle":"Get Company Details successfully with status code 200 Checking if should be able get Company Details or not","timedOut":null,"duration":383,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/organization/details/${slug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get Company Details  Response:\", response.body);\n    console.log(\"Get Company Details  Response:\", response.body);\n  } else {\n    cy.log(\"Get Company Details failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"decf746b-31d7-46c2-a067-bb333f0207e5","parentUUID":"5d2f3cae-963f-4470-be13-955f083072b5","isHook":false,"skipped":false}],"suites":[],"passes":["decf746b-31d7-46c2-a067-bb333f0207e5"],"failures":[],"pending":[],"skipped":[],"duration":383,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"7c7ba902-da06-4af3-94c7-0cf941418e13","title":"","fullFile":"cypress\\e2e\\2. OrganizationService\\03. GenerateText\\2.03.1 generateTextByAI.cy.js","file":"cypress\\e2e\\2. OrganizationService\\03. GenerateText\\2.03.1 generateTextByAI.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"a1fcfebb-1dce-40fa-8333-942eafff8f9d","title":"Generate Text successfully with status code 200","fullFile":"cypress\\e2e\\2. OrganizationService\\03. GenerateText\\2.03.1 generateTextByAI.cy.js","file":"cypress\\e2e\\2. OrganizationService\\03. GenerateText\\2.03.1 generateTextByAI.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able generate text or not","fullTitle":"Generate Text successfully with status code 200 Checking if should be able generate text or not","timedOut":null,"duration":395,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/organization/integration/generate-text\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId,\n    Enrollment: enrollmentId\n  },\n  body: {\n    prompt: \"How to make money?\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    // expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Generate text  Response:\", response.body);\n    console.log(\"Generate text  Response:\", response.body);\n  } else {\n    cy.log(\"Generate text failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"e6516242-4a3a-4af0-880f-18e1df11e063","parentUUID":"a1fcfebb-1dce-40fa-8333-942eafff8f9d","isHook":false,"skipped":false}],"suites":[],"passes":["e6516242-4a3a-4af0-880f-18e1df11e063"],"failures":[],"pending":[],"skipped":[],"duration":395,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"2860e071-321b-4457-b70c-eb5b1d3ea08b","title":"","fullFile":"cypress\\e2e\\3. ContentService\\01. ContentFlow\\3.01.1 getCourseContent.cy.js","file":"cypress\\e2e\\3. ContentService\\01. ContentFlow\\3.01.1 getCourseContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"ff443919-5505-4991-a868-02809156a9fc","title":"Get course content by category successfully with status code 200","fullFile":"cypress\\e2e\\3. ContentService\\01. ContentFlow\\3.01.1 getCourseContent.cy.js","file":"cypress\\e2e\\3. ContentService\\01. ContentFlow\\3.01.1 getCourseContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get course data or not","fullTitle":"Get course content by category successfully with status code 200 Checking if should be able get course data or not","timedOut":null,"duration":390,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/content/getbycourse/${category}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course data Response:\", response.body);\n    console.log(\"Get course data Response:\", response.body);\n  } else {\n    cy.log(\"Get course data failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"a6098241-bbc1-4033-a9a1-00193460d31b","parentUUID":"ff443919-5505-4991-a868-02809156a9fc","isHook":false,"skipped":false}],"suites":[],"passes":["a6098241-bbc1-4033-a9a1-00193460d31b"],"failures":[],"pending":[],"skipped":[],"duration":390,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"25e833f4-3212-4943-9c95-d23a85b89be2","title":"","fullFile":"cypress\\e2e\\3. ContentService\\01. ContentFlow\\3.01.2 getContentById.cy.js","file":"cypress\\e2e\\3. ContentService\\01. ContentFlow\\3.01.2 getContentById.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"8577e5b9-e05b-45ba-94f5-7ecaeeea57de","title":"Get content by content Id successfully with status code 200","fullFile":"cypress\\e2e\\3. ContentService\\01. ContentFlow\\3.01.2 getContentById.cy.js","file":"cypress\\e2e\\3. ContentService\\01. ContentFlow\\3.01.2 getContentById.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get content by content Id or not","fullTitle":"Get content by content Id successfully with status code 200 Checking if should be able get content by content Id or not","timedOut":null,"duration":543,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/content/getcontent/${courseId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course by course Id Response:\", response.body);\n    console.log(\"Get course data by course id Response:\", response.body);\n  } else {\n    cy.log(\"Get content by content Id failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"07b10526-a4c9-4857-8965-6c5ccf0109fc","parentUUID":"8577e5b9-e05b-45ba-94f5-7ecaeeea57de","isHook":false,"skipped":false}],"suites":[],"passes":["07b10526-a4c9-4857-8965-6c5ccf0109fc"],"failures":[],"pending":[],"skipped":[],"duration":543,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"fc102e62-cc4b-4799-9b36-fd0b7211f742","title":"","fullFile":"cypress\\e2e\\3. ContentService\\01. ContentFlow\\3.01.3 getLabContent.cy.js","file":"cypress\\e2e\\3. ContentService\\01. ContentFlow\\3.01.3 getLabContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"5cbef7d9-255f-4efd-bc0b-06c73fbbab71","title":"Get Lab Content successfully with status code 200","fullFile":"cypress\\e2e\\3. ContentService\\01. ContentFlow\\3.01.3 getLabContent.cy.js","file":"cypress\\e2e\\3. ContentService\\01. ContentFlow\\3.01.3 getLabContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get Lab Content or not","fullTitle":"Get Lab Content successfully with status code 200 Checking if should be able get Lab Content or not","timedOut":null,"duration":395,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/content/labcontent\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get lab content Response:\", response.body);\n    console.log(\"Get lab content Response:\", response.body);\n  } else {\n    cy.log(\"Get lab content failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"d8d384e6-5005-4171-8920-d2a4f2d62e2f","parentUUID":"5cbef7d9-255f-4efd-bc0b-06c73fbbab71","isHook":false,"skipped":false}],"suites":[],"passes":["d8d384e6-5005-4171-8920-d2a4f2d62e2f"],"failures":[],"pending":[],"skipped":[],"duration":395,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"80196447-92c3-4c39-b24b-8cb1fea12e04","title":"","fullFile":"cypress\\e2e\\3. ContentService\\02. CommunityFlow\\3.02.1 GetCommunityPost.cy.js","file":"cypress\\e2e\\3. ContentService\\02. CommunityFlow\\3.02.1 GetCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"3b3d245b-0cd1-427e-bace-ef6008c57df6","title":"Get all community post successfully with status code 200","fullFile":"cypress\\e2e\\3. ContentService\\02. CommunityFlow\\3.02.1 GetCommunityPost.cy.js","file":"cypress\\e2e\\3. ContentService\\02. CommunityFlow\\3.02.1 GetCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get Lab Content or not","fullTitle":"Get all community post successfully with status code 200 Checking if should be able get Lab Content or not","timedOut":null,"duration":378,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/community/post/getall\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    // \"page\": \"1\",\n    // \"limit\": \"10\",\n    // \"query\": \"\",\n    // \"tags\": [],\n    // \"user\": \"\",\n    // \"filterBy\": \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get lab content Response:\", response.body);\n    console.log(\"Get lab content Response:\", response.body);\n  } else {\n    cy.log(\"Get lab content failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"dae7cc03-9cb5-4435-845c-fe09616ad5ae","parentUUID":"3b3d245b-0cd1-427e-bace-ef6008c57df6","isHook":false,"skipped":false}],"suites":[],"passes":["dae7cc03-9cb5-4435-845c-fe09616ad5ae"],"failures":[],"pending":[],"skipped":[],"duration":378,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"8f606578-2dc4-42cf-92a8-d27bde47d155","title":"","fullFile":"cypress\\e2e\\5. CommonService\\01. MyNavigation\\5.01.1 getMyNavigation.cy.js","file":"cypress\\e2e\\5. CommonService\\01. MyNavigation\\5.01.1 getMyNavigation.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"5b503853-26c2-4c56-909d-dcdef61c21e3","title":"Get my navigation successfully with status code 200","fullFile":"cypress\\e2e\\5. CommonService\\01. MyNavigation\\5.01.1 getMyNavigation.cy.js","file":"cypress\\e2e\\5. CommonService\\01. MyNavigation\\5.01.1 getMyNavigation.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get my navigation or not","fullTitle":"Get my navigation successfully with status code 200 Checking if should be able get my navigation or not","timedOut":null,"duration":353,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/navigation/mynavigations\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my navigation Response:\", response.body);\n    console.log(\"get may navigation post Response:\", response.body);\n  } else {\n    cy.log(\"Get my navigation failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b7dfad9e-27fb-4bd5-93c3-97552ebb5242","parentUUID":"5b503853-26c2-4c56-909d-dcdef61c21e3","isHook":false,"skipped":false}],"suites":[],"passes":["b7dfad9e-27fb-4bd5-93c3-97552ebb5242"],"failures":[],"pending":[],"skipped":[],"duration":353,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"e9443fa0-6e42-480b-83c2-7ae3479d038f","title":"","fullFile":"cypress\\e2e\\6. ChatService\\01. MyChats\\6.01.1 myChats.cy.js","file":"cypress\\e2e\\6. ChatService\\01. MyChats\\6.01.1 myChats.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"19b7e0eb-1fad-4675-b10b-8ac3d345558b","title":"My all chats with status code 200","fullFile":"cypress\\e2e\\6. ChatService\\01. MyChats\\6.01.1 myChats.cy.js","file":"cypress\\e2e\\6. ChatService\\01. MyChats\\6.01.1 myChats.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get my all chats or not","fullTitle":"My all chats with status code 200 Checking if should be able get my all chats or not","timedOut":null,"duration":30407,"state":"failed","speed":null,"pass":false,"fail":true,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/chat/mychats\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(3000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"get may chats Response:\", response.body);\n  } else {\n    cy.log(\"Get my chats failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{"message":"CypressError: `cy.request()` timed out waiting `30000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://staging-api.bootcampshub.ai/api/chat/mychats\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request","estack":"CypressError: `cy.request()` timed out waiting `30000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://staging-api.bootcampshub.ai/api/chat/mychats\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at <unknown> (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:132736:70)\n    at tryCatcher (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:1807:23)\n    at <unknown> (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:4186:41)\n    at tryCatcher (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:1697:18)\n    at _drainQueueStep (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://bootcamphub_app/./cypress/e2e/6. ChatService/01. MyChats/6.01.1 myChats.cy.js:15:7)","diff":null},"uuid":"cefdcae1-903c-49ba-884e-0a17c446b1a5","parentUUID":"19b7e0eb-1fad-4675-b10b-8ac3d345558b","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":["cefdcae1-903c-49ba-884e-0a17c446b1a5"],"pending":[],"skipped":[],"duration":30407,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f47bf748-bab1-44a2-83b4-de7ec38febd2","title":"","fullFile":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.1 userLogin.cy.js","file":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.1 userLogin.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"7a3c5bcb-9735-4a79-95ac-64cd3902c749","title":"Login to the portal with valid credential and get stats code 200","fullFile":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.1 userLogin.cy.js","file":"cypress\\e2e\\1. UserService\\01. Auth\\1.01.1 userLogin.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to login","fullTitle":"Login to the portal with valid credential and get stats code 200 should be able to login","timedOut":null,"duration":1546,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/login\",\n  body: {\n    email: userEmail,\n    password: userPassword\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    const {\n      token,\n      user\n    } = response.body;\n    const studentToken = token;\n    const studentLoginID = user._id;\n    // Store token and login ID to fixtures\n    cy.writeFile(\"cypress/fixtures/studentToken.json\", {\n      studentLoginToken: studentToken\n    });\n    cy.writeFile(\"cypress/fixtures/studentLoginID.json\", {\n      userId: studentLoginID\n    });\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"token\");\n    expect(response.body.success).to.eq(true);\n    expect(response.duration).to.be.lessThan(2000);\n    cy.log(\"User Token:\", studentToken);\n    cy.log(\"User ID:\", studentLoginID);\n    console.log(\"User Token:\", studentToken);\n    console.log(\"User ID:\", studentLoginID);\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Login failed with status:\", response.status);\n    cy.log(`Login failed  ${response.body.error}`);\n    cy.log(`Login failed with status code ${response.status}`);\n  }\n});","err":{},"uuid":"ab781ceb-d9e7-4c23-98ef-7b29cc07c2b1","parentUUID":"7a3c5bcb-9735-4a79-95ac-64cd3902c749","isHook":false,"skipped":false}],"suites":[],"passes":["ab781ceb-d9e7-4c23-98ef-7b29cc07c2b1"],"failures":[],"pending":[],"skipped":[],"duration":1546,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000}],"meta":{"mocha":{"version":"7.0.1"},"mochawesome":{"options":{"quiet":true,"reportFilename":"mochawesome","saveHtml":false,"saveJson":true,"consoleReporter":"spec","useInlineDiffs":false,"code":true},"version":"7.1.3"},"marge":{"options":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true,"overwrite":false,"html":false,"json":true,"reportDir":"cypress\\reports\\html\\.jsons"},"version":"6.2.0"}}}
HTML result: ["C:\\Users\\TS4U\\Desktop\\Projects\\Api-Automation\\cypress\\reports\\html\\index.html",null]
done
