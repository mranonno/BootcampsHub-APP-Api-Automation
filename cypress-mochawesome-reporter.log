start cypress-mochawesome-reporter 3.8.2
cwd: /Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation
cypress.json: {"configFile":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress.config.js","testingType":"e2e","projectId":"8axud3","reporter":"cypress-mochawesome-reporter","reporterOptions":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true,"reportDir":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/reports/html"},"baseUrl":"https://staging-api.bootcampshub.ai/api","setupNodeEvents":"[Function setupNodeEvents]","projectRoot":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation","projectName":"BootcampsHub-App-API-Automation","repoRoot":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation","rawJson":{"projectId":"8axud3","reporter":"cypress-mochawesome-reporter","reporterOptions":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true},"e2e":{"baseUrl":"https://staging-api.bootcampshub.ai/api","setupNodeEvents":"[Function setupNodeEvents]"},"baseUrl":"https://staging-api.bootcampshub.ai/api","setupNodeEvents":"[Function setupNodeEvents]","envFile":{},"projectRoot":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation","projectName":"BootcampsHub-App-API-Automation","repoRoot":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation"},"morgan":false,"isTextTerminal":true,"socketId":"uvkgoyylbx","report":true,"animationDistanceThreshold":5,"arch":"x64","blockHosts":null,"chromeWebSecurity":true,"clientCertificates":[],"defaultCommandTimeout":4000,"downloadsFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/downloads","env":{},"execTimeout":60000,"experimentalCspAllowList":false,"experimentalFetchPolyfill":false,"experimentalInteractiveRunEvents":false,"experimentalRunAllSpecs":false,"experimentalMemoryManagement":false,"experimentalModifyObstructiveThirdPartyCode":false,"experimentalSkipDomainInjection":null,"experimentalJustInTimeCompile":false,"experimentalOriginDependencies":false,"experimentalSourceRewriting":false,"experimentalSingleTabRunMode":false,"experimentalStudio":false,"experimentalWebKitSupport":false,"fileServerFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation","fixturesFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/fixtures","excludeSpecPattern":"*.hot-update.js","includeShadowDom":false,"keystrokeDelay":0,"modifyObstructiveCode":true,"numTestsKeptInMemory":0,"platform":"darwin","pageLoadTimeout":60000,"port":51631,"redirectionLimit":20,"requestTimeout":5000,"resolvedNodePath":"/usr/local/bin/node","resolvedNodeVersion":"20.18.0","responseTimeout":30000,"retries":{"runMode":0,"openMode":0},"screenshotOnRunFailure":true,"screenshotsFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/screenshots","slowTestThreshold":10000,"scrollBehavior":"top","supportFile":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/support/e2e.js","supportFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/support","taskTimeout":60000,"testIsolation":true,"trashAssetsBeforeRuns":true,"userAgent":null,"video":false,"videoCompression":false,"videosFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/videos","viewportHeight":660,"viewportWidth":1000,"waitForAnimations":true,"watchForFileChanges":false,"specPattern":"cypress/e2e/**/*.cy.{js,jsx,ts,tsx}","additionalIgnorePattern":[],"autoOpen":false,"browsers":[{"name":"chrome","family":"chromium","channel":"stable","displayName":"Chrome","version":"131.0.6778.86","path":"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome","minSupportedVersion":64,"majorVersion":"131"},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"118.0.5993.159","path":"","majorVersion":118}],"clientRoute":"/__/","cypressBinaryRoot":"/Users/anonno/Library/Caches/Cypress/13.15.2/Cypress.app/Contents/Resources/app","devServerPublicPathRoute":"/__cypress/src","hosts":null,"isInteractive":true,"namespace":"__cypress","reporterRoute":"/__cypress/reporter","socketIoCookie":"__socket","socketIoRoute":"/__socket","version":"13.15.2","protocolEnabled":false,"hideCommandLog":false,"hideRunnerUi":false,"cypressEnv":"production","resolved":{"animationDistanceThreshold":{"value":5,"from":"default"},"arch":{"value":"x64","from":"default"},"baseUrl":{"value":"https://staging-api.bootcampshub.ai/api","from":"config"},"blockHosts":{"value":null,"from":"default"},"chromeWebSecurity":{"value":true,"from":"default"},"clientCertificates":{"value":[],"from":"default"},"defaultCommandTimeout":{"value":4000,"from":"default"},"downloadsFolder":{"value":"cypress/downloads","from":"default"},"env":{},"execTimeout":{"value":60000,"from":"default"},"experimentalCspAllowList":{"value":false,"from":"default"},"experimentalFetchPolyfill":{"value":false,"from":"default"},"experimentalInteractiveRunEvents":{"value":false,"from":"default"},"experimentalRunAllSpecs":{"value":false,"from":"default"},"experimentalMemoryManagement":{"value":false,"from":"default"},"experimentalModifyObstructiveThirdPartyCode":{"value":false,"from":"default"},"experimentalSkipDomainInjection":{"value":null,"from":"default"},"experimentalJustInTimeCompile":{"value":false,"from":"default"},"experimentalOriginDependencies":{"value":false,"from":"default"},"experimentalSourceRewriting":{"value":false,"from":"default"},"experimentalSingleTabRunMode":{"value":false,"from":"default"},"experimentalStudio":{"value":false,"from":"default"},"experimentalWebKitSupport":{"value":false,"from":"default"},"fileServerFolder":{"value":"","from":"default"},"fixturesFolder":{"value":"cypress/fixtures","from":"default"},"excludeSpecPattern":{"value":"*.hot-update.js","from":"default"},"includeShadowDom":{"value":false,"from":"default"},"keystrokeDelay":{"value":0,"from":"default"},"modifyObstructiveCode":{"value":true,"from":"default"},"numTestsKeptInMemory":{"value":0,"from":"config"},"platform":{"value":"darwin","from":"default"},"pageLoadTimeout":{"value":60000,"from":"default"},"port":{"value":null,"from":"default"},"projectId":{"value":"8axud3","from":"config"},"redirectionLimit":{"value":20,"from":"default"},"reporter":{"value":"cypress-mochawesome-reporter","from":"config"},"reporterOptions":{"value":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true},"from":"config"},"requestTimeout":{"value":5000,"from":"default"},"resolvedNodePath":{"value":null,"from":"default"},"resolvedNodeVersion":{"value":null,"from":"default"},"responseTimeout":{"value":30000,"from":"default"},"retries":{"value":{"runMode":0,"openMode":0},"from":"default"},"screenshotOnRunFailure":{"value":true,"from":"default"},"screenshotsFolder":{"value":"cypress/screenshots","from":"default"},"slowTestThreshold":{"value":10000,"from":"default"},"scrollBehavior":{"value":"top","from":"default"},"supportFile":{"value":"cypress/support/e2e.{js,jsx,ts,tsx}","from":"default"},"supportFolder":{"value":false,"from":"default"},"taskTimeout":{"value":60000,"from":"default"},"testIsolation":{"value":true,"from":"default"},"trashAssetsBeforeRuns":{"value":true,"from":"default"},"userAgent":{"value":null,"from":"default"},"video":{"value":false,"from":"default"},"videoCompression":{"value":false,"from":"default"},"videosFolder":{"value":"cypress/videos","from":"default"},"viewportHeight":{"value":660,"from":"default"},"viewportWidth":{"value":1000,"from":"default"},"waitForAnimations":{"value":true,"from":"default"},"watchForFileChanges":{"value":false,"from":"config"},"specPattern":{"value":"cypress/e2e/**/*.cy.{js,jsx,ts,tsx}","from":"default"},"browsers":{"value":[{"name":"chrome","family":"chromium","channel":"stable","displayName":"Chrome","version":"131.0.6778.86","path":"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome","minSupportedVersion":64,"majorVersion":"131"},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"118.0.5993.159","path":"","majorVersion":118,"isHeadless":true,"isHeaded":false}],"from":"runtime"},"hosts":{"value":null,"from":"default"},"isInteractive":{"value":true,"from":"default"},"configFile":{"value":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress.config.js","from":"plugin"},"testingType":{"value":"e2e","from":"plugin"}},"remote":{"origin":"https://staging-api.bootcampshub.ai","strategy":"http","fileServer":null,"domainName":"bootcampshub.ai","props":{"port":"443","protocol":"https:","subdomain":"staging-api","domain":"bootcampshub","tld":"ai"}},"browser":null,"specs":[],"proxyUrl":"http://localhost:51631","browserUrl":"https://staging-api.bootcampshub.ai/__/","reporterUrl":"https://staging-api.bootcampshub.ai/__cypress/reporter","proxyServer":"http://localhost:51631","state":{}}
simple config: {"jsonDir":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/reports/html/.jsons","reporterOptions":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true,"reportDir":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/reports/html"},"screenshotsDir":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/screenshots","videosFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/videos","outputDir":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/reports/html","removeJsonsFolderAfterMerge":true}
report before enhance: {"stats":{"suites":29,"tests":29,"passes":25,"pending":4,"failures":0,"testsRegistered":29,"passPercent":86.20689655172414,"pendingPercent":13.793103448275861,"other":0,"hasOther":false,"skipped":0,"hasSkipped":false,"start":"2024-11-26T11:13:35.073Z","end":"2024-11-26T11:15:22.225Z","duration":107152},"results":[{"uuid":"ab262291-8e81-4c4c-bbfd-a487cd6e97e2","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.1 userLogin.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.1 userLogin.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"256cc437-9604-42ec-b953-9486e274995e","title":"Login to the portal with valid credential and get stats code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to login","fullTitle":"Login to the portal with valid credential and get stats code 200 should be able to login","timedOut":null,"duration":723,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/login\",\n  body: {\n    email: userEmail,\n    password: userPassword\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    const {\n      token,\n      user\n    } = response.body;\n    const studentToken = token;\n    const studentLoginID = user._id;\n    // Store token and login ID to fixtures\n    cy.writeFile(\"cypress/fixtures/studentToken.json\", {\n      studentLoginToken: studentToken\n    });\n    cy.writeFile(\"cypress/fixtures/studentLoginID.json\", {\n      userId: studentLoginID\n    });\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"token\");\n    expect(response.body.success).to.eq(true);\n    expect(response.duration).to.be.lessThan(2000);\n    cy.log(\"User Token:\", studentToken);\n    cy.log(\"User ID:\", studentLoginID);\n    console.log(\"User Token:\", studentToken);\n    console.log(\"User ID:\", studentLoginID);\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Login failed with status:\", response.status);\n    cy.log(`Login failed  ${response.body.error}`);\n    cy.log(`Login failed with status code ${response.status}`);\n  }\n});","err":{},"uuid":"fcfc8f18-922d-4103-aadd-328b65370a0f","parentUUID":"256cc437-9604-42ec-b953-9486e274995e","isHook":false,"skipped":false}],"suites":[],"passes":["fcfc8f18-922d-4103-aadd-328b65370a0f"],"failures":[],"pending":[],"skipped":[],"duration":723,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"6721718d-cf96-4e5b-b959-614bff618db2","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.2 verifyUser.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.2 verifyUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"7df7eb53-2195-4eef-b84d-f4c24bbfb265","title":"Verify user successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to verify user","fullTitle":"Verify user successfully with status code 200 should be able to verify user","timedOut":null,"duration":1205,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"// const otp = \"863182\";\ncy.request({\n  method: \"POST\",\n  url: \"/user/verify\",\n  headers: {\n    Authorization: `Bearer ${studentToken}`\n  },\n  body: {\n    // otp: otp,\n    // channel: \"email\",\n    // userId: studentToken, // Use student ID obtained from fixture\n  }\n}).then(response => {\n  if (response.status === 200) {\n    cy.log(\"Verification successful\"); // Log successful verification\n    console.log(\"Verification successful\");\n    // Assertions\n    expect(response.status).to.eq(200); // Check if the status code is 200\n    expect(response.body).to.have.property(\"success\", true); // Check if the success property is true\n    expect(response.duration).to.be.lessThan(3000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"76b1ebb5-05ef-48ff-89bf-25f1a86a829e","parentUUID":"7df7eb53-2195-4eef-b84d-f4c24bbfb265","isHook":false,"skipped":false}],"suites":[],"passes":["76b1ebb5-05ef-48ff-89bf-25f1a86a829e"],"failures":[],"pending":[],"skipped":[],"duration":1205,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"060c8cbf-0e60-485b-9189-a90c4f23e0f2","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.3 sendOtp.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.3 sendOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"38e5e95d-6c76-405d-920b-a2332c48b7d6","title":"Get OTP on my email successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Should be able to send OTP to email","fullTitle":"Get OTP on my email successfully with status code 200 Should be able to send OTP to email","timedOut":null,"duration":1006,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/sendotp\",\n  body: {\n    userId: userId,\n    channel: \"email\",\n    captchaToken: \"\"\n  }\n}).then(response => {\n  if (response.status === 200) {\n    cy.log(\"Send OTP successful\");\n    console.log(\"Send OTP successful\");\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(3000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"1ed3c367-6878-4c0b-bf66-5cc27d190cbf","parentUUID":"38e5e95d-6c76-405d-920b-a2332c48b7d6","isHook":false,"skipped":false}],"suites":[],"passes":["1ed3c367-6878-4c0b-bf66-5cc27d190cbf"],"failures":[],"pending":[],"skipped":[],"duration":1006,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"8c6c5b19-cf2c-4e03-80c5-aea8c9213b9c","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.4 verifyOtp.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.4 verifyOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"c977bf88-7641-4598-adf2-9d78bd3fd8b2","title":"Verify OTP with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to verify","fullTitle":"Verify OTP with status code 200 should be able to verify","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"const otp = \"731258\";\ncy.request({\n  method: \"POST\",\n  url: \"/user/verifyotp\",\n  body: {\n    otp: otp,\n    channel: \"email\",\n    userId: studentID // Use student ID obtained from fixture\n  }\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    cy.log(\"OTP verification successful\");\n    console.log(\"OTP verification successful\");\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"87f64c37-868c-4a12-9699-c91c91519670","parentUUID":"c977bf88-7641-4598-adf2-9d78bd3fd8b2","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["87f64c37-868c-4a12-9699-c91c91519670"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"c5c77b3c-a74d-4790-8011-bffc9c03b863","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.5 forgotPassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.5 forgotPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"416f1d65-64df-496b-a710-06b7f99f9632","title":"Forgot password functionality if I forgot my password successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if a user can use forgot password functionality in the browser or not","fullTitle":"Forgot password functionality if I forgot my password successfully with status code 200 Checking if a user can use forgot password functionality in the browser or not","timedOut":null,"duration":567,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/password/forgot\",\n  body: {\n    phone: studentNumber,\n    email: studentEmail,\n    channel: \"email\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"isOtpSend\", true);\n    cy.log(\"Forgot Password Response:\", response.body);\n    console.log(\"Forgot Password Response:\", response.body);\n  } else {\n    cy.log(\"Forgot password failed due to: \", response.body.error);\n  }\n});","err":{},"uuid":"3f323f7c-4a78-4246-b4da-324a2a17fdf0","parentUUID":"416f1d65-64df-496b-a710-06b7f99f9632","isHook":false,"skipped":false}],"suites":[],"passes":["3f323f7c-4a78-4246-b4da-324a2a17fdf0"],"failures":[],"pending":[],"skipped":[],"duration":567,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"1477aaab-10c2-476a-a004-83bffa581570","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.6 resetPassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.6 resetPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"b1fc4126-631a-4b32-8249-6336e411fe62","title":"Reset my password successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Reset my password successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/password/reset\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    email: studentEmail,\n    phone: studentNumber,\n    channel: \"email\",\n    otp: otp,\n    password: password\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"a8879cae-843e-478f-91f7-83f8b9dda6ab","parentUUID":"b1fc4126-631a-4b32-8249-6336e411fe62","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["a8879cae-843e-478f-91f7-83f8b9dda6ab"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"3f553da9-e2ed-4772-aa4d-95fb77a67d87","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.7 changePassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.7 changePassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"596f0d32-3764-4594-9456-17e410eef10e","title":"Change my password successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Change my password successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":568,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/changepassword\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    currentPassword: \"Anonno#1\",\n    newPassword: \"Anonno#1\",\n    confirmPassword: \"Anonno#1\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"96039c78-62ff-41c9-abf7-a1182f6c5114","parentUUID":"596f0d32-3764-4594-9456-17e410eef10e","isHook":false,"skipped":false}],"suites":[],"passes":["96039c78-62ff-41c9-abf7-a1182f6c5114"],"failures":[],"pending":[],"skipped":[],"duration":568,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"8b849c0b-550e-43d9-ba35-d689fb4d7626","title":"","fullFile":"cypress/e2e/1. UserService/03. UpdatUser/1.03.1 updateUser.cy.js","file":"cypress/e2e/1. UserService/03. UpdatUser/1.03.1 updateUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"51388f02-4bdb-4756-94cb-c7c6af28518c","title":"Update user successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Update user successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":580,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/updateuser\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    firstName: \"Anonno\",\n    lastName: \"Das\",\n    about: \"Nothing\",\n    personalData: {\n      address: {\n        street: \"\",\n        city: \"Narail\",\n        postalCode: \"7521\",\n        state: \"Khulna\",\n        country: \"Bangladesh\"\n      },\n      socialMedia: {\n        facebook: \"\",\n        github: \"\",\n        instagram: \"\",\n        linkedin: \"\",\n        twitter: \"\"\n      },\n      resume: \"\",\n      bio: \"Don't have bio\"\n    }\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"059d59c5-68c7-41d1-86a8-908336d82fc7","parentUUID":"51388f02-4bdb-4756-94cb-c7c6af28518c","isHook":false,"skipped":false}],"suites":[],"passes":["059d59c5-68c7-41d1-86a8-908336d82fc7"],"failures":[],"pending":[],"skipped":[],"duration":580,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"011a20ae-bc89-4d3d-9401-8ce6ee3e08bd","title":"","fullFile":"cypress/e2e/1. UserService/04. SyncPushToken/1.04.1 syncPushToken.cy.js","file":"cypress/e2e/1. UserService/04. SyncPushToken/1.04.1 syncPushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"352f23f7-4556-4905-925e-38d900e93f15","title":"sync push token successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the sync up push token or not","fullTitle":"sync push token successfully with status code 200 Checking if the sync up push token or not","timedOut":null,"duration":582,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/sync-pushtoken\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    pushToken: \"user\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b7dee428-8308-4900-a821-bb1c3abd88a0","parentUUID":"352f23f7-4556-4905-925e-38d900e93f15","isHook":false,"skipped":false}],"suites":[],"passes":["b7dee428-8308-4900-a821-bb1c3abd88a0"],"failures":[],"pending":[],"skipped":[],"duration":582,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"1cbe651f-566f-4a91-902b-7198be66058d","title":"","fullFile":"cypress/e2e/1. UserService/05. RemovePushToken/1.05.1 removePushToken.cy.js","file":"cypress/e2e/1. UserService/05. RemovePushToken/1.05.1 removePushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"9f69dc33-b205-4d94-a838-3488e6f5417c","title":"Remove push token successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the remove push token or not","fullTitle":"Remove push token successfully with status code 200 Checking if the remove push token or not","timedOut":null,"duration":620,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/remove-pushtoken\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    token: \"user\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Remove push token Response:\", response.body);\n    console.log(\"Remove push token Response:\", response.body);\n  } else {\n    cy.log(\"Remove push token failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"2db40584-a9e8-4512-92d8-cffa02f997f7","parentUUID":"9f69dc33-b205-4d94-a838-3488e6f5417c","isHook":false,"skipped":false}],"suites":[],"passes":["2db40584-a9e8-4512-92d8-cffa02f997f7"],"failures":[],"pending":[],"skipped":[],"duration":620,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"39e29529-1093-42d4-b423-1da6c2bb93e4","title":"","fullFile":"cypress/e2e/1. UserService/07. UpdateUserStatus/1.07.1 updateUserStatus.cy.js","file":"cypress/e2e/1. UserService/07. UpdateUserStatus/1.07.1 updateUserStatus.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"ed829c50-4d10-46c8-a13e-7b0310493ed7","title":"Update User Status successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able update user status or not","fullTitle":"Update User Status successfully with status code 200 Checking if should be able update user status or not","timedOut":null,"duration":489,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/updateuser\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    profileStatus: {\n      currentStatus: \"Busy Nai\",\n      recurring: {\n        isDailyRecurring: true,\n        fromTime: \"09:01 AM\",\n        toTime: \"05:00 PM\"\n      }\n    }\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"User status Response:\", response.body);\n    console.log(\"User status Response:\", response.body);\n  } else {\n    cy.log(\"Update user status failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"7dc4e667-1c2f-4e5a-9e54-7a79e9ea41b7","parentUUID":"ed829c50-4d10-46c8-a13e-7b0310493ed7","isHook":false,"skipped":false}],"suites":[],"passes":["7dc4e667-1c2f-4e5a-9e54-7a79e9ea41b7"],"failures":[],"pending":[],"skipped":[],"duration":489,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"1e523c6a-5cb2-43ed-afaa-e3ce7a36f5d4","title":"","fullFile":"cypress/e2e/1. UserService/06. FilterUser/1.06.1 FilterUser.cy.js","file":"cypress/e2e/1. UserService/06. FilterUser/1.06.1 FilterUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"ed066522-5154-401e-a7bc-4ecef7439ca4","title":"User filtering successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able user filter or not","fullTitle":"User filtering successfully with status code 200 Checking if should be able user filter or not","timedOut":null,"duration":539,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/filter\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    program: \"\",\n    session: \"\",\n    query: \"anonno\",\n    global: true\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"User filter Response:\", response.body);\n    console.log(\"User filter Response:\", response.body);\n  } else {\n    cy.log(\"User filtering failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"777bee95-2ff7-4f8a-aff0-f8aece55a2fb","parentUUID":"ed066522-5154-401e-a7bc-4ecef7439ca4","isHook":false,"skipped":false}],"suites":[],"passes":["777bee95-2ff7-4f8a-aff0-f8aece55a2fb"],"failures":[],"pending":[],"skipped":[],"duration":539,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"40fa78f5-7bdd-4ada-ad85-a44a4efbd0ef","title":"","fullFile":"cypress/e2e/2. OrganizationService/01. UserOrganization/2.01.1 getUserOrganization.cy.js","file":"cypress/e2e/2. OrganizationService/01. UserOrganization/2.01.1 getUserOrganization.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"55a7897a-75bd-4baf-b732-b8bd89ed7758","title":"Get user organization successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get user organization or not","fullTitle":"Get user organization successfully with status code 200 Checking if should be able get user organization or not","timedOut":null,"duration":574,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/organization/user-organizations\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get user organization  Response:\", response.body);\n    console.log(\"Get user organization  Response:\", response.body);\n  } else {\n    cy.log(\"Get user organization failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"ba9b6543-0d80-4db3-8192-16303f254578","parentUUID":"55a7897a-75bd-4baf-b732-b8bd89ed7758","isHook":false,"skipped":false}],"suites":[],"passes":["ba9b6543-0d80-4db3-8192-16303f254578"],"failures":[],"pending":[],"skipped":[],"duration":574,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"95091afe-612d-4951-8062-400d7ac5eba3","title":"","fullFile":"cypress/e2e/2. OrganizationService/02. CompanyDetail/2.02.1 getCompanyDetail.cy.js","file":"cypress/e2e/2. OrganizationService/02. CompanyDetail/2.02.1 getCompanyDetail.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"affa58d5-456d-4d99-ba77-b03e648b7cfb","title":"Get Company Details successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get Company Details or not","fullTitle":"Get Company Details successfully with status code 200 Checking if should be able get Company Details or not","timedOut":null,"duration":511,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/organization/details/${slug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get Company Details  Response:\", response.body);\n    console.log(\"Get Company Details  Response:\", response.body);\n  } else {\n    cy.log(\"Get Company Details failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b368890f-01ba-484a-9428-a42384545616","parentUUID":"affa58d5-456d-4d99-ba77-b03e648b7cfb","isHook":false,"skipped":false}],"suites":[],"passes":["b368890f-01ba-484a-9428-a42384545616"],"failures":[],"pending":[],"skipped":[],"duration":511,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"a041574c-92d2-4a21-ae22-27cd24ac163a","title":"","fullFile":"cypress/e2e/2. OrganizationService/03. GenerateText/2.03.1 generateTextByAI.cy.js","file":"cypress/e2e/2. OrganizationService/03. GenerateText/2.03.1 generateTextByAI.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"72590670-0dc4-4aa9-a2e2-5f7396e7909e","title":"Generate Text successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able generate text or not","fullTitle":"Generate Text successfully with status code 200 Checking if should be able generate text or not","timedOut":null,"duration":448,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/organization/integration/generate-text\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId,\n    Enrollment: enrollmentId\n  },\n  body: {\n    prompt: \"How to make money?\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    // expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Generate text  Response:\", response.body);\n    console.log(\"Generate text  Response:\", response.body);\n  } else {\n    cy.log(\"Generate text failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"4036e2c3-8e86-48f7-ab8a-057700d8aadc","parentUUID":"72590670-0dc4-4aa9-a2e2-5f7396e7909e","isHook":false,"skipped":false}],"suites":[],"passes":["4036e2c3-8e86-48f7-ab8a-057700d8aadc"],"failures":[],"pending":[],"skipped":[],"duration":448,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f57d64ca-8ab3-430d-b52d-2da434ad96c8","title":"","fullFile":"cypress/e2e/3. ContentService/01. ContentFlow/3.01.1 getCourseContent.cy.js","file":"cypress/e2e/3. ContentService/01. ContentFlow/3.01.1 getCourseContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"82cfc544-6251-4754-8020-c33a0344cd19","title":"Get course content by category successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get course data or not","fullTitle":"Get course content by category successfully with status code 200 Checking if should be able get course data or not","timedOut":null,"duration":437,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/content/getbycourse/${category}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course data Response:\", response.body);\n    console.log(\"Get course data Response:\", response.body);\n  } else {\n    cy.log(\"Get course data failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"02a672f1-a83c-4cdc-8571-4c2985902c89","parentUUID":"82cfc544-6251-4754-8020-c33a0344cd19","isHook":false,"skipped":false}],"suites":[],"passes":["02a672f1-a83c-4cdc-8571-4c2985902c89"],"failures":[],"pending":[],"skipped":[],"duration":437,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ca1f5736-415d-448f-b4b0-2d210758f8f3","title":"","fullFile":"cypress/e2e/3. ContentService/01. ContentFlow/3.01.2 getContentById.cy.js","file":"cypress/e2e/3. ContentService/01. ContentFlow/3.01.2 getContentById.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"990b7be1-61d3-400b-9146-0540265de1ed","title":"Get content by content Id successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get content by content Id or not","fullTitle":"Get content by content Id successfully with status code 200 Checking if should be able get content by content Id or not","timedOut":null,"duration":577,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/content/getcontent/${courseId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course by course Id Response:\", response.body);\n    console.log(\"Get course data by course id Response:\", response.body);\n  } else {\n    cy.log(\"Get content by content Id failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b4b84471-2fa3-4020-a5ef-d578235e11d7","parentUUID":"990b7be1-61d3-400b-9146-0540265de1ed","isHook":false,"skipped":false}],"suites":[],"passes":["b4b84471-2fa3-4020-a5ef-d578235e11d7"],"failures":[],"pending":[],"skipped":[],"duration":577,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"632b7158-c9f0-4bdb-b66d-9014b0201633","title":"","fullFile":"cypress/e2e/3. ContentService/01. ContentFlow/3.01.3 getLabContent.cy.js","file":"cypress/e2e/3. ContentService/01. ContentFlow/3.01.3 getLabContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"0b017522-ec6f-4517-9ca2-84b3042aa4ce","title":"Get Lab Content successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get Lab Content or not","fullTitle":"Get Lab Content successfully with status code 200 Checking if should be able get Lab Content or not","timedOut":null,"duration":428,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/content/labcontent\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get lab content Response:\", response.body);\n    console.log(\"Get lab content Response:\", response.body);\n  } else {\n    cy.log(\"Get lab content failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"d78b7605-f041-41e9-a5b1-3333675d5229","parentUUID":"0b017522-ec6f-4517-9ca2-84b3042aa4ce","isHook":false,"skipped":false}],"suites":[],"passes":["d78b7605-f041-41e9-a5b1-3333675d5229"],"failures":[],"pending":[],"skipped":[],"duration":428,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"662bb200-9963-4cfe-8d16-561553f98e4f","title":"","fullFile":"cypress/e2e/3. ContentService/02. CommunityFlow/3.02.1 GetCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. CommunityFlow/3.02.1 GetCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"72105c35-f4e1-459d-9727-1bdb02a56272","title":"Get all community post successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get Lab Content or not","fullTitle":"Get all community post successfully with status code 200 Checking if should be able get Lab Content or not","timedOut":null,"duration":418,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/community/post/getall\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    // \"page\": \"1\",\n    // \"limit\": \"10\",\n    // \"query\": \"\",\n    // \"tags\": [],\n    // \"user\": \"\",\n    // \"filterBy\": \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get lab content Response:\", response.body);\n    console.log(\"Get lab content Response:\", response.body);\n  } else {\n    cy.log(\"Get lab content failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"3ed7bbe1-2cf3-4e95-8253-034126c993e3","parentUUID":"72105c35-f4e1-459d-9727-1bdb02a56272","isHook":false,"skipped":false}],"suites":[],"passes":["3ed7bbe1-2cf3-4e95-8253-034126c993e3"],"failures":[],"pending":[],"skipped":[],"duration":418,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"c85a282f-587e-4ed6-9737-04ca3193e4cd","title":"","fullFile":"cypress/e2e/3. ContentService/02. CommunityFlow/3.02.2 createCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. CommunityFlow/3.02.2 createCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"117b0651-5461-441a-80b8-469de0889cef","title":"Create community post successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able create community post or not","fullTitle":"Create community post successfully with status code 200 Checking if should be able create community post or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/community/post/create\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    title: faker.lorem,\n    description: faker.lorem,\n    attachments: [],\n    tags: []\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Create community post Response:\", response.body);\n    console.log(\"Create community post Response:\", response.body);\n  } else {\n    cy.log(\"Create community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"305e2ef3-23a3-4e4d-b3cb-31c34b3587d7","parentUUID":"117b0651-5461-441a-80b8-469de0889cef","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["305e2ef3-23a3-4e4d-b3cb-31c34b3587d7"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"9e86db9f-a41e-4b12-82db-66c9ed14611e","title":"","fullFile":"cypress/e2e/5. CommonService/01. MyNavigation/5.01.1 getMyNavigation.cy.js","file":"cypress/e2e/5. CommonService/01. MyNavigation/5.01.1 getMyNavigation.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"15a2827c-dcde-480e-8f1c-04343fd1db0d","title":"Get my navigation successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get my navigation or not","fullTitle":"Get my navigation successfully with status code 200 Checking if should be able get my navigation or not","timedOut":null,"duration":542,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/navigation/mynavigations\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my navigation Response:\", response.body);\n    console.log(\"get may navigation post Response:\", response.body);\n  } else {\n    cy.log(\"Get my navigation failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"577c2eed-6430-4209-93a4-3b2623ae524f","parentUUID":"15a2827c-dcde-480e-8f1c-04343fd1db0d","isHook":false,"skipped":false}],"suites":[],"passes":["577c2eed-6430-4209-93a4-3b2623ae524f"],"failures":[],"pending":[],"skipped":[],"duration":542,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"818dccf9-0faa-4f40-b02e-d495eed63ece","title":"","fullFile":"cypress/e2e/6. ChatService/01. MyChats/6.01.1 myChats.cy.js","file":"cypress/e2e/6. ChatService/01. MyChats/6.01.1 myChats.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"d0e9f56c-a2a1-4c07-a860-fe283019a5a7","title":"My all chats with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get my all chats or not","fullTitle":"My all chats with status code 200 Checking if should be able get my all chats or not","timedOut":null,"duration":457,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/chat/mychats\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(3000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"get my chats Response:\", response.body);\n  } else {\n    cy.log(\"Get my chats failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"cac505fd-f269-4a1c-8a23-93a2004b199d","parentUUID":"d0e9f56c-a2a1-4c07-a860-fe283019a5a7","isHook":false,"skipped":false}],"suites":[],"passes":["cac505fd-f269-4a1c-8a23-93a2004b199d"],"failures":[],"pending":[],"skipped":[],"duration":457,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"3ad375b5-9dd3-489b-bd08-a0c337f6d6cc","title":"","fullFile":"cypress/e2e/6. ChatService/02. FindOrCreateChatsByUser/6.02.1 findOrCreateChatsByUser.cy.js","file":"cypress/e2e/6. ChatService/02. FindOrCreateChatsByUser/6.02.1 findOrCreateChatsByUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"0611ff12-fa77-490c-969b-85fd0eb46246","title":"Find or Create chats by user with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Find or Create chats by user or not","fullTitle":"Find or Create chats by user with status code 200 Checking if should be able Find or Create chats by user or not","timedOut":null,"duration":459,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/findorcreate/${userId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {},\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(3000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Find or Create chats by user Response:\", response.body);\n  } else {\n    cy.log(\"Find or Create chats by user failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"ef36db02-1fcb-4547-b7fa-d530e64130f4","parentUUID":"0611ff12-fa77-490c-969b-85fd0eb46246","isHook":false,"skipped":false}],"suites":[],"passes":["ef36db02-1fcb-4547-b7fa-d530e64130f4"],"failures":[],"pending":[],"skipped":[],"duration":459,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f1f091b7-5a8f-40b2-9321-e921cda861a0","title":"","fullFile":"cypress/e2e/6. ChatService/03. FetchChatMessage/6.03.1 fetchChatMessage.cy.js","file":"cypress/e2e/6. ChatService/03. FetchChatMessage/6.03.1 fetchChatMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"3c76ecfb-0154-4801-a3c8-dff3d3518281","title":"Fetch the chat message with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Fetch the chat message or not","fullTitle":"Fetch the chat message with status code 200 Checking if should be able Fetch the chat message or not","timedOut":null,"duration":509,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/messages`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    page: 1,\n    chat: chatId,\n    limit: 5\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(7000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Fetch the chat message Response:\", response.body);\n  } else {\n    cy.log(\"Fetch the chat message failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"ce4e9121-6b8b-4770-aa94-0acf4218a906","parentUUID":"3c76ecfb-0154-4801-a3c8-dff3d3518281","isHook":false,"skipped":false}],"suites":[],"passes":["ce4e9121-6b8b-4770-aa94-0acf4218a906"],"failures":[],"pending":[],"skipped":[],"duration":509,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"7ba9c435-36e1-442e-b09b-421de5ce1552","title":"","fullFile":"cypress/e2e/6. ChatService/04. AddUserToChnnel/6.04.1 addUserToChannel.cy.js","file":"cypress/e2e/6. ChatService/04. AddUserToChnnel/6.04.1 addUserToChannel.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"90c433cc-5001-426c-b0ac-aa5ad744a6b3","title":"Add member to channel with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Add member to channel or not","fullTitle":"Add member to channel with status code 200 Checking if should be able Add member to channel or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/chat/channel/adduser/${chatId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n    // Organization: organizationId,\n  },\n  body: {\n    member: memberId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Add member to channel Response:\", response.body);\n  } else {\n    cy.log(\"Add member to channel failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"8eace2b0-e46e-424f-b39d-3593d16903cf","parentUUID":"90c433cc-5001-426c-b0ac-aa5ad744a6b3","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["8eace2b0-e46e-424f-b39d-3593d16903cf"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"5081eafe-3025-47f7-ae95-3fa8ba1bcaa9","title":"","fullFile":"cypress/e2e/6. ChatService/05. GetChatMembers/6.05.1 getChatMembers.cy.js","file":"cypress/e2e/6. ChatService/05. GetChatMembers/6.05.1 getChatMembers.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"fd02ad06-920a-4e6f-9f41-31fc71901d43","title":"Get the chat members with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get the chat members or not","fullTitle":"Get the chat members with status code 200 Checking if should be able Get the chat members or not","timedOut":null,"duration":501,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/members/${chatId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n    // Organization: organizationId,\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Get the chat members Response:\", response.body);\n  } else {\n    cy.log(\"Get the chat members failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"d7d5e576-7488-4bef-a09c-c78966cd74a5","parentUUID":"fd02ad06-920a-4e6f-9f41-31fc71901d43","isHook":false,"skipped":false}],"suites":[],"passes":["d7d5e576-7488-4bef-a09c-c78966cd74a5"],"failures":[],"pending":[],"skipped":[],"duration":501,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"2e5b0643-a25d-42c6-9ef8-1661a2f25532","title":"","fullFile":"cypress/e2e/6. ChatService/06. SearchChatMembers/6.06.1 searchChatMembers.cy.js","file":"cypress/e2e/6. ChatService/06. SearchChatMembers/6.06.1 searchChatMembers.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"c18cf5a3-d16f-49f4-8483-885856228da5","title":"Search chat members with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Search chat members or not","fullTitle":"Search chat members with status code 200 Checking if should be able Search chat members or not","timedOut":null,"duration":442,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/members/${chatId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n    // Organization: organizationId,\n  },\n  body: {\n    query: \"anonno\",\n    limit: 5\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Search chat members Response:\", response.body);\n  } else {\n    cy.log(\"Search chat members failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"cc01f429-c9f4-4835-bd6f-540a27cba25b","parentUUID":"c18cf5a3-d16f-49f4-8483-885856228da5","isHook":false,"skipped":false}],"suites":[],"passes":["cc01f429-c9f4-4835-bd6f-540a27cba25b"],"failures":[],"pending":[],"skipped":[],"duration":442,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"b07de31c-a320-4bfa-a173-8d428e2f6b6f","title":"","fullFile":"cypress/e2e/6. ChatService/07. Update Member Role/6.07.1 updateMemberRole.cy.js","file":"cypress/e2e/6. ChatService/07. Update Member Role/6.07.1 updateMemberRole.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"3fa30889-feb3-4b43-858e-85bf2c88d4ce","title":"Update member role with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Update member role or not","fullTitle":"Update member role with status code 200 Checking if should be able Update member role or not","timedOut":null,"duration":449,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/chat/member/update\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n    // Organization: organizationId,\n  },\n  body: {\n    member: memberId,\n    role: \"moderator\",\n    chat: chatId,\n    actionType: \"role\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Update member role Response:\", response.body);\n  } else {\n    cy.log(\"Update member role failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"a0b0b919-22b8-46d8-b185-c79bfa4629c4","parentUUID":"3fa30889-feb3-4b43-858e-85bf2c88d4ce","isHook":false,"skipped":false}],"suites":[],"passes":["a0b0b919-22b8-46d8-b185-c79bfa4629c4"],"failures":[],"pending":[],"skipped":[],"duration":449,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"698a27ef-d737-4e33-a260-df57bab71c4c","title":"","fullFile":"cypress/e2e/1. UserService/02. UpdateImage/1.02.1 updateImage.cy.js","file":"cypress/e2e/1. UserService/02. UpdateImage/1.02.1 updateImage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"a02f92fd-afe4-445f-9bfd-d43568258ea7","title":"Update Profile Picture API","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Should successfully update the profile picture","fullTitle":"Update Profile Picture API Should successfully update the profile picture","timedOut":null,"duration":1605,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"const imagePath = \"/images/image1.png\";\ncy.fixture(imagePath, \"binary\").then(Cypress.Blob.binaryStringToBlob).then(blob => {\n  const formData = new FormData();\n  formData.append(\"image\", blob, \"image1.png\");\n  // Send PATCH request with FormData\n  return cy.request({\n    method: \"PATCH\",\n    url: \"/user/updateimage\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    },\n    body: formData,\n    failOnStatusCode: false\n  });\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    cy.log(\"Profile picture updated successfully\");\n    //   cy.log(JSON.stringify(response.body, null, 2));\n  } else {\n    cy.log(\"Profile picture update failed with status code: \", response.status);\n    cy.log(response.body.error || \"Unknown error\");\n  }\n});","err":{},"uuid":"e6477a26-4aa5-4799-be94-5a9d1c006ef4","parentUUID":"a02f92fd-afe4-445f-9bfd-d43568258ea7","isHook":false,"skipped":false}],"suites":[],"passes":["e6477a26-4aa5-4799-be94-5a9d1c006ef4"],"failures":[],"pending":[],"skipped":[],"duration":1605,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000}],"meta":{"mocha":{"version":"7.0.1"},"mochawesome":{"options":{"quiet":true,"reportFilename":"mochawesome","saveHtml":false,"saveJson":true,"consoleReporter":"spec","useInlineDiffs":false,"code":true},"version":"7.1.3"},"marge":{"options":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true,"overwrite":false,"html":false,"json":true,"reportDir":"cypress/reports/html/.jsons"},"version":"6.2.0"}}}
baseFolder: cypress/e2e
attach media for test "Login to the portal with valid credential and get stats code 200 should be able to login"
no context
attach media for test "Verify user successfully with status code 200 should be able to verify user"
no context
attach media for test "Get OTP on my email successfully with status code 200 Should be able to send OTP to email"
no context
attach media for test "Verify OTP with status code 200 should be able to verify"
no context
attach media for test "Forgot password functionality if I forgot my password successfully with status code 200 Checking if a user can use forgot password functionality in the browser or not"
no context
attach media for test "Reset my password successfully with status code 200 Checking if the user can reset their password or not"
no context
attach media for test "Change my password successfully with status code 200 Checking if the user can reset their password or not"
no context
attach media for test "Update user successfully with status code 200 Checking if the user can reset their password or not"
no context
attach media for test "sync push token successfully with status code 200 Checking if the sync up push token or not"
no context
attach media for test "Remove push token successfully with status code 200 Checking if the remove push token or not"
no context
attach media for test "Update User Status successfully with status code 200 Checking if should be able update user status or not"
no context
attach media for test "User filtering successfully with status code 200 Checking if should be able user filter or not"
no context
attach media for test "Get user organization successfully with status code 200 Checking if should be able get user organization or not"
no context
attach media for test "Get Company Details successfully with status code 200 Checking if should be able get Company Details or not"
no context
attach media for test "Generate Text successfully with status code 200 Checking if should be able generate text or not"
no context
attach media for test "Get course content by category successfully with status code 200 Checking if should be able get course data or not"
no context
attach media for test "Get content by content Id successfully with status code 200 Checking if should be able get content by content Id or not"
no context
attach media for test "Get Lab Content successfully with status code 200 Checking if should be able get Lab Content or not"
no context
attach media for test "Get all community post successfully with status code 200 Checking if should be able get Lab Content or not"
no context
attach media for test "Create community post successfully with status code 200 Checking if should be able create community post or not"
no context
attach media for test "Get my navigation successfully with status code 200 Checking if should be able get my navigation or not"
no context
attach media for test "My all chats with status code 200 Checking if should be able get my all chats or not"
no context
attach media for test "Find or Create chats by user with status code 200 Checking if should be able Find or Create chats by user or not"
no context
attach media for test "Fetch the chat message with status code 200 Checking if should be able Fetch the chat message or not"
no context
attach media for test "Add member to channel with status code 200 Checking if should be able Add member to channel or not"
no context
attach media for test "Get the chat members with status code 200 Checking if should be able Get the chat members or not"
no context
attach media for test "Search chat members with status code 200 Checking if should be able Search chat members or not"
no context
attach media for test "Update member role with status code 200 Checking if should be able Update member role or not"
no context
attach media for test "Update Profile Picture API Should successfully update the profile picture"
no context
report after enhance: {"stats":{"suites":29,"tests":29,"passes":25,"pending":4,"failures":0,"testsRegistered":29,"passPercent":86.20689655172414,"pendingPercent":13.793103448275861,"other":0,"hasOther":false,"skipped":0,"hasSkipped":false,"start":"2024-11-26T11:13:35.073Z","end":"2024-11-26T11:15:22.225Z","duration":107152},"results":[{"uuid":"ab262291-8e81-4c4c-bbfd-a487cd6e97e2","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.1 userLogin.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.1 userLogin.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"256cc437-9604-42ec-b953-9486e274995e","title":"Login to the portal with valid credential and get stats code 200","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.1 userLogin.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.1 userLogin.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to login","fullTitle":"Login to the portal with valid credential and get stats code 200 should be able to login","timedOut":null,"duration":723,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/login\",\n  body: {\n    email: userEmail,\n    password: userPassword\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    const {\n      token,\n      user\n    } = response.body;\n    const studentToken = token;\n    const studentLoginID = user._id;\n    // Store token and login ID to fixtures\n    cy.writeFile(\"cypress/fixtures/studentToken.json\", {\n      studentLoginToken: studentToken\n    });\n    cy.writeFile(\"cypress/fixtures/studentLoginID.json\", {\n      userId: studentLoginID\n    });\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"token\");\n    expect(response.body.success).to.eq(true);\n    expect(response.duration).to.be.lessThan(2000);\n    cy.log(\"User Token:\", studentToken);\n    cy.log(\"User ID:\", studentLoginID);\n    console.log(\"User Token:\", studentToken);\n    console.log(\"User ID:\", studentLoginID);\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Login failed with status:\", response.status);\n    cy.log(`Login failed  ${response.body.error}`);\n    cy.log(`Login failed with status code ${response.status}`);\n  }\n});","err":{},"uuid":"fcfc8f18-922d-4103-aadd-328b65370a0f","parentUUID":"256cc437-9604-42ec-b953-9486e274995e","isHook":false,"skipped":false}],"suites":[],"passes":["fcfc8f18-922d-4103-aadd-328b65370a0f"],"failures":[],"pending":[],"skipped":[],"duration":723,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"6721718d-cf96-4e5b-b959-614bff618db2","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.2 verifyUser.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.2 verifyUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"7df7eb53-2195-4eef-b84d-f4c24bbfb265","title":"Verify user successfully with status code 200","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.2 verifyUser.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.2 verifyUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to verify user","fullTitle":"Verify user successfully with status code 200 should be able to verify user","timedOut":null,"duration":1205,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"// const otp = \"863182\";\ncy.request({\n  method: \"POST\",\n  url: \"/user/verify\",\n  headers: {\n    Authorization: `Bearer ${studentToken}`\n  },\n  body: {\n    // otp: otp,\n    // channel: \"email\",\n    // userId: studentToken, // Use student ID obtained from fixture\n  }\n}).then(response => {\n  if (response.status === 200) {\n    cy.log(\"Verification successful\"); // Log successful verification\n    console.log(\"Verification successful\");\n    // Assertions\n    expect(response.status).to.eq(200); // Check if the status code is 200\n    expect(response.body).to.have.property(\"success\", true); // Check if the success property is true\n    expect(response.duration).to.be.lessThan(3000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"76b1ebb5-05ef-48ff-89bf-25f1a86a829e","parentUUID":"7df7eb53-2195-4eef-b84d-f4c24bbfb265","isHook":false,"skipped":false}],"suites":[],"passes":["76b1ebb5-05ef-48ff-89bf-25f1a86a829e"],"failures":[],"pending":[],"skipped":[],"duration":1205,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"060c8cbf-0e60-485b-9189-a90c4f23e0f2","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.3 sendOtp.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.3 sendOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"38e5e95d-6c76-405d-920b-a2332c48b7d6","title":"Get OTP on my email successfully with status code 200","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.3 sendOtp.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.3 sendOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Should be able to send OTP to email","fullTitle":"Get OTP on my email successfully with status code 200 Should be able to send OTP to email","timedOut":null,"duration":1006,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/sendotp\",\n  body: {\n    userId: userId,\n    channel: \"email\",\n    captchaToken: \"\"\n  }\n}).then(response => {\n  if (response.status === 200) {\n    cy.log(\"Send OTP successful\");\n    console.log(\"Send OTP successful\");\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(3000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"1ed3c367-6878-4c0b-bf66-5cc27d190cbf","parentUUID":"38e5e95d-6c76-405d-920b-a2332c48b7d6","isHook":false,"skipped":false}],"suites":[],"passes":["1ed3c367-6878-4c0b-bf66-5cc27d190cbf"],"failures":[],"pending":[],"skipped":[],"duration":1006,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"8c6c5b19-cf2c-4e03-80c5-aea8c9213b9c","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.4 verifyOtp.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.4 verifyOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"c977bf88-7641-4598-adf2-9d78bd3fd8b2","title":"Verify OTP with status code 200","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.4 verifyOtp.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.4 verifyOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to verify","fullTitle":"Verify OTP with status code 200 should be able to verify","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"const otp = \"731258\";\ncy.request({\n  method: \"POST\",\n  url: \"/user/verifyotp\",\n  body: {\n    otp: otp,\n    channel: \"email\",\n    userId: studentID // Use student ID obtained from fixture\n  }\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    cy.log(\"OTP verification successful\");\n    console.log(\"OTP verification successful\");\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"87f64c37-868c-4a12-9699-c91c91519670","parentUUID":"c977bf88-7641-4598-adf2-9d78bd3fd8b2","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["87f64c37-868c-4a12-9699-c91c91519670"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"c5c77b3c-a74d-4790-8011-bffc9c03b863","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.5 forgotPassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.5 forgotPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"416f1d65-64df-496b-a710-06b7f99f9632","title":"Forgot password functionality if I forgot my password successfully with status code 200","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.5 forgotPassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.5 forgotPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if a user can use forgot password functionality in the browser or not","fullTitle":"Forgot password functionality if I forgot my password successfully with status code 200 Checking if a user can use forgot password functionality in the browser or not","timedOut":null,"duration":567,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/password/forgot\",\n  body: {\n    phone: studentNumber,\n    email: studentEmail,\n    channel: \"email\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"isOtpSend\", true);\n    cy.log(\"Forgot Password Response:\", response.body);\n    console.log(\"Forgot Password Response:\", response.body);\n  } else {\n    cy.log(\"Forgot password failed due to: \", response.body.error);\n  }\n});","err":{},"uuid":"3f323f7c-4a78-4246-b4da-324a2a17fdf0","parentUUID":"416f1d65-64df-496b-a710-06b7f99f9632","isHook":false,"skipped":false}],"suites":[],"passes":["3f323f7c-4a78-4246-b4da-324a2a17fdf0"],"failures":[],"pending":[],"skipped":[],"duration":567,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"1477aaab-10c2-476a-a004-83bffa581570","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.6 resetPassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.6 resetPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"b1fc4126-631a-4b32-8249-6336e411fe62","title":"Reset my password successfully with status code 200","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.6 resetPassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.6 resetPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Reset my password successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/password/reset\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    email: studentEmail,\n    phone: studentNumber,\n    channel: \"email\",\n    otp: otp,\n    password: password\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"a8879cae-843e-478f-91f7-83f8b9dda6ab","parentUUID":"b1fc4126-631a-4b32-8249-6336e411fe62","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["a8879cae-843e-478f-91f7-83f8b9dda6ab"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"3f553da9-e2ed-4772-aa4d-95fb77a67d87","title":"","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.7 changePassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.7 changePassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"596f0d32-3764-4594-9456-17e410eef10e","title":"Change my password successfully with status code 200","fullFile":"cypress/e2e/1. UserService/01. Auth/1.01.7 changePassword.cy.js","file":"cypress/e2e/1. UserService/01. Auth/1.01.7 changePassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Change my password successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":568,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/changepassword\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    currentPassword: \"Anonno#1\",\n    newPassword: \"Anonno#1\",\n    confirmPassword: \"Anonno#1\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"96039c78-62ff-41c9-abf7-a1182f6c5114","parentUUID":"596f0d32-3764-4594-9456-17e410eef10e","isHook":false,"skipped":false}],"suites":[],"passes":["96039c78-62ff-41c9-abf7-a1182f6c5114"],"failures":[],"pending":[],"skipped":[],"duration":568,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"8b849c0b-550e-43d9-ba35-d689fb4d7626","title":"","fullFile":"cypress/e2e/1. UserService/03. UpdatUser/1.03.1 updateUser.cy.js","file":"cypress/e2e/1. UserService/03. UpdatUser/1.03.1 updateUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"51388f02-4bdb-4756-94cb-c7c6af28518c","title":"Update user successfully with status code 200","fullFile":"cypress/e2e/1. UserService/03. UpdatUser/1.03.1 updateUser.cy.js","file":"cypress/e2e/1. UserService/03. UpdatUser/1.03.1 updateUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Update user successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":580,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/updateuser\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    firstName: \"Anonno\",\n    lastName: \"Das\",\n    about: \"Nothing\",\n    personalData: {\n      address: {\n        street: \"\",\n        city: \"Narail\",\n        postalCode: \"7521\",\n        state: \"Khulna\",\n        country: \"Bangladesh\"\n      },\n      socialMedia: {\n        facebook: \"\",\n        github: \"\",\n        instagram: \"\",\n        linkedin: \"\",\n        twitter: \"\"\n      },\n      resume: \"\",\n      bio: \"Don't have bio\"\n    }\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"059d59c5-68c7-41d1-86a8-908336d82fc7","parentUUID":"51388f02-4bdb-4756-94cb-c7c6af28518c","isHook":false,"skipped":false}],"suites":[],"passes":["059d59c5-68c7-41d1-86a8-908336d82fc7"],"failures":[],"pending":[],"skipped":[],"duration":580,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"011a20ae-bc89-4d3d-9401-8ce6ee3e08bd","title":"","fullFile":"cypress/e2e/1. UserService/04. SyncPushToken/1.04.1 syncPushToken.cy.js","file":"cypress/e2e/1. UserService/04. SyncPushToken/1.04.1 syncPushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"352f23f7-4556-4905-925e-38d900e93f15","title":"sync push token successfully with status code 200","fullFile":"cypress/e2e/1. UserService/04. SyncPushToken/1.04.1 syncPushToken.cy.js","file":"cypress/e2e/1. UserService/04. SyncPushToken/1.04.1 syncPushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the sync up push token or not","fullTitle":"sync push token successfully with status code 200 Checking if the sync up push token or not","timedOut":null,"duration":582,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/sync-pushtoken\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    pushToken: \"user\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b7dee428-8308-4900-a821-bb1c3abd88a0","parentUUID":"352f23f7-4556-4905-925e-38d900e93f15","isHook":false,"skipped":false}],"suites":[],"passes":["b7dee428-8308-4900-a821-bb1c3abd88a0"],"failures":[],"pending":[],"skipped":[],"duration":582,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"1cbe651f-566f-4a91-902b-7198be66058d","title":"","fullFile":"cypress/e2e/1. UserService/05. RemovePushToken/1.05.1 removePushToken.cy.js","file":"cypress/e2e/1. UserService/05. RemovePushToken/1.05.1 removePushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"9f69dc33-b205-4d94-a838-3488e6f5417c","title":"Remove push token successfully with status code 200","fullFile":"cypress/e2e/1. UserService/05. RemovePushToken/1.05.1 removePushToken.cy.js","file":"cypress/e2e/1. UserService/05. RemovePushToken/1.05.1 removePushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the remove push token or not","fullTitle":"Remove push token successfully with status code 200 Checking if the remove push token or not","timedOut":null,"duration":620,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/remove-pushtoken\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    token: \"user\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Remove push token Response:\", response.body);\n    console.log(\"Remove push token Response:\", response.body);\n  } else {\n    cy.log(\"Remove push token failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"2db40584-a9e8-4512-92d8-cffa02f997f7","parentUUID":"9f69dc33-b205-4d94-a838-3488e6f5417c","isHook":false,"skipped":false}],"suites":[],"passes":["2db40584-a9e8-4512-92d8-cffa02f997f7"],"failures":[],"pending":[],"skipped":[],"duration":620,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"39e29529-1093-42d4-b423-1da6c2bb93e4","title":"","fullFile":"cypress/e2e/1. UserService/07. UpdateUserStatus/1.07.1 updateUserStatus.cy.js","file":"cypress/e2e/1. UserService/07. UpdateUserStatus/1.07.1 updateUserStatus.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"ed829c50-4d10-46c8-a13e-7b0310493ed7","title":"Update User Status successfully with status code 200","fullFile":"cypress/e2e/1. UserService/07. UpdateUserStatus/1.07.1 updateUserStatus.cy.js","file":"cypress/e2e/1. UserService/07. UpdateUserStatus/1.07.1 updateUserStatus.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able update user status or not","fullTitle":"Update User Status successfully with status code 200 Checking if should be able update user status or not","timedOut":null,"duration":489,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/updateuser\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    profileStatus: {\n      currentStatus: \"Busy Nai\",\n      recurring: {\n        isDailyRecurring: true,\n        fromTime: \"09:01 AM\",\n        toTime: \"05:00 PM\"\n      }\n    }\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"User status Response:\", response.body);\n    console.log(\"User status Response:\", response.body);\n  } else {\n    cy.log(\"Update user status failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"7dc4e667-1c2f-4e5a-9e54-7a79e9ea41b7","parentUUID":"ed829c50-4d10-46c8-a13e-7b0310493ed7","isHook":false,"skipped":false}],"suites":[],"passes":["7dc4e667-1c2f-4e5a-9e54-7a79e9ea41b7"],"failures":[],"pending":[],"skipped":[],"duration":489,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"1e523c6a-5cb2-43ed-afaa-e3ce7a36f5d4","title":"","fullFile":"cypress/e2e/1. UserService/06. FilterUser/1.06.1 FilterUser.cy.js","file":"cypress/e2e/1. UserService/06. FilterUser/1.06.1 FilterUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"ed066522-5154-401e-a7bc-4ecef7439ca4","title":"User filtering successfully with status code 200","fullFile":"cypress/e2e/1. UserService/06. FilterUser/1.06.1 FilterUser.cy.js","file":"cypress/e2e/1. UserService/06. FilterUser/1.06.1 FilterUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able user filter or not","fullTitle":"User filtering successfully with status code 200 Checking if should be able user filter or not","timedOut":null,"duration":539,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/filter\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    program: \"\",\n    session: \"\",\n    query: \"anonno\",\n    global: true\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"User filter Response:\", response.body);\n    console.log(\"User filter Response:\", response.body);\n  } else {\n    cy.log(\"User filtering failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"777bee95-2ff7-4f8a-aff0-f8aece55a2fb","parentUUID":"ed066522-5154-401e-a7bc-4ecef7439ca4","isHook":false,"skipped":false}],"suites":[],"passes":["777bee95-2ff7-4f8a-aff0-f8aece55a2fb"],"failures":[],"pending":[],"skipped":[],"duration":539,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"40fa78f5-7bdd-4ada-ad85-a44a4efbd0ef","title":"","fullFile":"cypress/e2e/2. OrganizationService/01. UserOrganization/2.01.1 getUserOrganization.cy.js","file":"cypress/e2e/2. OrganizationService/01. UserOrganization/2.01.1 getUserOrganization.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"55a7897a-75bd-4baf-b732-b8bd89ed7758","title":"Get user organization successfully with status code 200","fullFile":"cypress/e2e/2. OrganizationService/01. UserOrganization/2.01.1 getUserOrganization.cy.js","file":"cypress/e2e/2. OrganizationService/01. UserOrganization/2.01.1 getUserOrganization.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get user organization or not","fullTitle":"Get user organization successfully with status code 200 Checking if should be able get user organization or not","timedOut":null,"duration":574,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/organization/user-organizations\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get user organization  Response:\", response.body);\n    console.log(\"Get user organization  Response:\", response.body);\n  } else {\n    cy.log(\"Get user organization failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"ba9b6543-0d80-4db3-8192-16303f254578","parentUUID":"55a7897a-75bd-4baf-b732-b8bd89ed7758","isHook":false,"skipped":false}],"suites":[],"passes":["ba9b6543-0d80-4db3-8192-16303f254578"],"failures":[],"pending":[],"skipped":[],"duration":574,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"95091afe-612d-4951-8062-400d7ac5eba3","title":"","fullFile":"cypress/e2e/2. OrganizationService/02. CompanyDetail/2.02.1 getCompanyDetail.cy.js","file":"cypress/e2e/2. OrganizationService/02. CompanyDetail/2.02.1 getCompanyDetail.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"affa58d5-456d-4d99-ba77-b03e648b7cfb","title":"Get Company Details successfully with status code 200","fullFile":"cypress/e2e/2. OrganizationService/02. CompanyDetail/2.02.1 getCompanyDetail.cy.js","file":"cypress/e2e/2. OrganizationService/02. CompanyDetail/2.02.1 getCompanyDetail.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get Company Details or not","fullTitle":"Get Company Details successfully with status code 200 Checking if should be able get Company Details or not","timedOut":null,"duration":511,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/organization/details/${slug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get Company Details  Response:\", response.body);\n    console.log(\"Get Company Details  Response:\", response.body);\n  } else {\n    cy.log(\"Get Company Details failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b368890f-01ba-484a-9428-a42384545616","parentUUID":"affa58d5-456d-4d99-ba77-b03e648b7cfb","isHook":false,"skipped":false}],"suites":[],"passes":["b368890f-01ba-484a-9428-a42384545616"],"failures":[],"pending":[],"skipped":[],"duration":511,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"a041574c-92d2-4a21-ae22-27cd24ac163a","title":"","fullFile":"cypress/e2e/2. OrganizationService/03. GenerateText/2.03.1 generateTextByAI.cy.js","file":"cypress/e2e/2. OrganizationService/03. GenerateText/2.03.1 generateTextByAI.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"72590670-0dc4-4aa9-a2e2-5f7396e7909e","title":"Generate Text successfully with status code 200","fullFile":"cypress/e2e/2. OrganizationService/03. GenerateText/2.03.1 generateTextByAI.cy.js","file":"cypress/e2e/2. OrganizationService/03. GenerateText/2.03.1 generateTextByAI.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able generate text or not","fullTitle":"Generate Text successfully with status code 200 Checking if should be able generate text or not","timedOut":null,"duration":448,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/organization/integration/generate-text\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId,\n    Enrollment: enrollmentId\n  },\n  body: {\n    prompt: \"How to make money?\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    // expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Generate text  Response:\", response.body);\n    console.log(\"Generate text  Response:\", response.body);\n  } else {\n    cy.log(\"Generate text failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"4036e2c3-8e86-48f7-ab8a-057700d8aadc","parentUUID":"72590670-0dc4-4aa9-a2e2-5f7396e7909e","isHook":false,"skipped":false}],"suites":[],"passes":["4036e2c3-8e86-48f7-ab8a-057700d8aadc"],"failures":[],"pending":[],"skipped":[],"duration":448,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f57d64ca-8ab3-430d-b52d-2da434ad96c8","title":"","fullFile":"cypress/e2e/3. ContentService/01. ContentFlow/3.01.1 getCourseContent.cy.js","file":"cypress/e2e/3. ContentService/01. ContentFlow/3.01.1 getCourseContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"82cfc544-6251-4754-8020-c33a0344cd19","title":"Get course content by category successfully with status code 200","fullFile":"cypress/e2e/3. ContentService/01. ContentFlow/3.01.1 getCourseContent.cy.js","file":"cypress/e2e/3. ContentService/01. ContentFlow/3.01.1 getCourseContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get course data or not","fullTitle":"Get course content by category successfully with status code 200 Checking if should be able get course data or not","timedOut":null,"duration":437,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/content/getbycourse/${category}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course data Response:\", response.body);\n    console.log(\"Get course data Response:\", response.body);\n  } else {\n    cy.log(\"Get course data failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"02a672f1-a83c-4cdc-8571-4c2985902c89","parentUUID":"82cfc544-6251-4754-8020-c33a0344cd19","isHook":false,"skipped":false}],"suites":[],"passes":["02a672f1-a83c-4cdc-8571-4c2985902c89"],"failures":[],"pending":[],"skipped":[],"duration":437,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ca1f5736-415d-448f-b4b0-2d210758f8f3","title":"","fullFile":"cypress/e2e/3. ContentService/01. ContentFlow/3.01.2 getContentById.cy.js","file":"cypress/e2e/3. ContentService/01. ContentFlow/3.01.2 getContentById.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"990b7be1-61d3-400b-9146-0540265de1ed","title":"Get content by content Id successfully with status code 200","fullFile":"cypress/e2e/3. ContentService/01. ContentFlow/3.01.2 getContentById.cy.js","file":"cypress/e2e/3. ContentService/01. ContentFlow/3.01.2 getContentById.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get content by content Id or not","fullTitle":"Get content by content Id successfully with status code 200 Checking if should be able get content by content Id or not","timedOut":null,"duration":577,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/content/getcontent/${courseId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course by course Id Response:\", response.body);\n    console.log(\"Get course data by course id Response:\", response.body);\n  } else {\n    cy.log(\"Get content by content Id failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b4b84471-2fa3-4020-a5ef-d578235e11d7","parentUUID":"990b7be1-61d3-400b-9146-0540265de1ed","isHook":false,"skipped":false}],"suites":[],"passes":["b4b84471-2fa3-4020-a5ef-d578235e11d7"],"failures":[],"pending":[],"skipped":[],"duration":577,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"632b7158-c9f0-4bdb-b66d-9014b0201633","title":"","fullFile":"cypress/e2e/3. ContentService/01. ContentFlow/3.01.3 getLabContent.cy.js","file":"cypress/e2e/3. ContentService/01. ContentFlow/3.01.3 getLabContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"0b017522-ec6f-4517-9ca2-84b3042aa4ce","title":"Get Lab Content successfully with status code 200","fullFile":"cypress/e2e/3. ContentService/01. ContentFlow/3.01.3 getLabContent.cy.js","file":"cypress/e2e/3. ContentService/01. ContentFlow/3.01.3 getLabContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get Lab Content or not","fullTitle":"Get Lab Content successfully with status code 200 Checking if should be able get Lab Content or not","timedOut":null,"duration":428,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/content/labcontent\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get lab content Response:\", response.body);\n    console.log(\"Get lab content Response:\", response.body);\n  } else {\n    cy.log(\"Get lab content failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"d78b7605-f041-41e9-a5b1-3333675d5229","parentUUID":"0b017522-ec6f-4517-9ca2-84b3042aa4ce","isHook":false,"skipped":false}],"suites":[],"passes":["d78b7605-f041-41e9-a5b1-3333675d5229"],"failures":[],"pending":[],"skipped":[],"duration":428,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"662bb200-9963-4cfe-8d16-561553f98e4f","title":"","fullFile":"cypress/e2e/3. ContentService/02. CommunityFlow/3.02.1 GetCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. CommunityFlow/3.02.1 GetCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"72105c35-f4e1-459d-9727-1bdb02a56272","title":"Get all community post successfully with status code 200","fullFile":"cypress/e2e/3. ContentService/02. CommunityFlow/3.02.1 GetCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. CommunityFlow/3.02.1 GetCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get Lab Content or not","fullTitle":"Get all community post successfully with status code 200 Checking if should be able get Lab Content or not","timedOut":null,"duration":418,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/community/post/getall\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    // \"page\": \"1\",\n    // \"limit\": \"10\",\n    // \"query\": \"\",\n    // \"tags\": [],\n    // \"user\": \"\",\n    // \"filterBy\": \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get lab content Response:\", response.body);\n    console.log(\"Get lab content Response:\", response.body);\n  } else {\n    cy.log(\"Get lab content failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"3ed7bbe1-2cf3-4e95-8253-034126c993e3","parentUUID":"72105c35-f4e1-459d-9727-1bdb02a56272","isHook":false,"skipped":false}],"suites":[],"passes":["3ed7bbe1-2cf3-4e95-8253-034126c993e3"],"failures":[],"pending":[],"skipped":[],"duration":418,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"c85a282f-587e-4ed6-9737-04ca3193e4cd","title":"","fullFile":"cypress/e2e/3. ContentService/02. CommunityFlow/3.02.2 createCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. CommunityFlow/3.02.2 createCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"117b0651-5461-441a-80b8-469de0889cef","title":"Create community post successfully with status code 200","fullFile":"cypress/e2e/3. ContentService/02. CommunityFlow/3.02.2 createCommunityPost.cy.js","file":"cypress/e2e/3. ContentService/02. CommunityFlow/3.02.2 createCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able create community post or not","fullTitle":"Create community post successfully with status code 200 Checking if should be able create community post or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/community/post/create\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    title: faker.lorem,\n    description: faker.lorem,\n    attachments: [],\n    tags: []\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Create community post Response:\", response.body);\n    console.log(\"Create community post Response:\", response.body);\n  } else {\n    cy.log(\"Create community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"305e2ef3-23a3-4e4d-b3cb-31c34b3587d7","parentUUID":"117b0651-5461-441a-80b8-469de0889cef","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["305e2ef3-23a3-4e4d-b3cb-31c34b3587d7"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"9e86db9f-a41e-4b12-82db-66c9ed14611e","title":"","fullFile":"cypress/e2e/5. CommonService/01. MyNavigation/5.01.1 getMyNavigation.cy.js","file":"cypress/e2e/5. CommonService/01. MyNavigation/5.01.1 getMyNavigation.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"15a2827c-dcde-480e-8f1c-04343fd1db0d","title":"Get my navigation successfully with status code 200","fullFile":"cypress/e2e/5. CommonService/01. MyNavigation/5.01.1 getMyNavigation.cy.js","file":"cypress/e2e/5. CommonService/01. MyNavigation/5.01.1 getMyNavigation.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get my navigation or not","fullTitle":"Get my navigation successfully with status code 200 Checking if should be able get my navigation or not","timedOut":null,"duration":542,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/navigation/mynavigations\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my navigation Response:\", response.body);\n    console.log(\"get may navigation post Response:\", response.body);\n  } else {\n    cy.log(\"Get my navigation failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"577c2eed-6430-4209-93a4-3b2623ae524f","parentUUID":"15a2827c-dcde-480e-8f1c-04343fd1db0d","isHook":false,"skipped":false}],"suites":[],"passes":["577c2eed-6430-4209-93a4-3b2623ae524f"],"failures":[],"pending":[],"skipped":[],"duration":542,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"818dccf9-0faa-4f40-b02e-d495eed63ece","title":"","fullFile":"cypress/e2e/6. ChatService/01. MyChats/6.01.1 myChats.cy.js","file":"cypress/e2e/6. ChatService/01. MyChats/6.01.1 myChats.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"d0e9f56c-a2a1-4c07-a860-fe283019a5a7","title":"My all chats with status code 200","fullFile":"cypress/e2e/6. ChatService/01. MyChats/6.01.1 myChats.cy.js","file":"cypress/e2e/6. ChatService/01. MyChats/6.01.1 myChats.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get my all chats or not","fullTitle":"My all chats with status code 200 Checking if should be able get my all chats or not","timedOut":null,"duration":457,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/chat/mychats\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(3000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"get my chats Response:\", response.body);\n  } else {\n    cy.log(\"Get my chats failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"cac505fd-f269-4a1c-8a23-93a2004b199d","parentUUID":"d0e9f56c-a2a1-4c07-a860-fe283019a5a7","isHook":false,"skipped":false}],"suites":[],"passes":["cac505fd-f269-4a1c-8a23-93a2004b199d"],"failures":[],"pending":[],"skipped":[],"duration":457,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"3ad375b5-9dd3-489b-bd08-a0c337f6d6cc","title":"","fullFile":"cypress/e2e/6. ChatService/02. FindOrCreateChatsByUser/6.02.1 findOrCreateChatsByUser.cy.js","file":"cypress/e2e/6. ChatService/02. FindOrCreateChatsByUser/6.02.1 findOrCreateChatsByUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"0611ff12-fa77-490c-969b-85fd0eb46246","title":"Find or Create chats by user with status code 200","fullFile":"cypress/e2e/6. ChatService/02. FindOrCreateChatsByUser/6.02.1 findOrCreateChatsByUser.cy.js","file":"cypress/e2e/6. ChatService/02. FindOrCreateChatsByUser/6.02.1 findOrCreateChatsByUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Find or Create chats by user or not","fullTitle":"Find or Create chats by user with status code 200 Checking if should be able Find or Create chats by user or not","timedOut":null,"duration":459,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/findorcreate/${userId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {},\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(3000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Find or Create chats by user Response:\", response.body);\n  } else {\n    cy.log(\"Find or Create chats by user failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"ef36db02-1fcb-4547-b7fa-d530e64130f4","parentUUID":"0611ff12-fa77-490c-969b-85fd0eb46246","isHook":false,"skipped":false}],"suites":[],"passes":["ef36db02-1fcb-4547-b7fa-d530e64130f4"],"failures":[],"pending":[],"skipped":[],"duration":459,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f1f091b7-5a8f-40b2-9321-e921cda861a0","title":"","fullFile":"cypress/e2e/6. ChatService/03. FetchChatMessage/6.03.1 fetchChatMessage.cy.js","file":"cypress/e2e/6. ChatService/03. FetchChatMessage/6.03.1 fetchChatMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"3c76ecfb-0154-4801-a3c8-dff3d3518281","title":"Fetch the chat message with status code 200","fullFile":"cypress/e2e/6. ChatService/03. FetchChatMessage/6.03.1 fetchChatMessage.cy.js","file":"cypress/e2e/6. ChatService/03. FetchChatMessage/6.03.1 fetchChatMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Fetch the chat message or not","fullTitle":"Fetch the chat message with status code 200 Checking if should be able Fetch the chat message or not","timedOut":null,"duration":509,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/messages`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    page: 1,\n    chat: chatId,\n    limit: 5\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(7000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Fetch the chat message Response:\", response.body);\n  } else {\n    cy.log(\"Fetch the chat message failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"ce4e9121-6b8b-4770-aa94-0acf4218a906","parentUUID":"3c76ecfb-0154-4801-a3c8-dff3d3518281","isHook":false,"skipped":false}],"suites":[],"passes":["ce4e9121-6b8b-4770-aa94-0acf4218a906"],"failures":[],"pending":[],"skipped":[],"duration":509,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"7ba9c435-36e1-442e-b09b-421de5ce1552","title":"","fullFile":"cypress/e2e/6. ChatService/04. AddUserToChnnel/6.04.1 addUserToChannel.cy.js","file":"cypress/e2e/6. ChatService/04. AddUserToChnnel/6.04.1 addUserToChannel.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"90c433cc-5001-426c-b0ac-aa5ad744a6b3","title":"Add member to channel with status code 200","fullFile":"cypress/e2e/6. ChatService/04. AddUserToChnnel/6.04.1 addUserToChannel.cy.js","file":"cypress/e2e/6. ChatService/04. AddUserToChnnel/6.04.1 addUserToChannel.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Add member to channel or not","fullTitle":"Add member to channel with status code 200 Checking if should be able Add member to channel or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/chat/channel/adduser/${chatId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n    // Organization: organizationId,\n  },\n  body: {\n    member: memberId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Add member to channel Response:\", response.body);\n  } else {\n    cy.log(\"Add member to channel failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"8eace2b0-e46e-424f-b39d-3593d16903cf","parentUUID":"90c433cc-5001-426c-b0ac-aa5ad744a6b3","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["8eace2b0-e46e-424f-b39d-3593d16903cf"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"5081eafe-3025-47f7-ae95-3fa8ba1bcaa9","title":"","fullFile":"cypress/e2e/6. ChatService/05. GetChatMembers/6.05.1 getChatMembers.cy.js","file":"cypress/e2e/6. ChatService/05. GetChatMembers/6.05.1 getChatMembers.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"fd02ad06-920a-4e6f-9f41-31fc71901d43","title":"Get the chat members with status code 200","fullFile":"cypress/e2e/6. ChatService/05. GetChatMembers/6.05.1 getChatMembers.cy.js","file":"cypress/e2e/6. ChatService/05. GetChatMembers/6.05.1 getChatMembers.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get the chat members or not","fullTitle":"Get the chat members with status code 200 Checking if should be able Get the chat members or not","timedOut":null,"duration":501,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/members/${chatId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n    // Organization: organizationId,\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Get the chat members Response:\", response.body);\n  } else {\n    cy.log(\"Get the chat members failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"d7d5e576-7488-4bef-a09c-c78966cd74a5","parentUUID":"fd02ad06-920a-4e6f-9f41-31fc71901d43","isHook":false,"skipped":false}],"suites":[],"passes":["d7d5e576-7488-4bef-a09c-c78966cd74a5"],"failures":[],"pending":[],"skipped":[],"duration":501,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"2e5b0643-a25d-42c6-9ef8-1661a2f25532","title":"","fullFile":"cypress/e2e/6. ChatService/06. SearchChatMembers/6.06.1 searchChatMembers.cy.js","file":"cypress/e2e/6. ChatService/06. SearchChatMembers/6.06.1 searchChatMembers.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"c18cf5a3-d16f-49f4-8483-885856228da5","title":"Search chat members with status code 200","fullFile":"cypress/e2e/6. ChatService/06. SearchChatMembers/6.06.1 searchChatMembers.cy.js","file":"cypress/e2e/6. ChatService/06. SearchChatMembers/6.06.1 searchChatMembers.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Search chat members or not","fullTitle":"Search chat members with status code 200 Checking if should be able Search chat members or not","timedOut":null,"duration":442,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/members/${chatId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n    // Organization: organizationId,\n  },\n  body: {\n    query: \"anonno\",\n    limit: 5\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Search chat members Response:\", response.body);\n  } else {\n    cy.log(\"Search chat members failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"cc01f429-c9f4-4835-bd6f-540a27cba25b","parentUUID":"c18cf5a3-d16f-49f4-8483-885856228da5","isHook":false,"skipped":false}],"suites":[],"passes":["cc01f429-c9f4-4835-bd6f-540a27cba25b"],"failures":[],"pending":[],"skipped":[],"duration":442,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"b07de31c-a320-4bfa-a173-8d428e2f6b6f","title":"","fullFile":"cypress/e2e/6. ChatService/07. Update Member Role/6.07.1 updateMemberRole.cy.js","file":"cypress/e2e/6. ChatService/07. Update Member Role/6.07.1 updateMemberRole.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"3fa30889-feb3-4b43-858e-85bf2c88d4ce","title":"Update member role with status code 200","fullFile":"cypress/e2e/6. ChatService/07. Update Member Role/6.07.1 updateMemberRole.cy.js","file":"cypress/e2e/6. ChatService/07. Update Member Role/6.07.1 updateMemberRole.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Update member role or not","fullTitle":"Update member role with status code 200 Checking if should be able Update member role or not","timedOut":null,"duration":449,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/chat/member/update\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n    // Organization: organizationId,\n  },\n  body: {\n    member: memberId,\n    role: \"moderator\",\n    chat: chatId,\n    actionType: \"role\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Update member role Response:\", response.body);\n  } else {\n    cy.log(\"Update member role failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"a0b0b919-22b8-46d8-b185-c79bfa4629c4","parentUUID":"3fa30889-feb3-4b43-858e-85bf2c88d4ce","isHook":false,"skipped":false}],"suites":[],"passes":["a0b0b919-22b8-46d8-b185-c79bfa4629c4"],"failures":[],"pending":[],"skipped":[],"duration":449,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"698a27ef-d737-4e33-a260-df57bab71c4c","title":"","fullFile":"cypress/e2e/1. UserService/02. UpdateImage/1.02.1 updateImage.cy.js","file":"cypress/e2e/1. UserService/02. UpdateImage/1.02.1 updateImage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"a02f92fd-afe4-445f-9bfd-d43568258ea7","title":"Update Profile Picture API","fullFile":"cypress/e2e/1. UserService/02. UpdateImage/1.02.1 updateImage.cy.js","file":"cypress/e2e/1. UserService/02. UpdateImage/1.02.1 updateImage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Should successfully update the profile picture","fullTitle":"Update Profile Picture API Should successfully update the profile picture","timedOut":null,"duration":1605,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"const imagePath = \"/images/image1.png\";\ncy.fixture(imagePath, \"binary\").then(Cypress.Blob.binaryStringToBlob).then(blob => {\n  const formData = new FormData();\n  formData.append(\"image\", blob, \"image1.png\");\n  // Send PATCH request with FormData\n  return cy.request({\n    method: \"PATCH\",\n    url: \"/user/updateimage\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    },\n    body: formData,\n    failOnStatusCode: false\n  });\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    cy.log(\"Profile picture updated successfully\");\n    //   cy.log(JSON.stringify(response.body, null, 2));\n  } else {\n    cy.log(\"Profile picture update failed with status code: \", response.status);\n    cy.log(response.body.error || \"Unknown error\");\n  }\n});","err":{},"uuid":"e6477a26-4aa5-4799-be94-5a9d1c006ef4","parentUUID":"a02f92fd-afe4-445f-9bfd-d43568258ea7","isHook":false,"skipped":false}],"suites":[],"passes":["e6477a26-4aa5-4799-be94-5a9d1c006ef4"],"failures":[],"pending":[],"skipped":[],"duration":1605,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000}],"meta":{"mocha":{"version":"7.0.1"},"mochawesome":{"options":{"quiet":true,"reportFilename":"mochawesome","saveHtml":false,"saveJson":true,"consoleReporter":"spec","useInlineDiffs":false,"code":true},"version":"7.1.3"},"marge":{"options":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true,"overwrite":false,"html":false,"json":true,"reportDir":"cypress/reports/html/.jsons"},"version":"6.2.0"}}}
HTML result: ["/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/reports/html/index.html",null]

done
