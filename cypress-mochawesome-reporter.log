start cypress-mochawesome-reporter 3.8.2
cwd: /Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation
cypress.json: {"configFile":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress.config.js","testingType":"e2e","projectId":"8axud3","reporter":"cypress-mochawesome-reporter","reporterOptions":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true,"reportDir":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/reports/html"},"baseUrl":"https://staging-api.bootcampshub.ai/api","setupNodeEvents":"[Function setupNodeEvents]","projectRoot":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation","projectName":"BootcampsHub-App-API-Automation","repoRoot":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation","rawJson":{"projectId":"8axud3","reporter":"cypress-mochawesome-reporter","reporterOptions":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true},"e2e":{"baseUrl":"https://staging-api.bootcampshub.ai/api","setupNodeEvents":"[Function setupNodeEvents]"},"baseUrl":"https://staging-api.bootcampshub.ai/api","setupNodeEvents":"[Function setupNodeEvents]","envFile":{},"projectRoot":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation","projectName":"BootcampsHub-App-API-Automation","repoRoot":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation"},"morgan":false,"isTextTerminal":true,"socketId":"l1tys79jao","report":true,"animationDistanceThreshold":5,"arch":"x64","blockHosts":null,"chromeWebSecurity":true,"clientCertificates":[],"defaultCommandTimeout":4000,"downloadsFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/downloads","env":{},"execTimeout":60000,"experimentalCspAllowList":false,"experimentalFetchPolyfill":false,"experimentalInteractiveRunEvents":false,"experimentalRunAllSpecs":false,"experimentalMemoryManagement":false,"experimentalModifyObstructiveThirdPartyCode":false,"experimentalSkipDomainInjection":null,"experimentalJustInTimeCompile":false,"experimentalOriginDependencies":false,"experimentalSourceRewriting":false,"experimentalSingleTabRunMode":false,"experimentalStudio":false,"experimentalWebKitSupport":false,"fileServerFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation","fixturesFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/fixtures","excludeSpecPattern":"*.hot-update.js","includeShadowDom":false,"keystrokeDelay":0,"modifyObstructiveCode":true,"numTestsKeptInMemory":0,"platform":"darwin","pageLoadTimeout":60000,"port":56662,"redirectionLimit":20,"requestTimeout":5000,"resolvedNodePath":"/usr/local/bin/node","resolvedNodeVersion":"20.18.0","responseTimeout":30000,"retries":{"runMode":0,"openMode":0},"screenshotOnRunFailure":true,"screenshotsFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/screenshots","slowTestThreshold":10000,"scrollBehavior":"top","supportFile":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/support/e2e.js","supportFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/support","taskTimeout":60000,"testIsolation":true,"trashAssetsBeforeRuns":true,"userAgent":null,"video":false,"videoCompression":false,"videosFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/videos","viewportHeight":660,"viewportWidth":1000,"waitForAnimations":true,"watchForFileChanges":false,"specPattern":"cypress/e2e/**/*.cy.{js,jsx,ts,tsx}","additionalIgnorePattern":[],"autoOpen":false,"browsers":[{"name":"chrome","family":"chromium","channel":"stable","displayName":"Chrome","version":"131.0.6778.86","path":"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome","minSupportedVersion":64,"majorVersion":"131"},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"118.0.5993.159","path":"","majorVersion":118}],"clientRoute":"/__/","cypressBinaryRoot":"/Users/anonno/Library/Caches/Cypress/13.15.2/Cypress.app/Contents/Resources/app","devServerPublicPathRoute":"/__cypress/src","hosts":null,"isInteractive":true,"namespace":"__cypress","reporterRoute":"/__cypress/reporter","socketIoCookie":"__socket","socketIoRoute":"/__socket","version":"13.15.2","protocolEnabled":false,"hideCommandLog":false,"hideRunnerUi":false,"cypressEnv":"production","resolved":{"animationDistanceThreshold":{"value":5,"from":"default"},"arch":{"value":"x64","from":"default"},"baseUrl":{"value":"https://staging-api.bootcampshub.ai/api","from":"config"},"blockHosts":{"value":null,"from":"default"},"chromeWebSecurity":{"value":true,"from":"default"},"clientCertificates":{"value":[],"from":"default"},"defaultCommandTimeout":{"value":4000,"from":"default"},"downloadsFolder":{"value":"cypress/downloads","from":"default"},"env":{},"execTimeout":{"value":60000,"from":"default"},"experimentalCspAllowList":{"value":false,"from":"default"},"experimentalFetchPolyfill":{"value":false,"from":"default"},"experimentalInteractiveRunEvents":{"value":false,"from":"default"},"experimentalRunAllSpecs":{"value":false,"from":"default"},"experimentalMemoryManagement":{"value":false,"from":"default"},"experimentalModifyObstructiveThirdPartyCode":{"value":false,"from":"default"},"experimentalSkipDomainInjection":{"value":null,"from":"default"},"experimentalJustInTimeCompile":{"value":false,"from":"default"},"experimentalOriginDependencies":{"value":false,"from":"default"},"experimentalSourceRewriting":{"value":false,"from":"default"},"experimentalSingleTabRunMode":{"value":false,"from":"default"},"experimentalStudio":{"value":false,"from":"default"},"experimentalWebKitSupport":{"value":false,"from":"default"},"fileServerFolder":{"value":"","from":"default"},"fixturesFolder":{"value":"cypress/fixtures","from":"default"},"excludeSpecPattern":{"value":"*.hot-update.js","from":"default"},"includeShadowDom":{"value":false,"from":"default"},"keystrokeDelay":{"value":0,"from":"default"},"modifyObstructiveCode":{"value":true,"from":"default"},"numTestsKeptInMemory":{"value":0,"from":"config"},"platform":{"value":"darwin","from":"default"},"pageLoadTimeout":{"value":60000,"from":"default"},"port":{"value":null,"from":"default"},"projectId":{"value":"8axud3","from":"config"},"redirectionLimit":{"value":20,"from":"default"},"reporter":{"value":"cypress-mochawesome-reporter","from":"config"},"reporterOptions":{"value":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true},"from":"config"},"requestTimeout":{"value":5000,"from":"default"},"resolvedNodePath":{"value":null,"from":"default"},"resolvedNodeVersion":{"value":null,"from":"default"},"responseTimeout":{"value":30000,"from":"default"},"retries":{"value":{"runMode":0,"openMode":0},"from":"default"},"screenshotOnRunFailure":{"value":true,"from":"default"},"screenshotsFolder":{"value":"cypress/screenshots","from":"default"},"slowTestThreshold":{"value":10000,"from":"default"},"scrollBehavior":{"value":"top","from":"default"},"supportFile":{"value":"cypress/support/e2e.{js,jsx,ts,tsx}","from":"default"},"supportFolder":{"value":false,"from":"default"},"taskTimeout":{"value":60000,"from":"default"},"testIsolation":{"value":true,"from":"default"},"trashAssetsBeforeRuns":{"value":true,"from":"default"},"userAgent":{"value":null,"from":"default"},"video":{"value":false,"from":"default"},"videoCompression":{"value":false,"from":"default"},"videosFolder":{"value":"cypress/videos","from":"default"},"viewportHeight":{"value":660,"from":"default"},"viewportWidth":{"value":1000,"from":"default"},"waitForAnimations":{"value":true,"from":"default"},"watchForFileChanges":{"value":false,"from":"config"},"specPattern":{"value":"cypress/e2e/**/*.cy.{js,jsx,ts,tsx}","from":"default"},"browsers":{"value":[{"name":"chrome","family":"chromium","channel":"stable","displayName":"Chrome","version":"131.0.6778.86","path":"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome","minSupportedVersion":64,"majorVersion":"131"},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"118.0.5993.159","path":"","majorVersion":118,"isHeadless":true,"isHeaded":false}],"from":"runtime"},"hosts":{"value":null,"from":"default"},"isInteractive":{"value":true,"from":"default"},"configFile":{"value":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress.config.js","from":"plugin"},"testingType":{"value":"e2e","from":"plugin"}},"remote":{"origin":"https://staging-api.bootcampshub.ai","strategy":"http","fileServer":null,"domainName":"bootcampshub.ai","props":{"port":"443","protocol":"https:","subdomain":"staging-api","domain":"bootcampshub","tld":"ai"}},"browser":null,"specs":[],"proxyUrl":"http://localhost:56662","browserUrl":"https://staging-api.bootcampshub.ai/__/","reporterUrl":"https://staging-api.bootcampshub.ai/__cypress/reporter","proxyServer":"http://localhost:56662","state":{}}
simple config: {"jsonDir":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/reports/html/.jsons","reporterOptions":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true,"reportDir":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/reports/html"},"screenshotsDir":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/screenshots","videosFolder":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/videos","outputDir":"/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/reports/html","removeJsonsFolderAfterMerge":true}
report before enhance: {"stats":{"suites":6,"tests":6,"passes":1,"pending":4,"failures":1,"testsRegistered":6,"passPercent":16.666666666666668,"pendingPercent":66.66666666666667,"other":0,"hasOther":false,"skipped":0,"hasSkipped":false,"start":"2024-11-23T12:30:30.197Z","end":"2024-11-23T12:30:53.022Z","duration":22825},"results":[{"uuid":"89e8b38d-dcf0-4388-b057-f7f85b09d78f","title":"","fullFile":"cypress/e2e/1. Auth/1.2 verifyUser.cy.js","file":"cypress/e2e/1. Auth/1.2 verifyUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"15f04efd-8c4f-4f02-9266-b3f745b734b1","title":"As a student I should be able to verify user successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to verify user","fullTitle":"As a student I should be able to verify user successfully with status code 200 should be able to verify user","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"const otp = \"863182\"; // OTP should match the one received via email\ncy.request({\n  method: \"POST\",\n  url: \"/user/verify\",\n  body: {\n    otp: otp,\n    channel: \"email\",\n    userId: studentID // Use student ID obtained from fixture\n  }\n}).then(response => {\n  if (response.status === 200) {\n    cy.log(\"Verification successful\"); // Log successful verification\n    console.log(\"Verification successful\");\n    // Assertions\n    expect(response.status).to.eq(200); // Check if the status code is 200\n    expect(response.body).to.have.property(\"success\", true); // Check if the success property is true\n    expect(response.duration).to.be.lessThan(2000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"b18c1f7a-2f83-4a23-af76-f4cb2a2cc995","parentUUID":"15f04efd-8c4f-4f02-9266-b3f745b734b1","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["b18c1f7a-2f83-4a23-af76-f4cb2a2cc995"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"775ec1da-5347-40b2-af91-c00550f36748","title":"","fullFile":"cypress/e2e/1. Auth/1.3 forgotPassword.cy.js","file":"cypress/e2e/1. Auth/1.3 forgotPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"79338ecd-ecc1-47ce-8658-fdc7e10eb004","title":"As a student, I should be able to use my forgot password functionality if I forgot my password successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if a user can use forgot password functionality in the browser or not","fullTitle":"As a student, I should be able to use my forgot password functionality if I forgot my password successfully with status code 200 Checking if a user can use forgot password functionality in the browser or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/password/forgot\",\n  body: {\n    phone: studentNumber,\n    email: studentEmail,\n    channel: \"email\"\n  },\n  failOnStatusCode: false // Handle non-2xx status codes manually\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200); // Check if the status code is 200\n    expect(response.body).to.have.property(\"success\", true); // Check if the success property is true\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"isOtpSend\", true);\n    // Log the response for debugging\n    cy.log(\"Forgot Password Response:\", response.body);\n    console.log(\"Forgot Password Response:\", response.body);\n  } else {\n    cy.log(\"Forgot password failed due to: \", response.body.error);\n  }\n});","err":{},"uuid":"f7150f58-138c-43d6-9902-e596c3658d66","parentUUID":"79338ecd-ecc1-47ce-8658-fdc7e10eb004","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["f7150f58-138c-43d6-9902-e596c3658d66"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"232fd66f-2bd5-4286-a48b-43045f6ce5b2","title":"","fullFile":"cypress/e2e/1. Auth/1.4 sendOtp.cy.js","file":"cypress/e2e/1. Auth/1.4 sendOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"e17c37b2-c4f7-4413-9539-af6bbeed739d","title":"As a student I should be able to get OTP on my email successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Should be able to send OTP to email","fullTitle":"As a student I should be able to get OTP on my email successfully with status code 200 Should be able to send OTP to email","timedOut":null,"duration":1128,"state":"failed","speed":null,"pass":false,"fail":true,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/sendotp\",\n  body: {\n    userId: studentID,\n    channel: \"email\",\n    captchaToken: \"\"\n  }\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    cy.log(\"OTP sent successfully\");\n    // Assertions\n    expect(response.status).to.eq(200); // Check if the status code is 200\n    expect(response.body).to.have.property(\"success\", true); // Check if the success property is true\n    expect(response.duration).to.be.lessThan(2000);\n  } else {\n    // Handle unsuccessful request\n    cy.log(\"Failed to send OTP\");\n    cy.log(`Failed to send OTP. Status code: ${response.status}`);\n    cy.log(response.body.error);\n  }\n});","err":{"message":"CypressError: `cy.request()` failed on:\n\nhttps://staging-api.bootcampshub.ai/api/user/sendotp\n\nThe response we received from your web server was:\n\n  > 400: Bad Request\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://staging-api.bootcampshub.ai/api/user/sendotp\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.15.2 Chrome/118.0.5993.159 Electron/27.3.10 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 37\n}\nBody: {\"channel\":\"email\",\"captchaToken\":\"\"}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 400 - Bad Request\nHeaders: {\n  \"date\": \"Sat, 23 Nov 2024 12:30:42 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"42\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"2a-FQG5794dbhTyRwgytQ7rokul7mM\\\"\",\n  \"strict-transport-security\": \"max-age=15724800; includeSubDomains\"\n}\nBody: {\n  \"success\": false,\n  \"error\": \"User not found\"\n}\n\n\nhttps://on.cypress.io/request","estack":"CypressError: `cy.request()` failed on:\n\nhttps://staging-api.bootcampshub.ai/api/user/sendotp\n\nThe response we received from your web server was:\n\n  > 400: Bad Request\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://staging-api.bootcampshub.ai/api/user/sendotp\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.15.2 Chrome/118.0.5993.159 Electron/27.3.10 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 37\n}\nBody: {\"channel\":\"email\",\"captchaToken\":\"\"}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 400 - Bad Request\nHeaders: {\n  \"date\": \"Sat, 23 Nov 2024 12:30:42 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"42\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"2a-FQG5794dbhTyRwgytQ7rokul7mM\\\"\",\n  \"strict-transport-security\": \"max-age=15724800; includeSubDomains\"\n}\nBody: {\n  \"success\": false,\n  \"error\": \"User not found\"\n}\n\n\nhttps://on.cypress.io/request\n    at <unknown> (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:132719:72)\n    at tryCatcher (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:1701:18)\n    at _drainQueueStep (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://bootcamphub_app/./cypress/e2e/1. Auth/1.4 sendOtp.cy.js:11:7)","diff":null},"uuid":"2be2d518-8c46-4931-b63d-fb45624427c0","parentUUID":"e17c37b2-c4f7-4413-9539-af6bbeed739d","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":["2be2d518-8c46-4931-b63d-fb45624427c0"],"pending":[],"skipped":[],"duration":1128,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"a9a777ff-05ce-4346-959e-1cd5701bfce0","title":"","fullFile":"cypress/e2e/1. Auth/1.5 verifyOtp.cy.js","file":"cypress/e2e/1. Auth/1.5 verifyOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"3ef0d827-2bae-44ff-ac0b-da498d528279","title":"As a student I should be able to verify successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to verify","fullTitle":"As a student I should be able to verify successfully with status code 200 should be able to verify","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"const otp = \"654911\"; // Define OTP for verification\ncy.request({\n  method: \"POST\",\n  url: \"/user/verifyotp\",\n  body: {\n    otp: otp,\n    channel: \"email\",\n    userId: studentID // Use student ID obtained from fixture\n  }\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    cy.log(\"Verification successful\"); // Log successful verification\n    console.log(\"Verification successful\");\n    // Assertions\n    expect(response.status).to.eq(200); // Check if the status code is 200\n    expect(response.body).to.have.property(\"success\", true); // Check if the success property is true\n    expect(response.duration).to.be.lessThan(2000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"c5ecae23-510d-4d56-a3e6-e143de60ec44","parentUUID":"3ef0d827-2bae-44ff-ac0b-da498d528279","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["c5ecae23-510d-4d56-a3e6-e143de60ec44"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"7d91a391-3b5d-460a-8d24-fc0643326b81","title":"","fullFile":"cypress/e2e/1. Auth/1.6 resetPassword.cy.js","file":"cypress/e2e/1. Auth/1.6 resetPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"25205564-c1a0-47da-9a79-a3b5a12b2fb7","title":"As a student, I should be able to reset my password successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"As a student, I should be able to reset my password successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/password/reset\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    email: studentEmail,\n    phone: studentNumber,\n    channel: \"email\",\n    otp: \"268660\",\n    // User valid OTP\n    password: \"Ashraful186@\"\n  },\n  failOnStatusCode: false // Handle non-2xx status codes manually\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200); // Check if the status code is 200\n    expect(response.body).to.have.property(\"success\", true); // Check if the success property is true\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"18f50add-5e98-486b-ba82-70660ab341b9","parentUUID":"25205564-c1a0-47da-9a79-a3b5a12b2fb7","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["18f50add-5e98-486b-ba82-70660ab341b9"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"8b0e66fa-7ca8-4446-88bd-08dbfd55bd38","title":"","fullFile":"cypress/e2e/1. Auth/1.1 userLogin.cy.js","file":"cypress/e2e/1. Auth/1.1 userLogin.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"a022887c-8db1-4737-b56e-4c0ff1dca46d","title":"As a student I should be able to login to the portal with valid credential and get stats code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to login","fullTitle":"As a student I should be able to login to the portal with valid credential and get stats code 200 should be able to login","timedOut":null,"duration":1543,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/login\",\n  body: {\n    email: userEmail,\n    password: userPassword\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    const {\n      token,\n      user\n    } = response.body;\n    const studentToken = token;\n    const studentLoginID = user._id;\n    // Store token and login ID to fixtures\n    cy.writeFile(\"cypress/fixtures/studentToken.json\", {\n      studentLoginToken: studentToken\n    });\n    cy.writeFile(\"cypress/fixtures/studentLoginID.json\", {\n      LoginID: studentLoginID\n    });\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"token\");\n    expect(response.body.success).to.eq(true);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log token and login ID\n    cy.log(\"User Token:\", studentToken);\n    cy.log(\"User ID:\", studentLoginID);\n    console.log(\"User Token:\", studentToken);\n    console.log(\"User ID:\", studentLoginID);\n  } else {\n    // Handle unsuccessful login\n    cy.log(\"Login failed with status:\", response.status);\n    cy.log(`Login failed  ${response.body.error}`);\n    cy.log(`Login failed with status code ${response.status}`);\n  }\n});","err":{},"uuid":"98bd05f1-7021-4cf2-91d8-a060a7aeef40","parentUUID":"a022887c-8db1-4737-b56e-4c0ff1dca46d","isHook":false,"skipped":false}],"suites":[],"passes":["98bd05f1-7021-4cf2-91d8-a060a7aeef40"],"failures":[],"pending":[],"skipped":[],"duration":1543,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000}],"meta":{"mocha":{"version":"7.0.1"},"mochawesome":{"options":{"quiet":true,"reportFilename":"mochawesome","saveHtml":false,"saveJson":true,"consoleReporter":"spec","useInlineDiffs":false,"code":true},"version":"7.1.3"},"marge":{"options":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true,"overwrite":false,"html":false,"json":true,"reportDir":"cypress/reports/html/.jsons"},"version":"6.2.0"}}}
baseFolder: cypress/e2e/1. Auth
attach media for test "As a student I should be able to verify user successfully with status code 200 should be able to verify user"
no context
attach media for test "As a student, I should be able to use my forgot password functionality if I forgot my password successfully with status code 200 Checking if a user can use forgot password functionality in the browser or not"
no context
attach media for test "As a student I should be able to get OTP on my email successfully with status code 200 Should be able to send OTP to email"
no context
attach media for test "As a student I should be able to verify successfully with status code 200 should be able to verify"
no context
attach media for test "As a student, I should be able to reset my password successfully with status code 200 Checking if the user can reset their password or not"
no context
attach media for test "As a student I should be able to login to the portal with valid credential and get stats code 200 should be able to login"
no context
report after enhance: {"stats":{"suites":6,"tests":6,"passes":1,"pending":4,"failures":1,"testsRegistered":6,"passPercent":16.666666666666668,"pendingPercent":66.66666666666667,"other":0,"hasOther":false,"skipped":0,"hasSkipped":false,"start":"2024-11-23T12:30:30.197Z","end":"2024-11-23T12:30:53.022Z","duration":22825},"results":[{"uuid":"89e8b38d-dcf0-4388-b057-f7f85b09d78f","title":"","fullFile":"cypress/e2e/1. Auth/1.2 verifyUser.cy.js","file":"cypress/e2e/1. Auth/1.2 verifyUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"15f04efd-8c4f-4f02-9266-b3f745b734b1","title":"As a student I should be able to verify user successfully with status code 200","fullFile":"cypress/e2e/1. Auth/1.2 verifyUser.cy.js","file":"cypress/e2e/1. Auth/1.2 verifyUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to verify user","fullTitle":"As a student I should be able to verify user successfully with status code 200 should be able to verify user","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"const otp = \"863182\"; // OTP should match the one received via email\ncy.request({\n  method: \"POST\",\n  url: \"/user/verify\",\n  body: {\n    otp: otp,\n    channel: \"email\",\n    userId: studentID // Use student ID obtained from fixture\n  }\n}).then(response => {\n  if (response.status === 200) {\n    cy.log(\"Verification successful\"); // Log successful verification\n    console.log(\"Verification successful\");\n    // Assertions\n    expect(response.status).to.eq(200); // Check if the status code is 200\n    expect(response.body).to.have.property(\"success\", true); // Check if the success property is true\n    expect(response.duration).to.be.lessThan(2000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"b18c1f7a-2f83-4a23-af76-f4cb2a2cc995","parentUUID":"15f04efd-8c4f-4f02-9266-b3f745b734b1","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["b18c1f7a-2f83-4a23-af76-f4cb2a2cc995"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"775ec1da-5347-40b2-af91-c00550f36748","title":"","fullFile":"cypress/e2e/1. Auth/1.3 forgotPassword.cy.js","file":"cypress/e2e/1. Auth/1.3 forgotPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"79338ecd-ecc1-47ce-8658-fdc7e10eb004","title":"As a student, I should be able to use my forgot password functionality if I forgot my password successfully with status code 200","fullFile":"cypress/e2e/1. Auth/1.3 forgotPassword.cy.js","file":"cypress/e2e/1. Auth/1.3 forgotPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if a user can use forgot password functionality in the browser or not","fullTitle":"As a student, I should be able to use my forgot password functionality if I forgot my password successfully with status code 200 Checking if a user can use forgot password functionality in the browser or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/password/forgot\",\n  body: {\n    phone: studentNumber,\n    email: studentEmail,\n    channel: \"email\"\n  },\n  failOnStatusCode: false // Handle non-2xx status codes manually\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200); // Check if the status code is 200\n    expect(response.body).to.have.property(\"success\", true); // Check if the success property is true\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"isOtpSend\", true);\n    // Log the response for debugging\n    cy.log(\"Forgot Password Response:\", response.body);\n    console.log(\"Forgot Password Response:\", response.body);\n  } else {\n    cy.log(\"Forgot password failed due to: \", response.body.error);\n  }\n});","err":{},"uuid":"f7150f58-138c-43d6-9902-e596c3658d66","parentUUID":"79338ecd-ecc1-47ce-8658-fdc7e10eb004","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["f7150f58-138c-43d6-9902-e596c3658d66"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"232fd66f-2bd5-4286-a48b-43045f6ce5b2","title":"","fullFile":"cypress/e2e/1. Auth/1.4 sendOtp.cy.js","file":"cypress/e2e/1. Auth/1.4 sendOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"e17c37b2-c4f7-4413-9539-af6bbeed739d","title":"As a student I should be able to get OTP on my email successfully with status code 200","fullFile":"cypress/e2e/1. Auth/1.4 sendOtp.cy.js","file":"cypress/e2e/1. Auth/1.4 sendOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Should be able to send OTP to email","fullTitle":"As a student I should be able to get OTP on my email successfully with status code 200 Should be able to send OTP to email","timedOut":null,"duration":1128,"state":"failed","speed":null,"pass":false,"fail":true,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/sendotp\",\n  body: {\n    userId: studentID,\n    channel: \"email\",\n    captchaToken: \"\"\n  }\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    cy.log(\"OTP sent successfully\");\n    // Assertions\n    expect(response.status).to.eq(200); // Check if the status code is 200\n    expect(response.body).to.have.property(\"success\", true); // Check if the success property is true\n    expect(response.duration).to.be.lessThan(2000);\n  } else {\n    // Handle unsuccessful request\n    cy.log(\"Failed to send OTP\");\n    cy.log(`Failed to send OTP. Status code: ${response.status}`);\n    cy.log(response.body.error);\n  }\n});","err":{"message":"CypressError: `cy.request()` failed on:\n\nhttps://staging-api.bootcampshub.ai/api/user/sendotp\n\nThe response we received from your web server was:\n\n  > 400: Bad Request\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://staging-api.bootcampshub.ai/api/user/sendotp\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.15.2 Chrome/118.0.5993.159 Electron/27.3.10 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 37\n}\nBody: {\"channel\":\"email\",\"captchaToken\":\"\"}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 400 - Bad Request\nHeaders: {\n  \"date\": \"Sat, 23 Nov 2024 12:30:42 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"42\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"2a-FQG5794dbhTyRwgytQ7rokul7mM\\\"\",\n  \"strict-transport-security\": \"max-age=15724800; includeSubDomains\"\n}\nBody: {\n  \"success\": false,\n  \"error\": \"User not found\"\n}\n\n\nhttps://on.cypress.io/request","estack":"CypressError: `cy.request()` failed on:\n\nhttps://staging-api.bootcampshub.ai/api/user/sendotp\n\nThe response we received from your web server was:\n\n  > 400: Bad Request\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://staging-api.bootcampshub.ai/api/user/sendotp\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.15.2 Chrome/118.0.5993.159 Electron/27.3.10 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 37\n}\nBody: {\"channel\":\"email\",\"captchaToken\":\"\"}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 400 - Bad Request\nHeaders: {\n  \"date\": \"Sat, 23 Nov 2024 12:30:42 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"42\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"2a-FQG5794dbhTyRwgytQ7rokul7mM\\\"\",\n  \"strict-transport-security\": \"max-age=15724800; includeSubDomains\"\n}\nBody: {\n  \"success\": false,\n  \"error\": \"User not found\"\n}\n\n\nhttps://on.cypress.io/request\n    at <unknown> (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:132719:72)\n    at tryCatcher (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:1701:18)\n    at _drainQueueStep (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (https://staging-api.bootcampshub.ai/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://bootcamphub_app/./cypress/e2e/1. Auth/1.4 sendOtp.cy.js:11:7)","diff":null},"uuid":"2be2d518-8c46-4931-b63d-fb45624427c0","parentUUID":"e17c37b2-c4f7-4413-9539-af6bbeed739d","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":["2be2d518-8c46-4931-b63d-fb45624427c0"],"pending":[],"skipped":[],"duration":1128,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"a9a777ff-05ce-4346-959e-1cd5701bfce0","title":"","fullFile":"cypress/e2e/1. Auth/1.5 verifyOtp.cy.js","file":"cypress/e2e/1. Auth/1.5 verifyOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"3ef0d827-2bae-44ff-ac0b-da498d528279","title":"As a student I should be able to verify successfully with status code 200","fullFile":"cypress/e2e/1. Auth/1.5 verifyOtp.cy.js","file":"cypress/e2e/1. Auth/1.5 verifyOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to verify","fullTitle":"As a student I should be able to verify successfully with status code 200 should be able to verify","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"const otp = \"654911\"; // Define OTP for verification\ncy.request({\n  method: \"POST\",\n  url: \"/user/verifyotp\",\n  body: {\n    otp: otp,\n    channel: \"email\",\n    userId: studentID // Use student ID obtained from fixture\n  }\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    cy.log(\"Verification successful\"); // Log successful verification\n    console.log(\"Verification successful\");\n    // Assertions\n    expect(response.status).to.eq(200); // Check if the status code is 200\n    expect(response.body).to.have.property(\"success\", true); // Check if the success property is true\n    expect(response.duration).to.be.lessThan(2000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"c5ecae23-510d-4d56-a3e6-e143de60ec44","parentUUID":"3ef0d827-2bae-44ff-ac0b-da498d528279","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["c5ecae23-510d-4d56-a3e6-e143de60ec44"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"7d91a391-3b5d-460a-8d24-fc0643326b81","title":"","fullFile":"cypress/e2e/1. Auth/1.6 resetPassword.cy.js","file":"cypress/e2e/1. Auth/1.6 resetPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"25205564-c1a0-47da-9a79-a3b5a12b2fb7","title":"As a student, I should be able to reset my password successfully with status code 200","fullFile":"cypress/e2e/1. Auth/1.6 resetPassword.cy.js","file":"cypress/e2e/1. Auth/1.6 resetPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"As a student, I should be able to reset my password successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/password/reset\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    email: studentEmail,\n    phone: studentNumber,\n    channel: \"email\",\n    otp: \"268660\",\n    // User valid OTP\n    password: \"Ashraful186@\"\n  },\n  failOnStatusCode: false // Handle non-2xx status codes manually\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200); // Check if the status code is 200\n    expect(response.body).to.have.property(\"success\", true); // Check if the success property is true\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"18f50add-5e98-486b-ba82-70660ab341b9","parentUUID":"25205564-c1a0-47da-9a79-a3b5a12b2fb7","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["18f50add-5e98-486b-ba82-70660ab341b9"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"8b0e66fa-7ca8-4446-88bd-08dbfd55bd38","title":"","fullFile":"cypress/e2e/1. Auth/1.1 userLogin.cy.js","file":"cypress/e2e/1. Auth/1.1 userLogin.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"a022887c-8db1-4737-b56e-4c0ff1dca46d","title":"As a student I should be able to login to the portal with valid credential and get stats code 200","fullFile":"cypress/e2e/1. Auth/1.1 userLogin.cy.js","file":"cypress/e2e/1. Auth/1.1 userLogin.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to login","fullTitle":"As a student I should be able to login to the portal with valid credential and get stats code 200 should be able to login","timedOut":null,"duration":1543,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/login\",\n  body: {\n    email: userEmail,\n    password: userPassword\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    const {\n      token,\n      user\n    } = response.body;\n    const studentToken = token;\n    const studentLoginID = user._id;\n    // Store token and login ID to fixtures\n    cy.writeFile(\"cypress/fixtures/studentToken.json\", {\n      studentLoginToken: studentToken\n    });\n    cy.writeFile(\"cypress/fixtures/studentLoginID.json\", {\n      LoginID: studentLoginID\n    });\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"token\");\n    expect(response.body.success).to.eq(true);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log token and login ID\n    cy.log(\"User Token:\", studentToken);\n    cy.log(\"User ID:\", studentLoginID);\n    console.log(\"User Token:\", studentToken);\n    console.log(\"User ID:\", studentLoginID);\n  } else {\n    // Handle unsuccessful login\n    cy.log(\"Login failed with status:\", response.status);\n    cy.log(`Login failed  ${response.body.error}`);\n    cy.log(`Login failed with status code ${response.status}`);\n  }\n});","err":{},"uuid":"98bd05f1-7021-4cf2-91d8-a060a7aeef40","parentUUID":"a022887c-8db1-4737-b56e-4c0ff1dca46d","isHook":false,"skipped":false}],"suites":[],"passes":["98bd05f1-7021-4cf2-91d8-a060a7aeef40"],"failures":[],"pending":[],"skipped":[],"duration":1543,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000}],"meta":{"mocha":{"version":"7.0.1"},"mochawesome":{"options":{"quiet":true,"reportFilename":"mochawesome","saveHtml":false,"saveJson":true,"consoleReporter":"spec","useInlineDiffs":false,"code":true},"version":"7.1.3"},"marge":{"options":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true,"overwrite":false,"html":false,"json":true,"reportDir":"cypress/reports/html/.jsons"},"version":"6.2.0"}}}
HTML result: ["/Users/anonno/Desktop/Anonno/BootcampsHub-App-API-Automation/cypress/reports/html/index.html",null]
done
